<snippet>
<content><![CDATA[
${1:# arguments: extra arguments for exchange. If defined this argument is a key/value dictionary 
# auto_delete: if the exchange should delete itself after all queues/exchanges unbound from it 
# durable: whether exchange is durable or not 
# exchange_type: type for the exchange 
# internal: exchange is available only for other exchanges 
# login_host: rabbitMQ host for connection 
# login_password: rabbitMQ password for connection 
# login_port: rabbitMQ management api port 
# login_user: rabbitMQ user for connection 
# name: (required) Name of the exchange to create 
# state: Whether the exchange should be present or absent Only present implemented atm 
# vhost: rabbitMQ virtual host 
}- name: ${2:Name for rabbitmq_exchange module.}
  rabbitmq_exchange:
${3:   ${4:arguments}: ${5:"#"}}
${6:   ${7:auto_delete}: ${8:"#"}}
${9:   ${10:durable}: ${11:"#"}}
${12:   ${13:exchange_type}: ${14:"#"}}
${15:   ${16:internal}: ${17:"#"}}
${18:   ${19:login_host}: ${20:"#"}}
${21:   ${22:login_password}: ${23:"#"}}
${24:   ${25:login_port}: ${26:"#"}}
${27:   ${28:login_user}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:vhost}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>rabbitmq_exchange</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
