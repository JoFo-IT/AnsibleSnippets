<snippet>
<content><![CDATA[
${1:# algorithm: algorithm for the balancer being created 
# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# credentials: File to find the Rackspace credentials in. 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# identity_type: Authentication mechanism to use, such as 
# meta: A hash of metadata to associate with the 
# name: Name to give the load balancer 
# port: Port for the balancer being created 
# protocol: Protocol for the balancer being created 
# region: Region to create an instance in. 
# state: Indicate desired state of the resource 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# timeout: timeout for communication between the balancer 
# type: type of interface for the balancer being created 
# username: Rackspace username, overrides `credentials'. 
# validate_certs: Whether or not to require SSL validation of API 
# vip_id: Virtual IP ID to use when creating the load 
# wait: wait for the balancer to be in state 'running' 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for rax_clb module.}
  rax_clb:
${3:   ${4:algorithm}: ${5:"#"}}
${6:   ${7:api_key}: ${8:"#"}}
${9:   ${10:auth_endpoint}: ${11:"#"}}
${12:   ${13:credentials}: ${14:"#"}}
${15:   ${16:env}: ${17:"#"}}
${18:   ${19:md}: ${20:"#"}}
${21:   ${22:identity_type}: ${23:"#"}}
${24:   ${25:meta}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:port}: ${32:"#"}}
${33:   ${34:protocol}: ${35:"#"}}
${36:   ${37:region}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:tenant_id}: ${44:"#"}}
${45:   ${46:tenant_name}: ${47:"#"}}
${48:   ${49:timeout}: ${50:"#"}}
${51:   ${52:type}: ${53:"#"}}
${54:   ${55:username}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:   ${61:vip_id}: ${62:"#"}}
${63:   ${64:wait}: ${65:"#"}}
${66:   ${67:wait_timeout}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>rax_clb</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
