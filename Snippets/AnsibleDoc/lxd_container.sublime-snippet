<snippet>
<content><![CDATA[
${1:# architecture: The architecture for the container (e.g. 
# api: post-1 
# client_cert: The client certificate file path. 
# client_key: The client certificate key file path. 
# config: The config for the container (e.g. 
# api: post-1 If 
# : 10co 
# devices: The devices for the container (e.g. { "rootfs": 
# api: post-1 
# ephemeral: Whether or not the container is ephemeral (e.g. 
# api: post-1 
# force_stop: If this is true, the `lxd_container' forces to 
# name: (required) Name of a container. 
# snap_url: The unix domain socket path when LXD is 
# source: The source for the container (e.g. { "type": 
# api: post-1 for 
# state: Define the state of a container. 
# timeout: A timeout for changing the state of the 
# trust_password: The client trusted password. You need to set 
# url: The unix domain socket path or the https URL for 
# wait_for_ipv4_addresses: If this is true, the `lxd_container' waits until 
}- name: ${2:Name for lxd_container module.}
  lxd_container:
${3:   ${4:architecture}: ${5:"#"}}
${6:   ${7:api}: ${8:"#"}}
${9:   ${10:client_cert}: ${11:"#"}}
${12:   ${13:client_key}: ${14:"#"}}
${15:   ${16:config}: ${17:"#"}}
${18:   ${19:api}: ${20:"#"}}
${21:   ${22:}: ${23:"#"}}
${24:   ${25:devices}: ${26:"#"}}
${27:   ${28:api}: ${29:"#"}}
${30:   ${31:ephemeral}: ${32:"#"}}
${33:   ${34:api}: ${35:"#"}}
${36:   ${37:force_stop}: ${38:"#"}}
${39:   ${40:name}: ${41:"#"}}
${42:   ${43:snap_url}: ${44:"#"}}
${45:   ${46:source}: ${47:"#"}}
${48:   ${49:api}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:timeout}: ${56:"#"}}
${57:   ${58:trust_password}: ${59:"#"}}
${60:   ${61:url}: ${62:"#"}}
${63:   ${64:wait_for_ipv4_addresses}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>lxd_container</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
