<snippet>
<content><![CDATA[
${1:#config_file = Specify a config file from which user and password are to be read
#login_host = Host running the database
#login_password = The password used to authenticate with
#login_port = Port of the MySQL server. Requires login_host be defined as other then localhost if login_port is used
#login_unix_socket = The path to a Unix domain socket for local connections
#login_user = The username used to authenticate with
#ssl_ca = The path to a Certificate Authority (CA) certificate. This option, if used, must specify the same certificate as
#ssl_cert = The path to a client public key certificate.
#ssl_key = The path to the client private key.
#value = If set, then sets variable value to this
#variable = Variable name to operate
}- name: ${2:Name for mysql_variables module.}
${3:  become: ${4:yes}}
  mysql_variables: ${5:config_file=${6: } }${7:login_host=${8: } }${9:login_password=${10: } }${11:login_port=${12: } }${13:login_unix_socket=${14: } }${15:login_user=${16: } }${17:ssl_ca=${18: } }${19:ssl_cert=${20: } }${21:ssl_key=${22: } }${23:value=${24: } }${25:variable=${26: } }
${27:  when: ${28: variable is defined}}
${29:  with_items: ${30: array}}
]]></content>
	<tabTrigger>mysql_variables</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
