<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# db: Name of database to connect to. 
# fail_on_role: If `yes', fail when `reassign_owned_by' role 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# new_owner: (required) Role (user/group) to set as an 
# obj_name: Name of a database object to change ownership. 
# obj_type: (required) Type of a database object. Mutually 
# port: Database port to connect to. 
# reassign_owned_by: The list of role names. The ownership of all the 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
}- name: ${2:Name for postgresql_owner module.}
  postgresql_owner:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:db}: ${8:"#"}}
${9:   ${10:fail_on_role}: ${11:"#"}}
${12:   ${13:login_host}: ${14:"#"}}
${15:   ${16:login_password}: ${17:"#"}}
${18:   ${19:login_unix_socket}: ${20:"#"}}
${21:   ${22:login_user}: ${23:"#"}}
${24:   ${25:new_owner}: ${26:"#"}}
${27:   ${28:obj_name}: ${29:"#"}}
${30:   ${31:obj_type}: ${32:"#"}}
${33:   ${34:port}: ${35:"#"}}
${36:   ${37:reassign_owned_by}: ${38:"#"}}
${39:   ${40:session_role}: ${41:"#"}}
${42:   ${43:ssl_mode}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>postgresql_owner</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
