<snippet>
<content><![CDATA[
${1:# access_time: This parameter indicates the time the file's 
# access_time_format: When used with `access_time', indicates the time 
# attributes: Attributes the file or directory should have. To 
# follow: This flag indicates that filesystem links, if 
# force: force the creation of the symlinks in two cases: 
# group: Name of the group that should own the 
# mode: Mode the file or directory should be. For those 
# modification_time: This parameter indicates the time the file's 
# modification_time_format: When used with `modification_time', indicates 
# owner: Name of the user that should own the 
# path: (required) Path to the file being managed. 
# recurse: recursively set the specified file attributes 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# src: path of the file to link to (applies only to 
# state: If `directory', all intermediate subdirectories 
# unsafe_writes: By default this module uses atomic operations to 
}- name: ${2:Name for file module.}
  file:
${3:   ${4:access_time}: ${5:"#"}}
${6:   ${7:access_time_format}: ${8:"#"}}
${9:   ${10:attributes}: ${11:"#"}}
${12:   ${13:follow}: ${14:"#"}}
${15:   ${16:force}: ${17:"#"}}
${18:   ${19:group}: ${20:"#"}}
${21:   ${22:mode}: ${23:"#"}}
${24:   ${25:modification_time}: ${26:"#"}}
${27:   ${28:modification_time_format}: ${29:"#"}}
${30:   ${31:owner}: ${32:"#"}}
${33:   ${34:path}: ${35:"#"}}
${36:   ${37:recurse}: ${38:"#"}}
${39:   ${40:selevel}: ${41:"#"}}
${42:   ${43:serole}: ${44:"#"}}
${45:   ${46:setype}: ${47:"#"}}
${48:   ${49:seuser}: ${50:"#"}}
${51:   ${52:src}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:unsafe_writes}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>file</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
