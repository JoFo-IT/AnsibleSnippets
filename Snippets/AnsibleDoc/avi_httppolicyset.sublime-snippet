<snippet>
<content><![CDATA[
${1:# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# cloud_config_cksum: Checksum of cloud configuration for pool. 
# controller: IP address or hostname of the controller. The 
# created_by: Creator name. 
# description: User defined description for the object. 
# http_request_policy: Http request policy for the virtual service. 
# http_response_policy: Http response policy for the virtual service. 
# http_security_policy: Http security policy for the virtual service. 
# is_internal_policy: Boolean flag to set is_internal_policy. Default 
# name: (required) Name of the http policy set. 
# password: Password of Avi user in Avi controller. The 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Uuid of the http policy set. 
}- name: ${2:Name for avi_httppolicyset module.}
  avi_httppolicyset:
${3:   ${4:api_context}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:avi_api_patch_op}: ${11:"#"}}
${12:   ${13:avi_api_update_method}: ${14:"#"}}
${15:   ${16:avi_credentials}: ${17:"#"}}
${18:   ${19:cloud_config_cksum}: ${20:"#"}}
${21:   ${22:controller}: ${23:"#"}}
${24:   ${25:created_by}: ${26:"#"}}
${27:   ${28:description}: ${29:"#"}}
${30:   ${31:http_request_policy}: ${32:"#"}}
${33:   ${34:http_response_policy}: ${35:"#"}}
${36:   ${37:http_security_policy}: ${38:"#"}}
${39:   ${40:is_internal_policy}: ${41:"#"}}
${42:   ${43:name}: ${44:"#"}}
${45:   ${46:password}: ${47:"#"}}
${48:   ${49:state}: ${50:"#"}}
${51:   ${52:tenant}: ${53:"#"}}
${54:   ${55:tenant_ref}: ${56:"#"}}
${57:   ${58:tenant_uuid}: ${59:"#"}}
${60:   ${61:url}: ${62:"#"}}
${63:   ${64:username}: ${65:"#"}}
${66:   ${67:uuid}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>avi_httppolicyset</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
