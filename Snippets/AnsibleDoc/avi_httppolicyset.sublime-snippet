<snippet>
<content><![CDATA[
${1:# api_version: Avi API version of to use for Avi API and objects. 
# cloud_config_cksum: Checksum of cloud configuration for pool. Internally set by cloud connector. 
# controller: IP address or hostname of the controller. The default value is the environment variable 
# created_by: Creator name. 
# description: User defined description for the object. 
# http_request_policy: Http request policy for the virtual service. 
# http_response_policy: Http response policy for the virtual service. 
# http_security_policy: Http security policy for the virtual service. 
# is_internal_policy: Boolean flag to set is_internal_policy. Default value when not specified in API or module is interpreted 
# name: (required) Name of the http policy set. 
# password: Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'. 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and context of object. 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and context of object. 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The default value is the environment variable 
# uuid: Uuid of the http policy set. 
}- name: ${2:Name for avi_httppolicyset module.}
  avi_httppolicyset:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:cloud_config_cksum}: ${8:"#"}}
${9:   ${10:controller}: ${11:"#"}}
${12:   ${13:created_by}: ${14:"#"}}
${15:   ${16:description}: ${17:"#"}}
${18:   ${19:http_request_policy}: ${20:"#"}}
${21:   ${22:http_response_policy}: ${23:"#"}}
${24:   ${25:http_security_policy}: ${26:"#"}}
${27:   ${28:is_internal_policy}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:password}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:tenant}: ${41:"#"}}
${42:   ${43:tenant_ref}: ${44:"#"}}
${45:   ${46:tenant_uuid}: ${47:"#"}}
${48:   ${49:url}: ${50:"#"}}
${51:   ${52:username}: ${53:"#"}}
${54:   ${55:uuid}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>avi_httppolicyset</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
