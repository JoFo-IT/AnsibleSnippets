<snippet>
<content><![CDATA[
${1:# auth_kind: (required) The type of credential used. 
# env_type: Specifies which Ansible environment you're 
# key_algorithm: Specifies the algorithm for the key. Some valid 
# path: The full name of the file that will hold the 
# private_key_type: Output format for the service account key. Some 
# project: The Google Cloud Platform project to use. 
# scopes: Array of scopes to be used. 
# service_account: The name of the serviceAccount. This field 
# service_account_contents: The contents of a Service Account JSON file, 
# service_account_email: An optional service account email address if 
# service_account_file: The path of a Service Account JSON file if 
# state: Whether the given object should exist in GCP 
}- name: ${2:Name for gcp_iam_service_account_key module.}
  gcp_iam_service_account_key:
${3:   ${4:auth_kind}: ${5:"#"}}
${6:   ${7:env_type}: ${8:"#"}}
${9:   ${10:key_algorithm}: ${11:"#"}}
${12:   ${13:path}: ${14:"#"}}
${15:   ${16:private_key_type}: ${17:"#"}}
${18:   ${19:project}: ${20:"#"}}
${21:   ${22:scopes}: ${23:"#"}}
${24:   ${25:service_account}: ${26:"#"}}
${27:   ${28:service_account_contents}: ${29:"#"}}
${30:   ${31:service_account_email}: ${32:"#"}}
${33:   ${34:service_account_file}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>gcp_iam_service_account_key</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
