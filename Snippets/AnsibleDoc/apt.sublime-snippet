<snippet>
<content><![CDATA[
${1:# allow_unauthenticated: Ignore if packages cannot be authenticated. This 
# autoclean: If `yes', cleans the local repository of 
# autoremove: If `yes', remove unused dependency packages for 
# cache_valid_time: Update the apt cache if its older than the 
# deb: Path to a .deb package on the remote machine. If 
# default_release: Corresponds to the `-t' option for `apt' and 
# dpkg_options: Add dpkg options to apt command. Defaults to '-o 
# force: Corresponds to the `--force-yes' to `apt-get' 
# force_apt_get: Force usage of apt-get instead of aptitude 
# install_recommends: Corresponds to the `--no-install-recommends' 
# name: A list of package names, like `foo', or package 
# only_upgrade: Only upgrade a package if it is already 
# policy_rc_d: Force the exit code of /usr/sbin/policy-rc.d. 
# purge: Will force purging of configuration files if the 
# state: Indicates the desired package state. `latest' 
# update_cache: Run the equivalent of `apt-get update' before 
# upgrade: If yes or safe, performs an aptitude safe- 
}- name: ${2:Name for apt module.}
  apt:
${3:   ${4:allow_unauthenticated}: ${5:"#"}}
${6:   ${7:autoclean}: ${8:"#"}}
${9:   ${10:autoremove}: ${11:"#"}}
${12:   ${13:cache_valid_time}: ${14:"#"}}
${15:   ${16:deb}: ${17:"#"}}
${18:   ${19:default_release}: ${20:"#"}}
${21:   ${22:dpkg_options}: ${23:"#"}}
${24:   ${25:force}: ${26:"#"}}
${27:   ${28:force_apt_get}: ${29:"#"}}
${30:   ${31:install_recommends}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:only_upgrade}: ${38:"#"}}
${39:   ${40:policy_rc_d}: ${41:"#"}}
${42:   ${43:purge}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:update_cache}: ${50:"#"}}
${51:   ${52:upgrade}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>apt</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
