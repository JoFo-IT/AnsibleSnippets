<snippet>
<content><![CDATA[
${1:# allow_unauthenticated: Ignore if packages cannot be authenticated. This is useful for bootstrapping environments that manage 
# autoclean: If `yes', cleans the local repository of retrieved package files that can no longer be downloaded. 
# autoremove: If `yes', remove unused dependency packages for all module states except `build-dep'. It can also be 
# cache_valid_time: Update the apt cache if its older than the `cache_valid_time'. This option is set in seconds. As of 
# deb: Path to a .deb package on the remote machine. If :// in the path, ansible will attempt to download deb 
# default_release: Corresponds to the `-t' option for `apt' and sets pin priorities 
# dpkg_options: Add dpkg options to apt command. Defaults to '-o "Dpkg::Options::=--force-confdef" -o "Dpkg::Options 
# force: If `yes', force installs/removes. 
# force_apt_get: Force usage of apt-get instead of aptitude 
# install_recommends: Corresponds to the `--no-install-recommends' option for `apt'. `yes' installs recommended packages. 
# name: A package name, like `foo', or package specifier with version, like `foo=1.0'. Name wildcards (fnmatch) 
# only_upgrade: Only upgrade a package if it is already installed. 
# purge: Will force purging of configuration files if the module state is set to `absent'. 
# state: Indicates the desired package state. `latest' ensures that the latest version is installed. `build-dep' 
# update_cache: Run the equivalent of `apt-get update' before the operation. Can be run as part of the package 
# upgrade: If yes or safe, performs an aptitude safe-upgrade. If full, performs an aptitude full-upgrade. If dist, 
}- name: ${2:Name for apt module.}
  apt:
${3:   ${4:allow_unauthenticated}: ${5:"#"}}
${6:   ${7:autoclean}: ${8:"#"}}
${9:   ${10:autoremove}: ${11:"#"}}
${12:   ${13:cache_valid_time}: ${14:"#"}}
${15:   ${16:deb}: ${17:"#"}}
${18:   ${19:default_release}: ${20:"#"}}
${21:   ${22:dpkg_options}: ${23:"#"}}
${24:   ${25:force}: ${26:"#"}}
${27:   ${28:force_apt_get}: ${29:"#"}}
${30:   ${31:install_recommends}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:only_upgrade}: ${38:"#"}}
${39:   ${40:purge}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:update_cache}: ${47:"#"}}
${48:   ${49:upgrade}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>apt</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
