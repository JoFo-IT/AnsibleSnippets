<snippet>
<content><![CDATA[
${1:# certificate_name: The X.509 certificate name attached to the APIC 
# description: The description to assign to the `leaf'. 
# from: Start of Node Block range. 
# host: (required) IP Address or hostname of APIC 
# leaf: Name of Leaf Selector. 
# leaf_node_blk: Name of Node Block range to be added to Leaf 
# leaf_node_blk_description: The description to assign to the `leaf_node_blk' 
# leaf_profile: Name of the Leaf Profile to which we add a 
# output_level: Influence the output of this ACI module. 
# password: (required) The password to use for 
# policy_group: Name of the Policy Group to be added to Leaf 
# port: Port number to be used for REST connection. The 
# private_key: (required) PEM formatted file that contains your 
# state: Use `present' or `absent' for adding or 
# timeout: The socket level timeout in seconds. 
# to: Start of Node Block range. 
# use_proxy: If `no', it will not use a proxy, even if one is 
# use_ssl: If `no', an HTTP connection will be used instead 
# username: The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for aci_switch_leaf_selector module.}
  aci_switch_leaf_selector:
${3:   ${4:certificate_name}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:from}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:leaf}: ${17:"#"}}
${18:   ${19:leaf_node_blk}: ${20:"#"}}
${21:   ${22:leaf_node_blk_description}: ${23:"#"}}
${24:   ${25:leaf_profile}: ${26:"#"}}
${27:   ${28:output_level}: ${29:"#"}}
${30:   ${31:password}: ${32:"#"}}
${33:   ${34:policy_group}: ${35:"#"}}
${36:   ${37:port}: ${38:"#"}}
${39:   ${40:private_key}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:timeout}: ${47:"#"}}
${48:   ${49:to}: ${50:"#"}}
${51:   ${52:use_proxy}: ${53:"#"}}
${54:   ${55:use_ssl}: ${56:"#"}}
${57:   ${58:username}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>aci_switch_leaf_selector</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
