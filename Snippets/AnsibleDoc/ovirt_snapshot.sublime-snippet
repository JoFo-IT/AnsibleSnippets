<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to 
# description: Description of the snapshot. 
# disk_id: Disk id which you want to upload or download To 
# disk_name: Disk name which you want to upload or download 
# download_image_path: Path on a file system where snapshot should be 
# fetch_nested: If `True' the module will fetch additional data 
# keep_days_old: Number of days after which should snapshot be 
# nested_attributes: Specifies list of the attributes which should be 
# poll_interval: Number of the seconds the module waits until 
# snapshot_id: ID of the snapshot to manage. 
# state: Should the Virtual Machine snapshot be 
# timeout: The amount of time in seconds the module should 
# upload_image_path: Path to disk image, which should be uploaded. 
# use_memory: If `true' and `state' is `present' save memory 
# vm_name: (required) Name of the Virtual Machine to 
# wait: `yes' if the module should wait for the entity 
}- name: ${2:Name for ovirt_snapshot module.}
  ovirt_snapshot:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:disk_id}: ${11:"#"}}
${12:   ${13:disk_name}: ${14:"#"}}
${15:   ${16:download_image_path}: ${17:"#"}}
${18:   ${19:fetch_nested}: ${20:"#"}}
${21:   ${22:keep_days_old}: ${23:"#"}}
${24:   ${25:nested_attributes}: ${26:"#"}}
${27:   ${28:poll_interval}: ${29:"#"}}
${30:   ${31:snapshot_id}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:timeout}: ${38:"#"}}
${39:   ${40:upload_image_path}: ${41:"#"}}
${42:   ${43:use_memory}: ${44:"#"}}
${45:   ${46:vm_name}: ${47:"#"}}
${48:   ${49:wait}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>ovirt_snapshot</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
