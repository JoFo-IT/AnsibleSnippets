<snippet>
<content><![CDATA[
${1:# cipher_list: Specifies the list of ciphers for this monitor. 
# concurrency_limit: Specifies the maximum percentage of licensed 
# ignore_down_response: Specifies that the monitor allows more than one 
# interval: The interval specifying how frequently the 
# ip: IP address part of the IP/port definition. If 
# max_load_average: Specifies the number that the monitor uses to 
# name: (required) Monitor name. 
# parent: The parent template of this monitor template. 
# partition: Device partition to manage resources on. 
# port: Port address part of the IP/port definition. If 
# probe_timeout: Specifies the number of seconds after which the 
# provider: A dict object containing connection details. 
# state: When `present', ensures that the monitor exists. 
# target_password: Specifies the password, if the monitored target 
# target_username: Specifies the user name, if the monitored target 
# timeout: The number of seconds in which the node or 
# update_password: `always' will update passwords if the 
}- name: ${2:Name for bigip_gtm_monitor_firepass module.}
  bigip_gtm_monitor_firepass:
${3:   ${4:cipher_list}: ${5:"#"}}
${6:   ${7:concurrency_limit}: ${8:"#"}}
${9:   ${10:ignore_down_response}: ${11:"#"}}
${12:   ${13:interval}: ${14:"#"}}
${15:   ${16:ip}: ${17:"#"}}
${18:   ${19:max_load_average}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:parent}: ${26:"#"}}
${27:   ${28:partition}: ${29:"#"}}
${30:   ${31:port}: ${32:"#"}}
${33:   ${34:probe_timeout}: ${35:"#"}}
${36:   ${37:provider}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:target_password}: ${44:"#"}}
${45:   ${46:target_username}: ${47:"#"}}
${48:   ${49:timeout}: ${50:"#"}}
${51:   ${52:update_password}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>bigip_gtm_monitor_firepass</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
