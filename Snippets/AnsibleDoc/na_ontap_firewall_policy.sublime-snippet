<snippet>
<content><![CDATA[
${1:# allow_list: A list of IPs and masks to use. The host bits of 
# enable: enable firewall on a node 
# hostname: (required) The hostname or IP address of the 
# http_port: Override the default port (80 or 443) with this 
# https: Enable and disable https 
# logging: enable logging for firewall on a node 
# node: The node to run the firewall configuration on 
# ontapi: The ontap api version to use 
# password: (required) Password for the specified user. 
# policy: A policy name for the firewall policy 
# service: The service to apply the policy to 
# state: Whether to set up a firewall policy or not 
# use_rest: REST API if supported by the target system for 
# username: (required) This can be a Cluster-scoped or SVM- 
# validate_certs: If set to `no', the SSL certificates will not be 
# vserver: The Vserver to apply the policy to. 
}- name: ${2:Name for na_ontap_firewall_policy module.}
  na_ontap_firewall_policy:
${3:   ${4:allow_list}: ${5:"#"}}
${6:   ${7:enable}: ${8:"#"}}
${9:   ${10:hostname}: ${11:"#"}}
${12:   ${13:http_port}: ${14:"#"}}
${15:   ${16:https}: ${17:"#"}}
${18:   ${19:logging}: ${20:"#"}}
${21:   ${22:node}: ${23:"#"}}
${24:   ${25:ontapi}: ${26:"#"}}
${27:   ${28:password}: ${29:"#"}}
${30:   ${31:policy}: ${32:"#"}}
${33:   ${34:service}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:use_rest}: ${41:"#"}}
${42:   ${43:username}: ${44:"#"}}
${45:   ${46:validate_certs}: ${47:"#"}}
${48:   ${49:vserver}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>na_ontap_firewall_policy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
