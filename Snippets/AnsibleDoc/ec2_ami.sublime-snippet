<snippet>
<content><![CDATA[
${1:# architecture: The target architecture of the image to register 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# billing_products: A list of valid billing codes. To be used with 
# delete_snapshot: Delete snapshots when deregistering the AMI. 
# description: Human-readable string describing the contents 
# device_mapping: List of device hashes/dictionaries with custom 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# enhanced_networking: A boolean representing whether enhanced 
# image_id: Image ID to be deregistered. 
# image_location: The s3 location of an image to use for the AMI. 
# instance_id: Instance ID to create the AMI from. 
# kernel_id: The target kernel id of the image to register. 
# launch_permissions: Users and groups that should be able to launch 
# name: The name of the new AMI. 
# no_reboot: Flag indicating that the bundling process should 
# profile: Uses a boto profile. Only works with boto >= 
# purge_tags: Whether to remove existing tags that aren't 
# ramdisk_id: The ID of the RAM disk. 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# root_device_name: The root device name of the image to register. 
# security_token: AWS STS security token. If not set then the 
# sriov_net_support: Set to simple to enable enhanced networking with 
# state: Register or deregister an AMI. 
# tags: A dictionary of tags to add to the new image; 
# validate_certs: When set to "no", SSL certificates will not be 
# virtualization_type: The virtualization type of the image to 
# wait: Wait for the AMI to be in state 'available' 
# wait_timeout: How long before wait gives up, in seconds. 
}- name: ${2:Name for ec2_ami module.}
  ec2_ami:
${3:   ${4:architecture}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_secret_key}: ${11:"#"}}
${12:   ${13:billing_products}: ${14:"#"}}
${15:   ${16:delete_snapshot}: ${17:"#"}}
${18:   ${19:description}: ${20:"#"}}
${21:   ${22:device_mapping}: ${23:"#"}}
${24:   ${25:ec2_url}: ${26:"#"}}
${27:   ${28:enhanced_networking}: ${29:"#"}}
${30:   ${31:image_id}: ${32:"#"}}
${33:   ${34:image_location}: ${35:"#"}}
${36:   ${37:instance_id}: ${38:"#"}}
${39:   ${40:kernel_id}: ${41:"#"}}
${42:   ${43:launch_permissions}: ${44:"#"}}
${45:   ${46:name}: ${47:"#"}}
${48:   ${49:no_reboot}: ${50:"#"}}
${51:   ${52:profile}: ${53:"#"}}
${54:   ${55:purge_tags}: ${56:"#"}}
${57:   ${58:ramdisk_id}: ${59:"#"}}
${60:   ${61:region}: ${62:"#"}}
${63:   ${64:}: ${65:"#"}}
${66:   ${67:root_device_name}: ${68:"#"}}
${69:   ${70:security_token}: ${71:"#"}}
${72:   ${73:sriov_net_support}: ${74:"#"}}
${75:   ${76:state}: ${77:"#"}}
${78:   ${79:tags}: ${80:"#"}}
${81:   ${82:validate_certs}: ${83:"#"}}
${84:   ${85:virtualization_type}: ${86:"#"}}
${87:   ${88:wait}: ${89:"#"}}
${90:   ${91:wait_timeout}: ${92:"#"}}
${93:${94:   become: ${95:true}} 
${96:   become_method: ${97:su}} 
${98:   become_user: ${99:nobody}} 
${100:   become_flags: ${101:"-s /bin/sh"}}} 
${102:   when: ${103:variable is defined}} 
${104:   with_items: ${105:array}} 
]]></content>
	<tabTrigger>ec2_ami</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
