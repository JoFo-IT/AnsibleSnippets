<snippet>
<content><![CDATA[
${1:# architecture: The target architecture of the image to register 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# billing_products: A list of valid billing codes. To be used with 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# delete_snapshot: Delete snapshots when deregistering the AMI. 
# description: Human-readable string describing the contents 
# device_mapping: List of device hashes/dictionaries with custom 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# enhanced_networking: A boolean representing whether enhanced 
# image_id: Image ID to be deregistered. 
# image_location: The s3 location of an image to use for the AMI. 
# instance_id: Instance ID to create the AMI from. 
# kernel_id: The target kernel id of the image to register. 
# launch_permissions: Users and groups that should be able to launch 
# name: The name of the new AMI. 
# no_reboot: Flag indicating that the bundling process should 
# profile: Uses a boto profile. Only works with boto >= 
# purge_tags: Whether to remove existing tags that aren't 
# ramdisk_id: The ID of the RAM disk. 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# root_device_name: The root device name of the image to register. 
# security_token: AWS STS security token. If not set then the 
# sriov_net_support: Set to simple to enable enhanced networking with 
# state: Register or deregister an AMI. 
# tags: A dictionary of tags to add to the new image; 
# validate_certs: When set to "no", SSL certificates will not be 
# virtualization_type: The virtualization type of the image to 
# wait: Wait for the AMI to be in state 'available' 
# wait_timeout: How long before wait gives up, in seconds. 
}- name: ${2:Name for ec2_ami module.}
  ec2_ami:
${3:   ${4:architecture}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_secret_key}: ${11:"#"}}
${12:   ${13:billing_products}: ${14:"#"}}
${15:   ${16:debug_botocore_endpoint_logs}: ${17:"#"}}
${18:   ${19:delete_snapshot}: ${20:"#"}}
${21:   ${22:description}: ${23:"#"}}
${24:   ${25:device_mapping}: ${26:"#"}}
${27:   ${28:ec2_url}: ${29:"#"}}
${30:   ${31:enhanced_networking}: ${32:"#"}}
${33:   ${34:image_id}: ${35:"#"}}
${36:   ${37:image_location}: ${38:"#"}}
${39:   ${40:instance_id}: ${41:"#"}}
${42:   ${43:kernel_id}: ${44:"#"}}
${45:   ${46:launch_permissions}: ${47:"#"}}
${48:   ${49:name}: ${50:"#"}}
${51:   ${52:no_reboot}: ${53:"#"}}
${54:   ${55:profile}: ${56:"#"}}
${57:   ${58:purge_tags}: ${59:"#"}}
${60:   ${61:ramdisk_id}: ${62:"#"}}
${63:   ${64:region}: ${65:"#"}}
${66:   ${67:}: ${68:"#"}}
${69:   ${70:root_device_name}: ${71:"#"}}
${72:   ${73:security_token}: ${74:"#"}}
${75:   ${76:sriov_net_support}: ${77:"#"}}
${78:   ${79:state}: ${80:"#"}}
${81:   ${82:tags}: ${83:"#"}}
${84:   ${85:validate_certs}: ${86:"#"}}
${87:   ${88:virtualization_type}: ${89:"#"}}
${90:   ${91:wait}: ${92:"#"}}
${93:   ${94:wait_timeout}: ${95:"#"}}
${96:${97:   become: ${98:true}} 
${99:   become_method: ${100:su}} 
${101:   become_user: ${102:nobody}} 
${103:   become_flags: ${104:"-s /bin/sh"}}} 
${105:   when: ${106:variable is defined}} 
${107:   with_items: ${108:array}} 
]]></content>
	<tabTrigger>ec2_ami</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
