<snippet>
<content><![CDATA[
${1:# comment: Any information about the server. 
# delay: Time, in seconds, after which all the services 
# disabled: When set to `true' the server state will be set 
# domain: Domain name of the server. For a domain based 
# domainresolveretry: Time, in seconds, for which the NetScaler 
# graceful: Shut down gracefully, without accepting any new 
# ipaddress: IPv4 or IPv6 address of the server. If you 
# ipv6address: Support IPv6 addressing mode. If you configure a 
# name: Name for the server. Must begin with an ASCII 
# hash: ', period 
# nitro_pass: (required) The password with which to 
# nitro_protocol: Which protocol to use when accessing the nitro 
# nitro_timeout: Time in seconds until a timeout error is thrown 
# nitro_user: (required) The username with which to 
# nsip: (required) The ip address of the netscaler 
# save_config: If true the module will save the configuration 
# state: The state of the resource being configured by 
# td: Integer value that uniquely identifies the 
# translationip: IP address used to transform the server's DNS- 
# translationmask: The netmask of the translation ip. 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for netscaler_server module.}
  netscaler_server:
${3:   ${4:comment}: ${5:"#"}}
${6:   ${7:delay}: ${8:"#"}}
${9:   ${10:disabled}: ${11:"#"}}
${12:   ${13:domain}: ${14:"#"}}
${15:   ${16:domainresolveretry}: ${17:"#"}}
${18:   ${19:graceful}: ${20:"#"}}
${21:   ${22:ipaddress}: ${23:"#"}}
${24:   ${25:ipv6address}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:hash}: ${32:"#"}}
${33:   ${34:nitro_pass}: ${35:"#"}}
${36:   ${37:nitro_protocol}: ${38:"#"}}
${39:   ${40:nitro_timeout}: ${41:"#"}}
${42:   ${43:nitro_user}: ${44:"#"}}
${45:   ${46:nsip}: ${47:"#"}}
${48:   ${49:save_config}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:td}: ${56:"#"}}
${57:   ${58:translationip}: ${59:"#"}}
${60:   ${61:translationmask}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>netscaler_server</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
