<snippet>
<content><![CDATA[
${1:#api_key = Your DataDog API key.
#app_key = Your DataDog app key.
#escalation_message = A message to include with a re-notification. Supports the '@username' notification we allow elsewhere. Not
#message = A message to include with notifications for this monitor. Email notifications can be sent to specific users by
#name = The name of the alert.
#no_data_timeframe = The number of minutes before a monitor will notify when data stops reporting. Must be at least 2x the monitor
#notify_audit = A boolean indicating whether tagged users will be notified on changes to this monitor.
#notify_no_data = A boolean indicating whether this monitor will notify when data stops reporting..
#query = The monitor query to notify on with syntax varying depending on what type of monitor you are creating.
#renotify_interval = The number of minutes after the last notification before a monitor will re-notify on the current status. It will
#silenced = Dictionary of scopes to timestamps or None. Each scope will be muted until the given POSIX timestamp or forever
#state = The designated state of the monitor.
#thresholds = A dictionary of thresholds by status. Because service checks can have multiple thresholds, we don't define them
#timeout_h = The number of hours of the monitor not reporting data before it will automatically resolve from a triggered
#type = The type of the monitor.
}- name: ${2:Name for datadog_monitor module.}
${3:  become: ${4:yes}}
  datadog_monitor: ${5:api_key=${6: } }${7:app_key=${8: } }${9:escalation_message=${10: } }${11:message=${12: } }${13:name=${14: } }${15:no_data_timeframe=${16: } }${17:notify_audit=${18: } }${19:notify_no_data=${20: } }${21:query=${22: } }${23:renotify_interval=${24: } }${25:silenced=${26: } }${27:state=${28: } }${29:thresholds=${30: } }${31:timeout_h=${32: } }${33:type=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>datadog_monitor</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
