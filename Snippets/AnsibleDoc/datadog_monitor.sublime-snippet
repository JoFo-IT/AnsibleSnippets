<snippet>
<content><![CDATA[
${1:# api_key: (required) Your DataDog API key. 
# app_key: (required) Your DataDog app key. 
# escalation_message: A message to include with a re-notification. Supports the '@username' notification we allow elsewhere. 
# id: The id of the alert. If set, will be used instead of the name to locate the alert. 
# locked: A boolean indicating whether changes to this monitor should be restricted to the creator or admins. 
# message: A message to include with notifications for this monitor. Email notifications can be sent to specific 
# name: (required) The name of the alert. 
# new_host_delay: A positive integer representing the number of seconds to wait before evaluating the monitor for new 
# no_data_timeframe: The number of minutes before a monitor will notify when data stops reporting. Must be at least 2x the 
# notify_audit: A boolean indicating whether tagged users will be notified on changes to this monitor. 
# notify_no_data: A boolean indicating whether this monitor will notify when data stops reporting.. 
# query: The monitor query to notify on with syntax varying depending on what type of monitor you are creating. 
# renotify_interval: The number of minutes after the last notification before a monitor will re-notify on the current status. 
# require_full_window: A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly 
# silenced: Dictionary of scopes to timestamps or None. Each scope will be muted until the given POSIX timestamp or 
# state: (required) The designated state of the monitor. 
# tags: A list of tags to associate with your monitor when creating or updating. This can help you categorize 
# thresholds: A dictionary of thresholds by status. This option is only available for service checks and metric 
# timeout_h: The number of hours of the monitor not reporting data before it will automatically resolve from a 
# type: The type of the monitor. The 'event alert'is available starting at Ansible 2.1 
}- name: ${2:Name for datadog_monitor module.}
  datadog_monitor:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:app_key}: ${8:"#"}}
${9:   ${10:escalation_message}: ${11:"#"}}
${12:   ${13:id}: ${14:"#"}}
${15:   ${16:locked}: ${17:"#"}}
${18:   ${19:message}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:new_host_delay}: ${26:"#"}}
${27:   ${28:no_data_timeframe}: ${29:"#"}}
${30:   ${31:notify_audit}: ${32:"#"}}
${33:   ${34:notify_no_data}: ${35:"#"}}
${36:   ${37:query}: ${38:"#"}}
${39:   ${40:renotify_interval}: ${41:"#"}}
${42:   ${43:require_full_window}: ${44:"#"}}
${45:   ${46:silenced}: ${47:"#"}}
${48:   ${49:state}: ${50:"#"}}
${51:   ${52:tags}: ${53:"#"}}
${54:   ${55:thresholds}: ${56:"#"}}
${57:   ${58:timeout_h}: ${59:"#"}}
${60:   ${61:type}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>datadog_monitor</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
