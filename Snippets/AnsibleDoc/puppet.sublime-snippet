<snippet>
<content><![CDATA[
${1:# certname: The name to use when handling certificates. 
# environment: Puppet environment to be used. 
# execute: Execute a specific piece of Puppet code. It has no effect with a puppetmaster. 
# facter_basename: Basename of the facter output file 
# facts: A dict of values to pass in as persistent external facter facts 
# logdest: Where the puppet logs should go, if puppet apply is being used 
# manifest: Path to the manifest file to run puppet apply on. 
# modulepath: Path to an alternate location for puppet modules 
# puppetmaster: The hostname of the puppetmaster to contact. 
# tags: A comma-separated list of puppet tags to be used. 
# timeout: How long to wait for `puppet' to finish. 
}- name: ${2:Name for puppet module.}
  puppet:
${3:   ${4:certname}: ${5:"#"}}
${6:   ${7:environment}: ${8:"#"}}
${9:   ${10:execute}: ${11:"#"}}
${12:   ${13:facter_basename}: ${14:"#"}}
${15:   ${16:facts}: ${17:"#"}}
${18:   ${19:logdest}: ${20:"#"}}
${21:   ${22:manifest}: ${23:"#"}}
${24:   ${25:modulepath}: ${26:"#"}}
${27:   ${28:puppetmaster}: ${29:"#"}}
${30:   ${31:tags}: ${32:"#"}}
${33:   ${34:timeout}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>puppet</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
