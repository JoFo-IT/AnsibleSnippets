<snippet>
<content><![CDATA[
${1:# alias: The name of an alias (CNAME) that is used in a 
# aliases: A `list[]' of domain name aliases (CNAMEs) as 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# cache_behaviors: A config element that is a `list[]' of complex 
# caller_reference: A unique identifier for creating and updating 
# comment: A comment that describes the cloudfront 
# custom_error_responses: A config element that is a `list[]' of complex 
# default_cache_behavior: A config element that is a complex object 
# default_origin_domain_name: The domain name to use for an origin if no 
# default_origin_path: The default origin path to specify for an origin 
# default_root_object: A config element that specifies the path to 
# distribution_id: The id of the cloudfront distribution. This 
# e_tag: A unique identifier of a modified or existing 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# enabled: A boolean value that specifies whether the 
# http_version: The version of the http protocol to use for the 
# ipv6_enabled: Determines whether IPv6 support is enabled or 
# logging: A config element that is a complex object that 
# origins: A config element that is a `list[]' of complex 
# price_class: A string that specifies the pricing class of the 
# profile: Uses a boto profile. Only works with boto >= 
# purge_aliases: Specifies whether existing aliases will be 
# purge_cache_behaviors: Whether to remove any cache behaviors that 
# purge_custom_error_responses: Whether to remove any custom error responses 
# purge_origins: Whether to remove any origins that aren't listed 
# purge_tags: Specifies whether existing tags will be removed 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# restrictions: A config element that is a complex object that 
# security_token: AWS STS security token. If not set then the 
# state: The desired state of the distribution present - 
# tags: Should be input as a dict() of key-value pairs. 
# validate_certs: When set to "no", SSL certificates will not be 
# viewer_certificate: A config element that is a complex object that 
# wait: Specifies whether the module waits until the 
# wait_timeout: Specifies the duration in seconds to wait for a 
# web_acl_id: The id of a Web Application Firewall (WAF) 
}- name: ${2:Name for cloudfront_distribution module.}
  cloudfront_distribution:
${3:   ${4:alias}: ${5:"#"}}
${6:   ${7:aliases}: ${8:"#"}}
${9:   ${10:aws_access_key}: ${11:"#"}}
${12:   ${13:aws_secret_key}: ${14:"#"}}
${15:   ${16:cache_behaviors}: ${17:"#"}}
${18:   ${19:caller_reference}: ${20:"#"}}
${21:   ${22:comment}: ${23:"#"}}
${24:   ${25:custom_error_responses}: ${26:"#"}}
${27:   ${28:default_cache_behavior}: ${29:"#"}}
${30:   ${31:default_origin_domain_name}: ${32:"#"}}
${33:   ${34:default_origin_path}: ${35:"#"}}
${36:   ${37:default_root_object}: ${38:"#"}}
${39:   ${40:distribution_id}: ${41:"#"}}
${42:   ${43:e_tag}: ${44:"#"}}
${45:   ${46:ec2_url}: ${47:"#"}}
${48:   ${49:enabled}: ${50:"#"}}
${51:   ${52:http_version}: ${53:"#"}}
${54:   ${55:ipv6_enabled}: ${56:"#"}}
${57:   ${58:logging}: ${59:"#"}}
${60:   ${61:origins}: ${62:"#"}}
${63:   ${64:price_class}: ${65:"#"}}
${66:   ${67:profile}: ${68:"#"}}
${69:   ${70:purge_aliases}: ${71:"#"}}
${72:   ${73:purge_cache_behaviors}: ${74:"#"}}
${75:   ${76:purge_custom_error_responses}: ${77:"#"}}
${78:   ${79:purge_origins}: ${80:"#"}}
${81:   ${82:purge_tags}: ${83:"#"}}
${84:   ${85:region}: ${86:"#"}}
${87:   ${88:}: ${89:"#"}}
${90:   ${91:restrictions}: ${92:"#"}}
${93:   ${94:security_token}: ${95:"#"}}
${96:   ${97:state}: ${98:"#"}}
${99:   ${100:tags}: ${101:"#"}}
${102:   ${103:validate_certs}: ${104:"#"}}
${105:   ${106:viewer_certificate}: ${107:"#"}}
${108:   ${109:wait}: ${110:"#"}}
${111:   ${112:wait_timeout}: ${113:"#"}}
${114:   ${115:web_acl_id}: ${116:"#"}}
${117:${118:   become: ${119:true}} 
${120:   become_method: ${121:su}} 
${122:   become_user: ${123:nobody}} 
${124:   become_flags: ${125:"-s /bin/sh"}}} 
${126:   when: ${127:variable is defined}} 
${128:   with_items: ${129:array}} 
]]></content>
	<tabTrigger>cloudfront_distribution</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
