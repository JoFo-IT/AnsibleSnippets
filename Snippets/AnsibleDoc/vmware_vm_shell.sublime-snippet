<snippet>
<content><![CDATA[
${1:# cluster: The cluster hosting the virtual machine. If set, 
# datacenter: The datacenter hosting the virtual machine. If 
# folder: Destination folder, absolute or relative path to 
# hostname: The hostname or IP address of the vSphere 
# password: The password of the vSphere vCenter or ESXi 
# port: The port number of the vSphere vCenter or ESXi 
# proxy_host: Address of a proxy that will receive all HTTPS 
# proxy_port: Port of the HTTP proxy that will receive all 
# timeout: Timeout in seconds. If set to positive integers, 
# username: The username of the vSphere vCenter or ESXi 
# validate_certs: Allows connection when SSL certificates are not 
# vm_id: (required) Name of the virtual machine to work 
# vm_id_type: The VMware identification method by which the 
# vm_password: (required) The password used to login-in to the 
# vm_shell: (required) The absolute path to the program to 
# vm_shell_args: The argument to the program. The characters 
# vm_shell_cwd: The current working directory of the application 
# vm_shell_env: Comma separated list of environment variable, 
# vm_username: (required) The user to login-in to the virtual 
# wait_for_process: If set to `True', module will wait for process 
}- name: ${2:Name for vmware_vm_shell module.}
  vmware_vm_shell:
${3:   ${4:cluster}: ${5:"#"}}
${6:   ${7:datacenter}: ${8:"#"}}
${9:   ${10:folder}: ${11:"#"}}
${12:   ${13:hostname}: ${14:"#"}}
${15:   ${16:password}: ${17:"#"}}
${18:   ${19:port}: ${20:"#"}}
${21:   ${22:proxy_host}: ${23:"#"}}
${24:   ${25:proxy_port}: ${26:"#"}}
${27:   ${28:timeout}: ${29:"#"}}
${30:   ${31:username}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:   ${37:vm_id}: ${38:"#"}}
${39:   ${40:vm_id_type}: ${41:"#"}}
${42:   ${43:vm_password}: ${44:"#"}}
${45:   ${46:vm_shell}: ${47:"#"}}
${48:   ${49:vm_shell_args}: ${50:"#"}}
${51:   ${52:vm_shell_cwd}: ${53:"#"}}
${54:   ${55:vm_shell_env}: ${56:"#"}}
${57:   ${58:vm_username}: ${59:"#"}}
${60:   ${61:wait_for_process}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>vmware_vm_shell</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
