<snippet>
<content><![CDATA[
${1:# address: Specifies the LIF's IP address. Required when 
# admin_status: Specifies the administrative status of the LIF. 
# dns_domain_name: Specifies the unique, fully qualified domain 
# failover_policy: Specifies the failover policy for the LIF. 
# firewall_policy: Specifies the firewall policy for the LIF. 
# force_subnet_association: Set this to true to acquire the address from the 
# home_node: Specifies the LIF's home node. By default, the 
# home_port: Specifies the LIF's home port. Required when 
# hostname: (required) The hostname or IP address of the 
# http_port: Override the default port (80 or 443) with this 
# https: Enable and disable https 
# interface_name: (required) Specifies the logical interface (LIF) 
# is_auto_revert: If true, data LIF will revert to its home node 
# is_dns_update_enabled: Specifies if DNS update is enabled for this LIF. 
# listen_for_dns_query: If True, this IP address will listen for DNS 
# netmask: Specifies the LIF's netmask. Required when 
# ontapi: The ontap api version to use 
# password: (required) Password for the specified user. 
# protocols: Specifies the list of data protocols configured 
# role: Specifies the role of the LIF. When setting role 
# state: Whether the specified interface should exist or 
# subnet_name: Subnet where the interface address is allocated 
# use_rest: REST API if supported by the target system for 
# username: (required) This can be a Cluster-scoped or SVM- 
# validate_certs: If set to `no', the SSL certificates will not be 
# vserver: (required) The name of the vserver to use. 
}- name: ${2:Name for na_ontap_interface module.}
  na_ontap_interface:
${3:   ${4:address}: ${5:"#"}}
${6:   ${7:admin_status}: ${8:"#"}}
${9:   ${10:dns_domain_name}: ${11:"#"}}
${12:   ${13:failover_policy}: ${14:"#"}}
${15:   ${16:firewall_policy}: ${17:"#"}}
${18:   ${19:force_subnet_association}: ${20:"#"}}
${21:   ${22:home_node}: ${23:"#"}}
${24:   ${25:home_port}: ${26:"#"}}
${27:   ${28:hostname}: ${29:"#"}}
${30:   ${31:http_port}: ${32:"#"}}
${33:   ${34:https}: ${35:"#"}}
${36:   ${37:interface_name}: ${38:"#"}}
${39:   ${40:is_auto_revert}: ${41:"#"}}
${42:   ${43:is_dns_update_enabled}: ${44:"#"}}
${45:   ${46:listen_for_dns_query}: ${47:"#"}}
${48:   ${49:netmask}: ${50:"#"}}
${51:   ${52:ontapi}: ${53:"#"}}
${54:   ${55:password}: ${56:"#"}}
${57:   ${58:protocols}: ${59:"#"}}
${60:   ${61:role}: ${62:"#"}}
${63:   ${64:state}: ${65:"#"}}
${66:   ${67:subnet_name}: ${68:"#"}}
${69:   ${70:use_rest}: ${71:"#"}}
${72:   ${73:username}: ${74:"#"}}
${75:   ${76:validate_certs}: ${77:"#"}}
${78:   ${79:vserver}: ${80:"#"}}
${81:${82:   become: ${83:true}} 
${84:   become_method: ${85:su}} 
${86:   become_user: ${87:nobody}} 
${88:   become_flags: ${89:"-s /bin/sh"}}} 
${90:   when: ${91:variable is defined}} 
${92:   with_items: ${93:array}} 
]]></content>
	<tabTrigger>na_ontap_interface</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
