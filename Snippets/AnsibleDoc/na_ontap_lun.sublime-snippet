<snippet>
<content><![CDATA[
${1:# flexvol_name: (required) The name of the FlexVol the LUN 
# force_remove: If "true", override checks that prevent a LUN 
# force_remove_fenced: If "true", override checks that prevent a LUN 
# force_resize: Forcibly reduce the size. This is required for 
# hostname: (required) The hostname or IP address of the 
# http_port: Override the default port (80 or 443) with this 
# https: Enable and disable https 
# name: (required) The name of the LUN to manage. 
# ostype: The os type for the LUN. 
# password: (required) Password for the specified user. 
# size: The size of the LUN in `size_unit'. Required 
# size_unit: The unit used to interpret the size parameter. 
# space_allocation: This enables support for the SCSI Thin 
# space_reserve: This can be set to "false" which will create a 
# state: Whether the specified LUN should exist or not. 
# username: (required) This can be a Cluster-scoped or SVM- 
# validate_certs: If set to `False', the SSL certificates will not 
# vserver: (required) The name of the vserver to use. 
}- name: ${2:Name for na_ontap_lun module.}
  na_ontap_lun:
${3:   ${4:flexvol_name}: ${5:"#"}}
${6:   ${7:force_remove}: ${8:"#"}}
${9:   ${10:force_remove_fenced}: ${11:"#"}}
${12:   ${13:force_resize}: ${14:"#"}}
${15:   ${16:hostname}: ${17:"#"}}
${18:   ${19:http_port}: ${20:"#"}}
${21:   ${22:https}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:ostype}: ${29:"#"}}
${30:   ${31:password}: ${32:"#"}}
${33:   ${34:size}: ${35:"#"}}
${36:   ${37:size_unit}: ${38:"#"}}
${39:   ${40:space_allocation}: ${41:"#"}}
${42:   ${43:space_reserve}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:username}: ${50:"#"}}
${51:   ${52:validate_certs}: ${53:"#"}}
${54:   ${55:vserver}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>na_ontap_lun</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
