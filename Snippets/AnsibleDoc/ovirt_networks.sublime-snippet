<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to create HTTP/HTTPS connection to oVirt: 
# clusters: List of dictionaries describing how the network is managed in specific cluster. `name' - Cluster name. 
# comment: Comment of the network. 
# data_center: Datacenter name where network reside. 
# description: Description of the network. 
# fetch_nested: If `True' the module will fetch additional data from the API. It will fetch IDs of the VMs disks, 
# mtu: Maximum transmission unit (MTU) of the network. 
# name: (required) Name of the network to manage. 
# nested_attributes: Specifies list of the attributes which should be fetched from the API. This parameter apply only when 
# poll_interval: Number of the seconds the module waits until another poll request on entity status is sent. 
# state: Should the network be present or absent 
# timeout: The amount of time in seconds the module should wait for the instance to get into desired state. 
# vlan_tag: Specify VLAN tag. 
# vm_network: If `True' network will be marked as network for VM. VM network carries traffic relevant to the virtual 
# wait: `True' if the module should wait for the entity to get into desired state. 
}- name: ${2:Name for ovirt_networks module.}
  ovirt_networks:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:clusters}: ${8:"#"}}
${9:   ${10:comment}: ${11:"#"}}
${12:   ${13:data_center}: ${14:"#"}}
${15:   ${16:description}: ${17:"#"}}
${18:   ${19:fetch_nested}: ${20:"#"}}
${21:   ${22:mtu}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:nested_attributes}: ${29:"#"}}
${30:   ${31:poll_interval}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:timeout}: ${38:"#"}}
${39:   ${40:vlan_tag}: ${41:"#"}}
${42:   ${43:vm_network}: ${44:"#"}}
${45:   ${46:wait}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>ovirt_networks</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
