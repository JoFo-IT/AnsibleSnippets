<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# filters: A list of the filters against which to match. 
# name: (required) Name of the Web Application Firewall 
# profile: Uses a boto profile. Only works with boto >= 
# purge_filters: Whether to remove existing filters from a 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# security_token: AWS STS security token. If not set then the 
# state: Whether the condition should be `present' or 
# type: the type of matching to perform. 
# validate_certs: When set to "no", SSL certificates will not be 
}- name: ${2:Name for aws_waf_condition module.}
  aws_waf_condition:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:debug_botocore_endpoint_logs}: ${11:"#"}}
${12:   ${13:ec2_url}: ${14:"#"}}
${15:   ${16:filters}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:profile}: ${23:"#"}}
${24:   ${25:purge_filters}: ${26:"#"}}
${27:   ${28:region}: ${29:"#"}}
${30:   ${31:}: ${32:"#"}}
${33:   ${34:security_token}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:type}: ${41:"#"}}
${42:   ${43:validate_certs}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>aws_waf_condition</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
