<snippet>
<content><![CDATA[
${1:# bandwidth: Specifies the reference bandwidth used to assign ospf cost. Valid values are an integer, in Mbps, 1 - 
# description: Specifies the description information of ospf process. 
# lsaaholdinterval: Specifies the hold interval of arrive LSA when use the intelligent timer. Valid value is an integer, in 
# lsaainterval: Specifies the interval of arrive LSA when use the general timer. Valid value is an integer, in 
# lsaalflag: Specifies the mode of timer to calculate interval of arrive LSA. If set the parameter but not specifies 
# lsaamaxinterval: Specifies the max interval of arrive LSA when use the intelligent timer. Valid value is an integer, in 
# lsaastartinterval: Specifies the start interval of arrive LSA when use the intelligent timer. Valid value is an integer, in 
# lsaoholdinterval: Specifies the hold interval of originate LSA . Valid value is an integer, in millisecond, from 0 to 
# lsaointerval: Specifies the interval of originate LSA . Valid value is an integer, in second, from 0 to 10, the 
# lsaointervalflag: Specifies whether cancel the interval of LSA originate or not. If set the parameter but noe specifies 
# lsaomaxinterval: Specifies the max interval of originate LSA . Valid value is an integer, in millisecond, from 1 to 
# lsaostartinterval: Specifies the start interval of originate LSA . Valid value is an integer, in millisecond, from 0 to 
# ospf: (required) The ID of the ospf process. Valid values are an integer, 1 - 4294967295, the default value is 
# route_id: Specifies the ospf private route id,. Valid values are a string, formatted as an IP address (i.e. 
# spfholdinterval: Specifies the hold interval to calculate SPF when use intelligent timer. Valid value is an integer, in 
# spfinterval: Specifies the interval to calculate SPF when use second level  timer. Valid value is an integer, in 
# spfintervalmi: Specifies the interval to calculate SPF when use millisecond level  timer. Valid value is an integer, in 
# spfintervaltype: Specifies the mode of timer which used to calculate SPF. If set the parameter but noe specifies value, 
# spfmaxinterval: Specifies the max interval to calculate SPF when use intelligent timer. Valid value is an integer, in 
# spfstartinterval: Specifies the start interval to calculate SPF when use intelligent timer. Valid value is an integer, in 
# state: Specify desired state of the resource. 
# vrf: Specifies the vpn instance which use ospf,length is 1 - 31. Valid values are a string. 
}- name: ${2:Name for ce_ospf_vrf module.}
  ce_ospf_vrf:
${3:   ${4:bandwidth}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:lsaaholdinterval}: ${11:"#"}}
${12:   ${13:lsaainterval}: ${14:"#"}}
${15:   ${16:lsaalflag}: ${17:"#"}}
${18:   ${19:lsaamaxinterval}: ${20:"#"}}
${21:   ${22:lsaastartinterval}: ${23:"#"}}
${24:   ${25:lsaoholdinterval}: ${26:"#"}}
${27:   ${28:lsaointerval}: ${29:"#"}}
${30:   ${31:lsaointervalflag}: ${32:"#"}}
${33:   ${34:lsaomaxinterval}: ${35:"#"}}
${36:   ${37:lsaostartinterval}: ${38:"#"}}
${39:   ${40:ospf}: ${41:"#"}}
${42:   ${43:route_id}: ${44:"#"}}
${45:   ${46:spfholdinterval}: ${47:"#"}}
${48:   ${49:spfinterval}: ${50:"#"}}
${51:   ${52:spfintervalmi}: ${53:"#"}}
${54:   ${55:spfintervaltype}: ${56:"#"}}
${57:   ${58:spfmaxinterval}: ${59:"#"}}
${60:   ${61:spfstartinterval}: ${62:"#"}}
${63:   ${64:state}: ${65:"#"}}
${66:   ${67:vrf}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>ce_ospf_vrf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
