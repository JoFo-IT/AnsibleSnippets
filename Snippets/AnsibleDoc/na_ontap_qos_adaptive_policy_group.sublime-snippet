<snippet>
<content><![CDATA[
${1:# absolute_min_iops: Absolute minimum IOPS defined by this policy. 
# expected_iops: Minimum expected IOPS defined by this policy. 
# force: Setting to 'true' forces the deletion of the 
# from_name: Name of the existing policy group to be renamed 
# hostname: (required) The hostname or IP address of the 
# http_port: Override the default port (80 or 443) with this 
# https: Enable and disable https 
# name: (required) The name of the policy group to 
# ontapi: The ontap api version to use 
# password: (required) Password for the specified user. 
# peak_iops: Maximum possible IOPS per allocated or used 
# peak_iops_allocation: Whether peak_iops is specified by allocated or 
# state: Whether the specified policy group should exist 
# use_rest: REST API if supported by the target system for 
# username: (required) This can be a Cluster-scoped or SVM- 
# validate_certs: If set to `no', the SSL certificates will not be 
# vserver: (required) Name of the vserver to use. 
}- name: ${2:Name for na_ontap_qos_adaptive_policy_group module.}
  na_ontap_qos_adaptive_policy_group:
${3:   ${4:absolute_min_iops}: ${5:"#"}}
${6:   ${7:expected_iops}: ${8:"#"}}
${9:   ${10:force}: ${11:"#"}}
${12:   ${13:from_name}: ${14:"#"}}
${15:   ${16:hostname}: ${17:"#"}}
${18:   ${19:http_port}: ${20:"#"}}
${21:   ${22:https}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:ontapi}: ${29:"#"}}
${30:   ${31:password}: ${32:"#"}}
${33:   ${34:peak_iops}: ${35:"#"}}
${36:   ${37:peak_iops_allocation}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:use_rest}: ${44:"#"}}
${45:   ${46:username}: ${47:"#"}}
${48:   ${49:validate_certs}: ${50:"#"}}
${51:   ${52:vserver}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>na_ontap_qos_adaptive_policy_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
