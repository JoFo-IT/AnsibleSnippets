<snippet>
<content><![CDATA[
${1:# absent_retries: If `>0' and `state' is `absent' the module will 
# absent_retries_interval: Interval in seconds between consecutive 
# compose: List of compose definitions. Any element may be 
# name: (required) Stack name 
# prune: If true will add the `--prune' option to the 
# resolve_image: If set will add the `--resolve-image' option to 
# state: Service state. 
# with_registry_auth: If true will add the `--with-registry-auth' 
}- name: ${2:Name for docker_stack module.}
  docker_stack:
${3:   ${4:absent_retries}: ${5:"#"}}
${6:   ${7:absent_retries_interval}: ${8:"#"}}
${9:   ${10:compose}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:prune}: ${17:"#"}}
${18:   ${19:resolve_image}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:with_registry_auth}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>docker_stack</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
