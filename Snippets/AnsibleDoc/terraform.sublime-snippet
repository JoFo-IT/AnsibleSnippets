<snippet>
<content><![CDATA[
${1:# backend_config: A group of key-values to provide at init stage 
# binary_path: The path of a terraform binary to use, relative 
# force_init: To avoid duplicating infra, if a state file 
# lock: Enable statefile locking, if you use a service 
# lock_timeout: How long to maintain the lock on the statefile, 
# plan_file: The path to an existing Terraform plan file to 
# project_path: (required) The path to the root of the Terraform 
# purge_workspace: Only works with state = absent If true, the 
# state: Goal state of given stage/project 
# state_file: The path to an existing Terraform state file to 
# targets: A list of specific resources to target in this 
# variables: A group of key-values to override template 
# variables_file: The path to a variables file for Terraform to 
# workspace: The terraform workspace to work with. 
}- name: ${2:Name for terraform module.}
  terraform:
${3:   ${4:backend_config}: ${5:"#"}}
${6:   ${7:binary_path}: ${8:"#"}}
${9:   ${10:force_init}: ${11:"#"}}
${12:   ${13:lock}: ${14:"#"}}
${15:   ${16:lock_timeout}: ${17:"#"}}
${18:   ${19:plan_file}: ${20:"#"}}
${21:   ${22:project_path}: ${23:"#"}}
${24:   ${25:purge_workspace}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:   ${31:state_file}: ${32:"#"}}
${33:   ${34:targets}: ${35:"#"}}
${36:   ${37:variables}: ${38:"#"}}
${39:   ${40:variables_file}: ${41:"#"}}
${42:   ${43:workspace}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>terraform</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
