<snippet>
<content><![CDATA[
${1:# accessdown: Use Layer 2 mode to bridge the packets sent to 
# appflowlog: Enable logging of AppFlow information. 
# cacheable: Use the transparent cache redirection virtual 
# cachetype: Cache type supported by the cache server. 
# cip: Before forwarding a request to the service, 
# cipheader: Name for the HTTP header whose value must be set 
# cka: Enable client keep-alive for the service. 
# cleartextport: Port to which clear text data must be sent after 
# clttimeout: Time, in seconds, after which to terminate an 
# cmp: Enable compression for the service. 
# comment: Any information about the service. 
# customserverid: Unique identifier for the service. Used when the 
# disabled: When set to `yes' the service state will be set 
# dnsprofilename: Name of the DNS profile to be associated with 
# downstateflush: Flush all active transactions associated with a 
# graceful: Shut down gracefully, not accepting any new 
# hashid: A numerical identifier that can be used by hash 
# healthmonitor: Monitor the health of this service 
# httpprofilename: Name of the HTTP profile that contains HTTP 
# ip: IP to assign to the service. Minimum length = 1 
# ipaddress: The new IP address of the service. 
# maxbandwidth: Maximum bandwidth, in Kbps, allocated to the 
# maxclient: Maximum number of simultaneous open connections 
# maxreq: Maximum number of requests that can be sent on a 
# monitor_bindings: A list of load balancing monitors to bind to 
# monthreshold: Minimum sum of weights of the monitors that are 
# name: Name for the service. Must begin with an ASCII 
# hash: ', period 
# netprofile: Network profile to use for the service. Minimum 
# nitro_pass: (required) The password with which to 
# nitro_protocol: Which protocol to use when accessing the nitro 
# nitro_timeout: Time in seconds until a timeout error is thrown 
# nitro_user: (required) The username with which to 
# nsip: (required) The ip address of the netscaler 
# pathmonitor: Path monitoring for clustering. 
# pathmonitorindv: Individual Path monitoring decisions. 
# port: Port number of the service. Range 1 - 65535 * in 
# processlocal: By turning on this option packets destined to a 
# rtspsessionidremap: Enable RTSP session ID mapping for the service. 
# save_config: If true the module will save the configuration 
# serverid: The identifier for the service. This is used 
# servername: Name of the server that hosts the service. 
# servicetype: Protocol in which data is exchanged with the 
# sp: Enable surge protection for the service. 
# state: The state of the resource being configured by 
# svrtimeout: Time, in seconds, after which to terminate an 
# tcpb: Enable TCP buffering for the service. 
# tcpprofilename: Name of the TCP profile that contains TCP 
# td: Integer value that uniquely identifies the 
# useproxyport: Use the proxy port as the source port when 
# usip: Use the client's IP address as the source IP 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for netscaler_service module.}
  netscaler_service:
${3:   ${4:accessdown}: ${5:"#"}}
${6:   ${7:appflowlog}: ${8:"#"}}
${9:   ${10:cacheable}: ${11:"#"}}
${12:   ${13:cachetype}: ${14:"#"}}
${15:   ${16:cip}: ${17:"#"}}
${18:   ${19:cipheader}: ${20:"#"}}
${21:   ${22:cka}: ${23:"#"}}
${24:   ${25:cleartextport}: ${26:"#"}}
${27:   ${28:clttimeout}: ${29:"#"}}
${30:   ${31:cmp}: ${32:"#"}}
${33:   ${34:comment}: ${35:"#"}}
${36:   ${37:customserverid}: ${38:"#"}}
${39:   ${40:disabled}: ${41:"#"}}
${42:   ${43:dnsprofilename}: ${44:"#"}}
${45:   ${46:downstateflush}: ${47:"#"}}
${48:   ${49:graceful}: ${50:"#"}}
${51:   ${52:hashid}: ${53:"#"}}
${54:   ${55:healthmonitor}: ${56:"#"}}
${57:   ${58:httpprofilename}: ${59:"#"}}
${60:   ${61:ip}: ${62:"#"}}
${63:   ${64:ipaddress}: ${65:"#"}}
${66:   ${67:maxbandwidth}: ${68:"#"}}
${69:   ${70:maxclient}: ${71:"#"}}
${72:   ${73:maxreq}: ${74:"#"}}
${75:   ${76:monitor_bindings}: ${77:"#"}}
${78:   ${79:monthreshold}: ${80:"#"}}
${81:   ${82:name}: ${83:"#"}}
${84:   ${85:hash}: ${86:"#"}}
${87:   ${88:netprofile}: ${89:"#"}}
${90:   ${91:nitro_pass}: ${92:"#"}}
${93:   ${94:nitro_protocol}: ${95:"#"}}
${96:   ${97:nitro_timeout}: ${98:"#"}}
${99:   ${100:nitro_user}: ${101:"#"}}
${102:   ${103:nsip}: ${104:"#"}}
${105:   ${106:pathmonitor}: ${107:"#"}}
${108:   ${109:pathmonitorindv}: ${110:"#"}}
${111:   ${112:port}: ${113:"#"}}
${114:   ${115:processlocal}: ${116:"#"}}
${117:   ${118:rtspsessionidremap}: ${119:"#"}}
${120:   ${121:save_config}: ${122:"#"}}
${123:   ${124:serverid}: ${125:"#"}}
${126:   ${127:servername}: ${128:"#"}}
${129:   ${130:servicetype}: ${131:"#"}}
${132:   ${133:sp}: ${134:"#"}}
${135:   ${136:state}: ${137:"#"}}
${138:   ${139:svrtimeout}: ${140:"#"}}
${141:   ${142:tcpb}: ${143:"#"}}
${144:   ${145:tcpprofilename}: ${146:"#"}}
${147:   ${148:td}: ${149:"#"}}
${150:   ${151:useproxyport}: ${152:"#"}}
${153:   ${154:usip}: ${155:"#"}}
${156:   ${157:validate_certs}: ${158:"#"}}
${159:${160:   become: ${161:true}} 
${162:   become_method: ${163:su}} 
${164:   become_user: ${165:nobody}} 
${166:   become_flags: ${167:"-s /bin/sh"}}} 
${168:   when: ${169:variable is defined}} 
${170:   with_items: ${171:array}} 
]]></content>
	<tabTrigger>netscaler_service</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
