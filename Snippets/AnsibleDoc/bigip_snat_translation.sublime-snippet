<snippet>
<content><![CDATA[
${1:# address: Specifies the IP address of the SNAT 
# arp: If `yes', specifies that the NAT sends ARP 
# connection_limit: Specifies a limit on the number of connections a 
# description: Description of snat-translation. `none or ''' 
# ip_idle_timeout: Specifies the amount of time that connections to 
# name: (required) The name of SNAT translation. 
# partition: Device partition to manage resources on. 
# provider: A dict object containing connection details. 
# state: The SNAT translation state. If `absent', delete 
# tcp_idle_timeout: Specifies the amount of time that TCP 
# traffic_group: The traffic group for the snat-translation 
# udp_idle_timeout: Specifies the amount of time that UDP 
}- name: ${2:Name for bigip_snat_translation module.}
  bigip_snat_translation:
${3:   ${4:address}: ${5:"#"}}
${6:   ${7:arp}: ${8:"#"}}
${9:   ${10:connection_limit}: ${11:"#"}}
${12:   ${13:description}: ${14:"#"}}
${15:   ${16:ip_idle_timeout}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:partition}: ${23:"#"}}
${24:   ${25:provider}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:   ${31:tcp_idle_timeout}: ${32:"#"}}
${33:   ${34:traffic_group}: ${35:"#"}}
${36:   ${37:udp_idle_timeout}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>bigip_snat_translation</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
