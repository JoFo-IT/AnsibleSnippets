<snippet>
<content><![CDATA[
${1:# allow_downgrade: Specify if the named package and version is 
# autoremove: If `yes', removes all "leaf" packages from the 
# bugfix: If set to `yes', and `state=latest' then only 
# conf_file: The remote dnf configuration file to use for the 
# disable_excludes: Disable the excludes defined in DNF config 
# disable_gpg_check: Whether to disable the GPG checking of 
# disable_plugin: `Plugin' name to disable for the install/update 
# disablerepo: `Repoid' of repositories to disable for the 
# download_only: Only download the packages, do not install them. 
# enable_plugin: `Plugin' name to enable for the install/update 
# enablerepo: `Repoid' of repositories to enable for the 
# exclude: Package name(s) to exclude when state=present, 
# install_repoquery: This is effectively a no-op in DNF as it is not 
# installroot: Specifies an alternative installroot, relative 
# list: Various (non-idempotent) commands for usage with 
# name: (required) A package name or package specifier 
# releasever: Specifies an alternative release from which all 
# security: If set to `yes', and `state=latest' then only 
# skip_broken: Skip packages with broken dependencies(devsolve) 
# state: Whether to install (`present', `latest'), or 
# update_cache: Force dnf to check if cache is out of date and 
# update_only: When using latest, only update installed 
# validate_certs: This only applies if using a https url as the 
}- name: ${2:Name for dnf module.}
  dnf:
${3:   ${4:allow_downgrade}: ${5:"#"}}
${6:   ${7:autoremove}: ${8:"#"}}
${9:   ${10:bugfix}: ${11:"#"}}
${12:   ${13:conf_file}: ${14:"#"}}
${15:   ${16:disable_excludes}: ${17:"#"}}
${18:   ${19:disable_gpg_check}: ${20:"#"}}
${21:   ${22:disable_plugin}: ${23:"#"}}
${24:   ${25:disablerepo}: ${26:"#"}}
${27:   ${28:download_only}: ${29:"#"}}
${30:   ${31:enable_plugin}: ${32:"#"}}
${33:   ${34:enablerepo}: ${35:"#"}}
${36:   ${37:exclude}: ${38:"#"}}
${39:   ${40:install_repoquery}: ${41:"#"}}
${42:   ${43:installroot}: ${44:"#"}}
${45:   ${46:list}: ${47:"#"}}
${48:   ${49:name}: ${50:"#"}}
${51:   ${52:releasever}: ${53:"#"}}
${54:   ${55:security}: ${56:"#"}}
${57:   ${58:skip_broken}: ${59:"#"}}
${60:   ${61:state}: ${62:"#"}}
${63:   ${64:update_cache}: ${65:"#"}}
${66:   ${67:update_only}: ${68:"#"}}
${69:   ${70:validate_certs}: ${71:"#"}}
${72:${73:   become: ${74:true}} 
${75:   become_method: ${76:su}} 
${77:   become_user: ${78:nobody}} 
${79:   become_flags: ${80:"-s /bin/sh"}}} 
${81:   when: ${82:variable is defined}} 
${83:   with_items: ${84:array}} 
]]></content>
	<tabTrigger>dnf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
