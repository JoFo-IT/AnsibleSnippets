<snippet>
<content><![CDATA[
${1:# autoremove: If `yes', removes all "leaf" packages from the system that were originally installed as dependencies of 
# conf_file: The remote dnf configuration file to use for the transaction. 
# disable_gpg_check: Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if 
# disablerepo: `Repoid' of repositories to disable for the install/update operation. These repos will not persist 
# enablerepo: `Repoid' of repositories to enable for the install/update operation. These repos will not persist beyond 
# installroot: Specifies an alternative installroot, relative to which all packages will be installed. 
# list: Various (non-idempotent) commands for usage with `/usr/bin/ansible' and `not' playbooks. See examples. 
# name: (required) Package name, or package specifier with version, like `name-1.0'. When using state=latest, 
# state: Whether to install (`present', `latest'), or remove (`absent') a package. 
}- name: ${2:Name for dnf module.}
  dnf:
${3:   ${4:autoremove}: ${5:"#"}}
${6:   ${7:conf_file}: ${8:"#"}}
${9:   ${10:disable_gpg_check}: ${11:"#"}}
${12:   ${13:disablerepo}: ${14:"#"}}
${15:   ${16:enablerepo}: ${17:"#"}}
${18:   ${19:installroot}: ${20:"#"}}
${21:   ${22:list}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>dnf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
