<snippet>
<content><![CDATA[
${1:# description: The description of the monitor. 
# interval: The interval specifying how frequently the 
# ip: IP address part of the IP/port definition. If 
# name: (required) Monitor name. 
# parent: The parent template of this monitor template. 
# partition: Device partition to manage resources on. 
# port: Port address part of the IP/port definition. If 
# provider: A dict object containing connection details. 
# receive: The receive string for the monitor call. 
# receive_disable: This setting works like `receive', except that 
# reverse: Specifies whether the monitor operates in 
# send: The send string for the monitor call. When 
# state: When `present', ensures that the monitor exists. 
# target_password: Specifies the password, if the monitored target 
# target_username: Specifies the user name, if the monitored target 
# time_until_up: Specifies the amount of time in seconds after 
# timeout: The number of seconds in which the node or 
}- name: ${2:Name for bigip_monitor_http module.}
  bigip_monitor_http:
${3:   ${4:description}: ${5:"#"}}
${6:   ${7:interval}: ${8:"#"}}
${9:   ${10:ip}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:parent}: ${17:"#"}}
${18:   ${19:partition}: ${20:"#"}}
${21:   ${22:port}: ${23:"#"}}
${24:   ${25:provider}: ${26:"#"}}
${27:   ${28:receive}: ${29:"#"}}
${30:   ${31:receive_disable}: ${32:"#"}}
${33:   ${34:reverse}: ${35:"#"}}
${36:   ${37:send}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:target_password}: ${44:"#"}}
${45:   ${46:target_username}: ${47:"#"}}
${48:   ${49:time_until_up}: ${50:"#"}}
${51:   ${52:timeout}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>bigip_monitor_http</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
