<snippet>
<content><![CDATA[
${1:# anp: The name of the ANP. 
# deployment_immediacy: The deployment immediacy of the static port. 
# epg: The name of the EPG. 
# host: (required) IP Address or hostname of the ACI 
# leaf: The leaf of the static port. 
# mode: The mode of the static port. `native' means 
# output_level: Influence the output of this ACI module. 
# password: (required) The password to use for 
# path: The path of the static port. 
# pod: The pod of the static port. 
# port: Port number to be used for the REST connection. 
# schema: (required) The name of the schema. 
# site: (required) The name of the site. 
# state: Use `present' or `absent' for adding or 
# template: (required) The name of the template. 
# timeout: The socket level timeout in seconds. 
# type: The path type of the static port 
# use_proxy: If `no', it will not use a proxy, even if one is 
# use_ssl: If `no', an HTTP connection will be used instead 
# username: The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. 
# vlan: The port encap VLAN id of the static port. 
}- name: ${2:Name for mso_schema_site_anp_epg_staticport module.}
  mso_schema_site_anp_epg_staticport:
${3:   ${4:anp}: ${5:"#"}}
${6:   ${7:deployment_immediacy}: ${8:"#"}}
${9:   ${10:epg}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:leaf}: ${17:"#"}}
${18:   ${19:mode}: ${20:"#"}}
${21:   ${22:output_level}: ${23:"#"}}
${24:   ${25:password}: ${26:"#"}}
${27:   ${28:path}: ${29:"#"}}
${30:   ${31:pod}: ${32:"#"}}
${33:   ${34:port}: ${35:"#"}}
${36:   ${37:schema}: ${38:"#"}}
${39:   ${40:site}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:template}: ${47:"#"}}
${48:   ${49:timeout}: ${50:"#"}}
${51:   ${52:type}: ${53:"#"}}
${54:   ${55:use_proxy}: ${56:"#"}}
${57:   ${58:use_ssl}: ${59:"#"}}
${60:   ${61:username}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:   ${67:vlan}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>mso_schema_site_anp_epg_staticport</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
