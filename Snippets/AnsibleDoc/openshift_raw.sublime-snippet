<snippet>
<content><![CDATA[
${1:# api_key: Token used to authenticate with the API. Can 
# api_version: Use to specify the API version. Use to create, 
# cert_file: Path to a certificate used to authenticate with 
# context: The name of a context found in the config file. 
# force: If set to `True', and `state' is `present', an 
# host: Provide a URL for accessing the API. Can also be 
# key_file: Path to a key file used to authenticate with the 
# kind: Use to specify an object model. Use to create, 
# kubeconfig: Path to an existing Kubernetes config file. If 
# merge_type: Whether to override the default patch merge 
# patch: use-a 
# name: Use to specify an object name. Use to create, 
# namespace: Use to specify an object namespace. Useful when 
# password: Provide a password for authenticating with the 
# resource_definition: Provide a valid YAML definition (either as a 
# src: Provide a path to a file containing a valid YAML 
# ssl_ca_cert: Path to a CA certificate used to authenticate 
# state: Determines if an object should be created, 
# username: Provide a username for authenticating with the 
# verify_ssl: Whether or not to verify the API server's SSL 
}- name: ${2:Name for openshift_raw module.}
  openshift_raw:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:cert_file}: ${11:"#"}}
${12:   ${13:context}: ${14:"#"}}
${15:   ${16:force}: ${17:"#"}}
${18:   ${19:host}: ${20:"#"}}
${21:   ${22:key_file}: ${23:"#"}}
${24:   ${25:kind}: ${26:"#"}}
${27:   ${28:kubeconfig}: ${29:"#"}}
${30:   ${31:merge_type}: ${32:"#"}}
${33:   ${34:patch}: ${35:"#"}}
${36:   ${37:name}: ${38:"#"}}
${39:   ${40:namespace}: ${41:"#"}}
${42:   ${43:password}: ${44:"#"}}
${45:   ${46:resource_definition}: ${47:"#"}}
${48:   ${49:src}: ${50:"#"}}
${51:   ${52:ssl_ca_cert}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:username}: ${59:"#"}}
${60:   ${61:verify_ssl}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>openshift_raw</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
