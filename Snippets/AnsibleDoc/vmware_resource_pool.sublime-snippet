<snippet>
<content><![CDATA[
${1:# cluster: (required) Name of the cluster to add the host. 
# cpu_expandable_reservations: In a resource pool with an expandable reservation, the reservation on a resource pool can grow beyond 
# cpu_limit: The utilization of a virtual machine/resource pool will not exceed this limit, even if there are 
# cpu_reservation: Amount of resource that is guaranteed available to the virtual machine or resource pool. 
# cpu_shares: Memory shares are used in case of resource contention. 
# datacenter: (required) Name of the datacenter to add the host. 
# hostname: (required) ESXi hostname to manage. 
# mem_expandable_reservations: In a resource pool with an expandable reservation, the reservation on a resource pool can grow beyond 
# mem_limit: The utilization of a virtual machine/resource pool will not exceed this limit, even if there are 
# mem_reservation: Amount of resource that is guaranteed available to the virtual machine or resource pool. 
# mem_shares: Memory shares are used in case of resource contention. 
# password: (required) ESXi password. 
# resource_pool: (required) Resource pool name to manage. 
# state: Add or remove the resource pool 
# username: (required) ESXi username. 
# validate_certs: Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted. 
}- name: ${2:Name for vmware_resource_pool module.}
  vmware_resource_pool:
${3:   ${4:cluster}: ${5:"#"}}
${6:   ${7:cpu_expandable_reservations}: ${8:"#"}}
${9:   ${10:cpu_limit}: ${11:"#"}}
${12:   ${13:cpu_reservation}: ${14:"#"}}
${15:   ${16:cpu_shares}: ${17:"#"}}
${18:   ${19:datacenter}: ${20:"#"}}
${21:   ${22:hostname}: ${23:"#"}}
${24:   ${25:mem_expandable_reservations}: ${26:"#"}}
${27:   ${28:mem_limit}: ${29:"#"}}
${30:   ${31:mem_reservation}: ${32:"#"}}
${33:   ${34:mem_shares}: ${35:"#"}}
${36:   ${37:password}: ${38:"#"}}
${39:   ${40:resource_pool}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:username}: ${47:"#"}}
${48:   ${49:validate_certs}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>vmware_resource_pool</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
