<snippet>
<content><![CDATA[
${1:# cluster: (required) Name of the cluster to add the host. 
# cpu_expandable_reservations: In a resource pool with an expandable 
# cpu_limit: The utilization of a virtual machine/resource 
# cpu_reservation: Amount of resource that is guaranteed available 
# cpu_shares: Memory shares are used in case of resource 
# datacenter: (required) Name of the datacenter to add the 
# hostname: The hostname or IP address of the vSphere 
# mem_expandable_reservations: In a resource pool with an expandable 
# mem_limit: The utilization of a virtual machine/resource 
# mem_reservation: Amount of resource that is guaranteed available 
# mem_shares: Memory shares are used in case of resource 
# password: The password of the vSphere vCenter or ESXi 
# port: The port number of the vSphere vCenter or ESXi 
# proxy_host: Address of a proxy that will receive all HTTPS 
# proxy_port: Port of the HTTP proxy that will receive all 
# resource_pool: (required) Resource pool name to manage. 
# state: Add or remove the resource pool 
# username: The username of the vSphere vCenter or ESXi 
# validate_certs: Allows connection when SSL certificates are not 
}- name: ${2:Name for vmware_resource_pool module.}
  vmware_resource_pool:
${3:   ${4:cluster}: ${5:"#"}}
${6:   ${7:cpu_expandable_reservations}: ${8:"#"}}
${9:   ${10:cpu_limit}: ${11:"#"}}
${12:   ${13:cpu_reservation}: ${14:"#"}}
${15:   ${16:cpu_shares}: ${17:"#"}}
${18:   ${19:datacenter}: ${20:"#"}}
${21:   ${22:hostname}: ${23:"#"}}
${24:   ${25:mem_expandable_reservations}: ${26:"#"}}
${27:   ${28:mem_limit}: ${29:"#"}}
${30:   ${31:mem_reservation}: ${32:"#"}}
${33:   ${34:mem_shares}: ${35:"#"}}
${36:   ${37:password}: ${38:"#"}}
${39:   ${40:port}: ${41:"#"}}
${42:   ${43:proxy_host}: ${44:"#"}}
${45:   ${46:proxy_port}: ${47:"#"}}
${48:   ${49:resource_pool}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:username}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>vmware_resource_pool</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
