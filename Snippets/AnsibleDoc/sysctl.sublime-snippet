<snippet>
<content><![CDATA[
${1:# ignoreerrors: Use this option to ignore errors about unknown keys. 
# name: (required) The dot-separated path (aka `key') specifying the sysctl variable. 
# reload: If `yes', performs a `/sbin/sysctl -p' if the `sysctl_file' is updated. If `no', does not reload 
# state: Whether the entry should be present or absent in the sysctl file. 
# sysctl_file: Specifies the absolute path to `sysctl.conf', if not `/etc/sysctl.conf'. 
# sysctl_set: Verify token value with the sysctl command and set with -w if necessary 
# value: Desired value of the sysctl key. 
}- name: ${2:Name for sysctl module.}
  sysctl:
${3:   ${4:ignoreerrors}: ${5:"#"}}
${6:   ${7:name}: ${8:"#"}}
${9:   ${10:reload}: ${11:"#"}}
${12:   ${13:state}: ${14:"#"}}
${15:   ${16:sysctl_file}: ${17:"#"}}
${18:   ${19:sysctl_set}: ${20:"#"}}
${21:   ${22:value}: ${23:"#"}}
${24:${25:   become: ${26:true}} 
${27:   become_method: ${28:su}} 
${29:   become_user: ${30:nobody}} 
${31:   become_flags: ${32:"-s /bin/sh"}}} 
${33:   when: ${34:variable is defined}} 
${35:   with_items: ${36:array}} 
]]></content>
	<tabTrigger>sysctl</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
