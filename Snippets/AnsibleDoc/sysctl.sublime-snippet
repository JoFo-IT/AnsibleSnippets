<snippet>
<content><![CDATA[
${1:#ignoreerrors = Use this option to ignore errors about unknown keys.
#name = The dot-separated path (aka `key') specifying the sysctl variable.
#reload = If `yes', performs a `/sbin/sysctl -p' if the `sysctl_file' is updated. If `no', does not reload `sysctl' even
#state = Whether the entry should be present or absent in the sysctl file.
#sysctl_file = Specifies the absolute path to `sysctl.conf', if not `/etc/sysctl.conf'.
#sysctl_set = Verify token value with the sysctl command and set with -w if necessary
#value = Desired value of the sysctl key.
}- name: ${2:Name for sysctl module.}
${3:  become: ${4:yes}}
  sysctl: ${5:ignoreerrors=${6: } }${7:name=${8: } }${9:reload=${10: } }${11:state=${12: } }${13:sysctl_file=${14: } }${15:sysctl_set=${16: } }${17:value=${18: } }
${19:  when: ${20: variable is defined}}
${21:  with_items: ${22: array}}
]]></content>
	<tabTrigger>sysctl</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
