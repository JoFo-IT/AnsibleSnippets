<snippet>
<content><![CDATA[
${1:# certificate_name: The X.509 certificate name attached to the APIC 
# consumer_match: The match criteria across consumers. The APIC 
# contract: The name of the Contract. 
# description: Description for the contract subject. 
# dscp: The target DSCP. The APIC defaults to 
# host: (required) IP Address or hostname of APIC 
# output_level: Influence the output of this ACI module. 
# password: (required) The password to use for 
# port: Port number to be used for REST connection. The 
# priority: The QoS class. The APIC defaults to 
# private_key: (required) PEM formatted file that contains your 
# provider_match: The match criteria across providers. The APIC 
# reverse_filter: Determines if the APIC should reverse the src 
# state: Use `present' or `absent' for adding or 
# subject: The contract subject name. 
# tenant: The name of the tenant. 
# timeout: The socket level timeout in seconds. 
# use_proxy: If `no', it will not use a proxy, even if one is 
# use_ssl: If `no', an HTTP connection will be used instead 
# username: The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for aci_contract_subject module.}
  aci_contract_subject:
${3:   ${4:certificate_name}: ${5:"#"}}
${6:   ${7:consumer_match}: ${8:"#"}}
${9:   ${10:contract}: ${11:"#"}}
${12:   ${13:description}: ${14:"#"}}
${15:   ${16:dscp}: ${17:"#"}}
${18:   ${19:host}: ${20:"#"}}
${21:   ${22:output_level}: ${23:"#"}}
${24:   ${25:password}: ${26:"#"}}
${27:   ${28:port}: ${29:"#"}}
${30:   ${31:priority}: ${32:"#"}}
${33:   ${34:private_key}: ${35:"#"}}
${36:   ${37:provider_match}: ${38:"#"}}
${39:   ${40:reverse_filter}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:subject}: ${47:"#"}}
${48:   ${49:tenant}: ${50:"#"}}
${51:   ${52:timeout}: ${53:"#"}}
${54:   ${55:use_proxy}: ${56:"#"}}
${57:   ${58:use_ssl}: ${59:"#"}}
${60:   ${61:username}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>aci_contract_subject</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
