<snippet>
<content><![CDATA[
${1:# add_members: List of server identifiers (name or id) to be 
# api_url: Custom API URL. Overrides the ONEANDONE_API_URL 
# auth_token: (required) Authenticating API token provided by 
# datacenter: The identifier of the datacenter where the 
# description: Set a description for the network. 
# name: (required) Private network name used with 
# network_address: Set a private network space, i.e. 192.168.1.0 
# private_network: (required) The identifier (id or name) of the 
# remove_members: List of server identifiers (name or id) to be 
# state: Define a network's state to create, remove, or 
# subnet_mask: Set the netmask for the private network, i.e. 
# wait: wait for the instance to be in state 'running' 
# wait_interval: Defines the number of seconds to wait when using 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for oneandone_private_network module.}
  oneandone_private_network:
${3:   ${4:add_members}: ${5:"#"}}
${6:   ${7:api_url}: ${8:"#"}}
${9:   ${10:auth_token}: ${11:"#"}}
${12:   ${13:datacenter}: ${14:"#"}}
${15:   ${16:description}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:network_address}: ${23:"#"}}
${24:   ${25:private_network}: ${26:"#"}}
${27:   ${28:remove_members}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:subnet_mask}: ${35:"#"}}
${36:   ${37:wait}: ${38:"#"}}
${39:   ${40:wait_interval}: ${41:"#"}}
${42:   ${43:wait_timeout}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>oneandone_private_network</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
