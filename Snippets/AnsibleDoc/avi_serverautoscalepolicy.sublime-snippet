<snippet>
<content><![CDATA[
${1:# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# avi_disable_session_cache_as_fact: It disables avi session information to be cached 
# controller: IP address or hostname of the controller. The 
# description: User defined description for the object. 
# intelligent_autoscale: Use avi intelligent autoscale algorithm where 
# intelligent_scalein_margin: Maximum extra capacity as percentage of load 
# intelligent_scaleout_margin: Minimum extra capacity as percentage of load 
# max_scalein_adjustment_step: Maximum number of servers to scalein 
# max_scaleout_adjustment_step: Maximum number of servers to scaleout 
# max_size: Maximum number of servers after scaleout. 
# min_size: No scale-in happens once number of operationally 
# name: (required) Name of the object. 
# password: Password of Avi user in Avi controller. The 
# scalein_alertconfig_refs: Trigger scalein when alerts due to any of these 
# scalein_cooldown: Cooldown period during which no new scalein is 
# scaleout_alertconfig_refs: Trigger scaleout when alerts due to any of these 
# scaleout_cooldown: Cooldown period during which no new scaleout is 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# url: Avi controller URL of the object. 
# use_predicted_load: Use predicted load rather than current load. 
# username: Username used for accessing Avi controller. The 
# uuid: Unique object identifier of the object. 
}- name: ${2:Name for avi_serverautoscalepolicy module.}
  avi_serverautoscalepolicy:
${3:   ${4:api_context}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:avi_api_patch_op}: ${11:"#"}}
${12:   ${13:avi_api_update_method}: ${14:"#"}}
${15:   ${16:avi_credentials}: ${17:"#"}}
${18:   ${19:avi_disable_session_cache_as_fact}: ${20:"#"}}
${21:   ${22:controller}: ${23:"#"}}
${24:   ${25:description}: ${26:"#"}}
${27:   ${28:intelligent_autoscale}: ${29:"#"}}
${30:   ${31:intelligent_scalein_margin}: ${32:"#"}}
${33:   ${34:intelligent_scaleout_margin}: ${35:"#"}}
${36:   ${37:max_scalein_adjustment_step}: ${38:"#"}}
${39:   ${40:max_scaleout_adjustment_step}: ${41:"#"}}
${42:   ${43:max_size}: ${44:"#"}}
${45:   ${46:min_size}: ${47:"#"}}
${48:   ${49:name}: ${50:"#"}}
${51:   ${52:password}: ${53:"#"}}
${54:   ${55:scalein_alertconfig_refs}: ${56:"#"}}
${57:   ${58:scalein_cooldown}: ${59:"#"}}
${60:   ${61:scaleout_alertconfig_refs}: ${62:"#"}}
${63:   ${64:scaleout_cooldown}: ${65:"#"}}
${66:   ${67:state}: ${68:"#"}}
${69:   ${70:tenant}: ${71:"#"}}
${72:   ${73:tenant_ref}: ${74:"#"}}
${75:   ${76:tenant_uuid}: ${77:"#"}}
${78:   ${79:url}: ${80:"#"}}
${81:   ${82:use_predicted_load}: ${83:"#"}}
${84:   ${85:username}: ${86:"#"}}
${87:   ${88:uuid}: ${89:"#"}}
${90:${91:   become: ${92:true}} 
${93:   become_method: ${94:su}} 
${95:   become_user: ${96:nobody}} 
${97:   become_flags: ${98:"-s /bin/sh"}}} 
${99:   when: ${100:variable is defined}} 
${101:   with_items: ${102:array}} 
]]></content>
	<tabTrigger>avi_serverautoscalepolicy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
