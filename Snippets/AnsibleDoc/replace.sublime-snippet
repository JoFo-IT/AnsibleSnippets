<snippet>
<content><![CDATA[
${1:# after: If specified, the line after the replace/remove 
# attributes: Attributes the file or directory should have. To 
# backup: Create a backup file including the timestamp 
# before: If specified, the line before the replace/remove 
# encoding: The character encoding for reading and writing 
# group: Name of the group that should own the 
# mode: Mode the file or directory should be. For those 
# others: All arguments accepted by the [file] module also 
# owner: Name of the user that should own the 
# path: (required) The file to modify. Before 2.3 this 
# regexp: (required) The regular expression to look for in 
# set: ]' 
# like: \n]'. 
# replace: The string to replace regexp matches. May 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# unsafe_writes: By default this module uses atomic operations to 
# validate: The validation command to run before copying 
}- name: ${2:Name for replace module.}
  replace:
${3:   ${4:after}: ${5:"#"}}
${6:   ${7:attributes}: ${8:"#"}}
${9:   ${10:backup}: ${11:"#"}}
${12:   ${13:before}: ${14:"#"}}
${15:   ${16:encoding}: ${17:"#"}}
${18:   ${19:group}: ${20:"#"}}
${21:   ${22:mode}: ${23:"#"}}
${24:   ${25:others}: ${26:"#"}}
${27:   ${28:owner}: ${29:"#"}}
${30:   ${31:path}: ${32:"#"}}
${33:   ${34:regexp}: ${35:"#"}}
${36:   ${37:set}: ${38:"#"}}
${39:   ${40:like}: ${41:"#"}}
${42:   ${43:replace}: ${44:"#"}}
${45:   ${46:selevel}: ${47:"#"}}
${48:   ${49:serole}: ${50:"#"}}
${51:   ${52:setype}: ${53:"#"}}
${54:   ${55:seuser}: ${56:"#"}}
${57:   ${58:unsafe_writes}: ${59:"#"}}
${60:   ${61:validate}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>replace</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
