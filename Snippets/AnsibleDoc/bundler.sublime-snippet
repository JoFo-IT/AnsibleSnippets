<snippet>
<content><![CDATA[
${1:# binstub_directory: Only applies if state is `present'. Specifies the directory to install any gem bins files to. When 
# chdir: The directory to execute the bundler commands from. This directoy needs to contain a valid Gemfile or 
# clean: Only applies if state is `present'. If set removes any gems on the target host that are not in the 
# deployment_mode: Only applies if state is `present'. If set it will only install gems that are in the default or 
# exclude_groups: A list of Gemfile groups to exclude during operations. This only applies when state is `present'. 
# executable: The path to the bundler executable 
# extra_args: A space separated string of additional commands that can be applied to the Bundler command. Refer to the 
# gem_path: Only applies if state is `present'. Specifies the directory to install the gems into. If `chdir' is set 
# gemfile: Only applies if state is `present'. The path to the gemfile to use to install gems. 
# local: If set only installs gems from the cache on the target host 
# state: The desired state of the Gem bundle. `latest' updates gems to the most recent, acceptable version 
# user_install: Only applies if state is `present'. Installs gems in the local user's cache or for all users 
}- name: ${2:Name for bundler module.}
  bundler:
${3:   ${4:binstub_directory}: ${5:"#"}}
${6:   ${7:chdir}: ${8:"#"}}
${9:   ${10:clean}: ${11:"#"}}
${12:   ${13:deployment_mode}: ${14:"#"}}
${15:   ${16:exclude_groups}: ${17:"#"}}
${18:   ${19:executable}: ${20:"#"}}
${21:   ${22:extra_args}: ${23:"#"}}
${24:   ${25:gem_path}: ${26:"#"}}
${27:   ${28:gemfile}: ${29:"#"}}
${30:   ${31:local}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:user_install}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>bundler</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
