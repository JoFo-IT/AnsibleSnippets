<snippet>
<content><![CDATA[
${1:# datastore: Specifies the datastore to put the file in. 
# force: Force overwrite a file. By default, files will 
# name: The name of the file as it should reside on the 
# partition: Device partition to manage resources on. 
# provider: A dict object containing connection details. 
# source: Specifies the path of the file to upload. This 
# state: When `present', ensures that the resource 
}- name: ${2:Name for bigip_file_copy module.}
  bigip_file_copy:
${3:   ${4:datastore}: ${5:"#"}}
${6:   ${7:force}: ${8:"#"}}
${9:   ${10:name}: ${11:"#"}}
${12:   ${13:partition}: ${14:"#"}}
${15:   ${16:provider}: ${17:"#"}}
${18:   ${19:source}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:${25:   become: ${26:true}} 
${27:   become_method: ${28:su}} 
${29:   become_user: ${30:nobody}} 
${31:   become_flags: ${32:"-s /bin/sh"}}} 
${33:   when: ${34:variable is defined}} 
${35:   with_items: ${36:array}} 
]]></content>
	<tabTrigger>bigip_file_copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
