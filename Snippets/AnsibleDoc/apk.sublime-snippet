<snippet>
<content><![CDATA[
${1:# available: During upgrade, reset versioned world dependencies and change logic to prefer replacing or downgrading 
# name: A package name, like `foo', or multiple packages, like `foo, bar'. 
# repository: A package repository or multiple repositories 
# state: Indicates the desired package(s) state. `present' ensures the package(s) is/are present. `absent' 
# update_cache: Update repository indexes. Can be run with other steps or on it's own. 
# upgrade: Upgrade all installed packages to their latest version. 
}- name: ${2:Name for apk module.}
  apk:
${3:   ${4:available}: ${5:"#"}}
${6:   ${7:name}: ${8:"#"}}
${9:   ${10:repository}: ${11:"#"}}
${12:   ${13:state}: ${14:"#"}}
${15:   ${16:update_cache}: ${17:"#"}}
${18:   ${19:upgrade}: ${20:"#"}}
${21:${22:   become: ${23:true}} 
${24:   become_method: ${25:su}} 
${26:   become_user: ${27:nobody}} 
${28:   become_flags: ${29:"-s /bin/sh"}}} 
${30:   when: ${31:variable is defined}} 
${32:   with_items: ${33:array}} 
]]></content>
	<tabTrigger>apk</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
