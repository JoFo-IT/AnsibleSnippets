<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To get supported flags look at the man page for `chattr' 
# backup: Create a backup file including the timestamp information so you can get the original file back if you 
# content: When used instead of `src', sets the contents of a file directly to the specified value. For anything 
# decrypt: This option controls the autodecryption of source files using vault. 
# dest: (required) Remote absolute path where the file should be copied to. If `src' is a directory, this must 
# directory_mode: When doing a recursive copy set the mode for the directories. If this is not set we will use the system 
# follow: This flag indicates that filesystem links in the destination, if they exist, should be followed. 
# force: the default is `yes', which will replace the remote file when contents are different than the source. If 
# group: Name of the group that should own the file/directory, as would be fed to `chown'. 
# local_follow: This flag indicates that filesystem links in the source tree, if they exist, should be followed. 
# mode: Mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are 
# owner: Name of the user that should own the file/directory, as would be fed to `chown'. 
# remote_src: If `no', it will search for `src' at originating/master machine. If `yes' it will go to the 
# selevel: Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'. 
# serole: Role part of SELinux file context, `_default' feature works as for `seuser'. 
# setype: Type part of SELinux file context, `_default' feature works as for `seuser'. 
# seuser: User part of SELinux file context. Will default to system policy, if applicable. If set to `_default', 
# src: Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, 
# unsafe_writes: Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the 
# validate: The validation command to run before copying into place. The path to the file to validate is passed in 
}- name: ${2:Name for copy module.}
  copy:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:content}: ${11:"#"}}
${12:   ${13:decrypt}: ${14:"#"}}
${15:   ${16:dest}: ${17:"#"}}
${18:   ${19:directory_mode}: ${20:"#"}}
${21:   ${22:follow}: ${23:"#"}}
${24:   ${25:force}: ${26:"#"}}
${27:   ${28:group}: ${29:"#"}}
${30:   ${31:local_follow}: ${32:"#"}}
${33:   ${34:mode}: ${35:"#"}}
${36:   ${37:owner}: ${38:"#"}}
${39:   ${40:remote_src}: ${41:"#"}}
${42:   ${43:selevel}: ${44:"#"}}
${45:   ${46:serole}: ${47:"#"}}
${48:   ${49:setype}: ${50:"#"}}
${51:   ${52:seuser}: ${53:"#"}}
${54:   ${55:src}: ${56:"#"}}
${57:   ${58:unsafe_writes}: ${59:"#"}}
${60:   ${61:validate}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
