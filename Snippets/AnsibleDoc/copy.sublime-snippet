<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To 
# backup: Create a backup file including the timestamp 
# checksum: SHA1 checksum of the file being transferred. 
# content: When used instead of `src', sets the contents of 
# decrypt: This option controls the autodecryption of 
# dest: (required) Remote absolute path where the file 
# directory_mode: When doing a recursive copy set the mode for the 
# follow: This flag indicates that filesystem links in the 
# force: the default is `yes', which will replace the 
# group: Name of the group that should own the 
# local_follow: This flag indicates that filesystem links in the 
# mode: Mode the file or directory should be. For those 
# owner: Name of the user that should own the 
# remote_src: If `no', it will search for `src' at 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# src: Local path to a file to copy to the remote 
# unsafe_writes: By default this module uses atomic operations to 
# validate: The validation command to run before copying 
}- name: ${2:Name for copy module.}
  copy:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:checksum}: ${11:"#"}}
${12:   ${13:content}: ${14:"#"}}
${15:   ${16:decrypt}: ${17:"#"}}
${18:   ${19:dest}: ${20:"#"}}
${21:   ${22:directory_mode}: ${23:"#"}}
${24:   ${25:follow}: ${26:"#"}}
${27:   ${28:force}: ${29:"#"}}
${30:   ${31:group}: ${32:"#"}}
${33:   ${34:local_follow}: ${35:"#"}}
${36:   ${37:mode}: ${38:"#"}}
${39:   ${40:owner}: ${41:"#"}}
${42:   ${43:remote_src}: ${44:"#"}}
${45:   ${46:selevel}: ${47:"#"}}
${48:   ${49:serole}: ${50:"#"}}
${51:   ${52:setype}: ${53:"#"}}
${54:   ${55:seuser}: ${56:"#"}}
${57:   ${58:src}: ${59:"#"}}
${60:   ${61:unsafe_writes}: ${62:"#"}}
${63:   ${64:validate}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
