<snippet>
<content><![CDATA[
${1:#backup = Create a backup file including the timestamp information so you can get the original file back if you somehow
#content = When used instead of 'src', sets the contents of a file directly to the specified value. This is for simple
#dest = Remote absolute path where the file should be copied to. If src is a directory, this must be a directory too.
#directory_mode = When doing a recursive copy set the mode for the directories. If this is not set we will use the system
#follow = This flag indicates that filesystem links, if they exist, should be followed.
#force = the default is `yes', which will replace the remote file when contents are different than the source. If `no',
#group = name of the group that should own the file/directory, as would be fed to `chown'
#mode = mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are actually octal
#owner = name of the user that should own the file/directory, as would be fed to `chown'
#remote_src = If False, it will search for src at originating/master machine, if True it will go to the remote/target machine
#selevel = level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'.
#serole = role part of SELinux file context, `_default' feature works as for `seuser'.
#setype = type part of SELinux file context, `_default' feature works as for `seuser'.
#seuser = user part of SELinux file context. Will default to system policy, if applicable. If set to `_default', it will
#src = Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is
#validate = The validation command to run before copying into place. The path to the file to validate is passed in via '%s'
}- name: ${2:Name for copy module.}
${3:  become: ${4:yes}}
  copy: ${5:backup=${6: } }${7:content=${8: } }${9:dest=${10: } }${11:directory_mode=${12: } }${13:follow=${14: } }${15:force=${16: } }${17:group=${18: } }${19:mode=${20: } }${21:owner=${22: } }${23:remote_src=${24: } }${25:selevel=${26: } }${27:serole=${28: } }${29:setype=${30: } }${31:seuser=${32: } }${33:src=${34: } }${35:validate=${36: } }
${37:  when: ${38: variable is defined}}
${39:  with_items: ${40: array}}
]]></content>
	<tabTrigger>copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
