<snippet>
<content><![CDATA[
${1:# api_version: Avi API version of to use for Avi API and objects. 
# ca_certs: Ca certificates in certificate chain. 
# certificate: (required) Sslcertificate settings for sslkeyandcertificate. 
# certificate_management_profile_ref: It is a reference to an object of type certificatemanagementprofile. 
# controller: IP address or hostname of the controller. The default value is the environment variable 
# created_by: Creator name. 
# dynamic_params: Dynamic parameters needed for certificate management profile. 
# enckey_base64: Encrypted private key corresponding to the private key (e.g. Those generated by an hsm such as thales 
# enckey_name: Name of the encrypted private key (e.g. Those generated by an hsm such as thales nshield). 
# hardwaresecuritymodulegroup_ref: It is a reference to an object of type hardwaresecuritymodulegroup. 
# key: Private key. 
# key_params: Sslkeyparams settings for sslkeyandcertificate. 
# name: (required) Name of the object. 
# password: Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'. 
# state: The state that should be applied on the entity. 
# status: Enum options - ssl_certificate_finished, ssl_certificate_pending. Default value when not specified in 
# tenant: Name of tenant used for all Avi API calls and context of object. 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and context of object. 
# type: Enum options - ssl_certificate_type_virtualservice, ssl_certificate_type_system, 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The default value is the environment variable 
# uuid: Unique object identifier of the object. 
}- name: ${2:Name for avi_sslkeyandcertificate module.}
  avi_sslkeyandcertificate:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:ca_certs}: ${8:"#"}}
${9:   ${10:certificate}: ${11:"#"}}
${12:   ${13:certificate_management_profile_ref}: ${14:"#"}}
${15:   ${16:controller}: ${17:"#"}}
${18:   ${19:created_by}: ${20:"#"}}
${21:   ${22:dynamic_params}: ${23:"#"}}
${24:   ${25:enckey_base64}: ${26:"#"}}
${27:   ${28:enckey_name}: ${29:"#"}}
${30:   ${31:hardwaresecuritymodulegroup_ref}: ${32:"#"}}
${33:   ${34:key}: ${35:"#"}}
${36:   ${37:key_params}: ${38:"#"}}
${39:   ${40:name}: ${41:"#"}}
${42:   ${43:password}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:status}: ${50:"#"}}
${51:   ${52:tenant}: ${53:"#"}}
${54:   ${55:tenant_ref}: ${56:"#"}}
${57:   ${58:tenant_uuid}: ${59:"#"}}
${60:   ${61:type}: ${62:"#"}}
${63:   ${64:url}: ${65:"#"}}
${66:   ${67:username}: ${68:"#"}}
${69:   ${70:uuid}: ${71:"#"}}
${72:${73:   become: ${74:true}} 
${75:   become_method: ${76:su}} 
${77:   become_user: ${78:nobody}} 
${79:   become_flags: ${80:"-s /bin/sh"}}} 
${81:   when: ${82:variable is defined}} 
${83:   with_items: ${84:array}} 
]]></content>
	<tabTrigger>avi_sslkeyandcertificate</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
