<snippet>
<content><![CDATA[
${1:# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# ca_certs: Ca certificates in certificate chain. 
# certificate: (required) Sslcertificate settings for 
# certificate_management_profile_ref: It is a reference to an object of type 
# controller: IP address or hostname of the controller. The 
# created_by: Creator name. 
# dynamic_params: Dynamic parameters needed for certificate 
# enckey_base64: Encrypted private key corresponding to the 
# enckey_name: Name of the encrypted private key (e.g. Those 
# hardwaresecuritymodulegroup_ref: It is a reference to an object of type 
# key: Private key. 
# key_params: Sslkeyparams settings for sslkeyandcertificate. 
# name: (required) Name of the object. 
# password: Password of Avi user in Avi controller. The 
# state: The state that should be applied on the entity. 
# status: Enum options - ssl_certificate_finished, 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# type: Enum options - 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Unique object identifier of the object. 
}- name: ${2:Name for avi_sslkeyandcertificate module.}
  avi_sslkeyandcertificate:
${3:   ${4:api_context}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:avi_api_patch_op}: ${11:"#"}}
${12:   ${13:avi_api_update_method}: ${14:"#"}}
${15:   ${16:avi_credentials}: ${17:"#"}}
${18:   ${19:ca_certs}: ${20:"#"}}
${21:   ${22:certificate}: ${23:"#"}}
${24:   ${25:certificate_management_profile_ref}: ${26:"#"}}
${27:   ${28:controller}: ${29:"#"}}
${30:   ${31:created_by}: ${32:"#"}}
${33:   ${34:dynamic_params}: ${35:"#"}}
${36:   ${37:enckey_base64}: ${38:"#"}}
${39:   ${40:enckey_name}: ${41:"#"}}
${42:   ${43:hardwaresecuritymodulegroup_ref}: ${44:"#"}}
${45:   ${46:key}: ${47:"#"}}
${48:   ${49:key_params}: ${50:"#"}}
${51:   ${52:name}: ${53:"#"}}
${54:   ${55:password}: ${56:"#"}}
${57:   ${58:state}: ${59:"#"}}
${60:   ${61:status}: ${62:"#"}}
${63:   ${64:tenant}: ${65:"#"}}
${66:   ${67:tenant_ref}: ${68:"#"}}
${69:   ${70:tenant_uuid}: ${71:"#"}}
${72:   ${73:type}: ${74:"#"}}
${75:   ${76:url}: ${77:"#"}}
${78:   ${79:username}: ${80:"#"}}
${81:   ${82:uuid}: ${83:"#"}}
${84:${85:   become: ${86:true}} 
${87:   become_method: ${88:su}} 
${89:   become_user: ${90:nobody}} 
${91:   become_flags: ${92:"-s /bin/sh"}}} 
${93:   when: ${94:variable is defined}} 
${95:   with_items: ${96:array}} 
]]></content>
	<tabTrigger>avi_sslkeyandcertificate</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
