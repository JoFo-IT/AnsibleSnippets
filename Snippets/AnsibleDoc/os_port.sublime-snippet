<snippet>
<content><![CDATA[
${1:#admin_state_up = Sets admin state.
#allowed_address_pairs = Allowed address pairs list.  Allowed address pairs are supported with dictionary structure. e.g.
#api_timeout = How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be
#auth = Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password'
#auth_type = Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the
#availability_zone = Name of the availability zone.
#cacert = A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
#cert = A path to a client certificate to use as part of the SSL transaction
#cloud = Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is not needed
#device_id = Device ID of device using this port.
#device_owner = The ID of the entity that uses this port.
#endpoint_type = Endpoint URL type to fetch from the service catalog.
#extra_dhcp_opt = Extra dhcp options to be assigned to this port.  Extra options are supported with dictionary structure. e.g.
#fixed_ips = Desired IP and/or subnet for this port.  Subnet is referenced by subnet_id and IP is referenced by ip_address.
#key = A path to a client key to use as part of the SSL transaction
#mac_address = MAC address of this port.
#name = Name that has to be given to the port.
#network = Network ID or name this port belongs to.
#no_security_groups = Do not associate a security group with this port.
#region_name = Name of the region.
#security_groups = Security group(s) ID(s) or name(s) associated with the port (comma separated string or YAML list)
#state = Should the resource be present or absent.
#timeout = How long should ansible wait for the requested resource.
#validate_certs = Whether or not SSL API requests should be verified.
#wait = Should ansible wait until the requested resource is complete.
}- name: ${2:Name for os_port module.}
${3:  become: ${4:yes}}
  os_port: ${5:admin_state_up=${6: } }${7:allowed_address_pairs=${8: } }${9:api_timeout=${10: } }${11:auth=${12: } }${13:auth_type=${14: } }${15:availability_zone=${16: } }${17:cacert=${18: } }${19:cert=${20: } }${21:cloud=${22: } }${23:device_id=${24: } }${25:device_owner=${26: } }${27:endpoint_type=${28: } }${29:extra_dhcp_opt=${30: } }${31:fixed_ips=${32: } }${33:key=${34: } }${35:mac_address=${36: } }${37:name=${38: } }${39:network=${40: } }${41:no_security_groups=${42: } }${43:region_name=${44: } }${45:security_groups=${46: } }${47:state=${48: } }${49:timeout=${50: } }${51:validate_certs=${52: } }${53:wait=${54: } }
${55:  when: ${56: variable is defined}}
${57:  with_items: ${58: array}}
]]></content>
	<tabTrigger>os_port</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
