<snippet>
<content><![CDATA[
${1:# add_public_ip: Whether to add a public ip to the server 
# additional_disks: The list of additional disks for the server 
# alert_policy_id: The alert policy to assign to the server. This 
# alert_policy_name: The alert policy to assign to the server. This 
# alias: The account alias to provision the servers 
# anti_affinity_policy_id: The anti-affinity policy to assign to the 
# anti_affinity_policy_name: The anti-affinity policy to assign to the 
# configuration_id: Only required for bare metal servers. Specifies 
# count: The number of servers to build (mutually 
# count_group: Required when exact_count is specified.  The 
# cpu: How many CPUs to provision on the server 
# cpu_autoscale_policy_id: The autoscale policy to assign to the server. 
# custom_fields: The list of custom fields to set on the server. 
# description: The description to set for the server. 
# exact_count: Run in idempotent mode.  Will insure that this 
# group: The Server Group to create servers under. 
# ip_address: The IP Address for the server. One is assigned 
# location: The Datacenter to create servers in. 
# managed_os: Whether to create the server as 'Managed' or 
# memory: Memory in GB. 
# name: A 1 to 6 character identifier to use for the 
# network_id: The network UUID on which to create servers. 
# os_type: Only required for bare metal servers. Specifies 
# packages: The list of blue print packages to run on the 
# password: Password for the administrator / root user 
# primary_dns: Primary DNS used by the server. 
# public_ip_ports: A list of ports to allow on the firewall to the 
# public_ip_protocol: The protocol to use for the public ip if 
# secondary_dns: Secondary DNS used by the server. 
# server_ids: Required for started, stopped, and absent 
# source_server_password: The password for the source server if a clone is 
# state: The state to insure that the provided resources 
# storage_type: The type of storage to attach to the server. 
# template: The template to use for server creation.  Will 
# ttl: The time to live for the server in seconds.  The 
# type: The type of server to create. 
# wait: Whether to wait for the provisioning tasks to 
}- name: ${2:Name for clc_server module.}
  clc_server:
${3:   ${4:add_public_ip}: ${5:"#"}}
${6:   ${7:additional_disks}: ${8:"#"}}
${9:   ${10:alert_policy_id}: ${11:"#"}}
${12:   ${13:alert_policy_name}: ${14:"#"}}
${15:   ${16:alias}: ${17:"#"}}
${18:   ${19:anti_affinity_policy_id}: ${20:"#"}}
${21:   ${22:anti_affinity_policy_name}: ${23:"#"}}
${24:   ${25:configuration_id}: ${26:"#"}}
${27:   ${28:count}: ${29:"#"}}
${30:   ${31:count_group}: ${32:"#"}}
${33:   ${34:cpu}: ${35:"#"}}
${36:   ${37:cpu_autoscale_policy_id}: ${38:"#"}}
${39:   ${40:custom_fields}: ${41:"#"}}
${42:   ${43:description}: ${44:"#"}}
${45:   ${46:exact_count}: ${47:"#"}}
${48:   ${49:group}: ${50:"#"}}
${51:   ${52:ip_address}: ${53:"#"}}
${54:   ${55:location}: ${56:"#"}}
${57:   ${58:managed_os}: ${59:"#"}}
${60:   ${61:memory}: ${62:"#"}}
${63:   ${64:name}: ${65:"#"}}
${66:   ${67:network_id}: ${68:"#"}}
${69:   ${70:os_type}: ${71:"#"}}
${72:   ${73:packages}: ${74:"#"}}
${75:   ${76:password}: ${77:"#"}}
${78:   ${79:primary_dns}: ${80:"#"}}
${81:   ${82:public_ip_ports}: ${83:"#"}}
${84:   ${85:public_ip_protocol}: ${86:"#"}}
${87:   ${88:secondary_dns}: ${89:"#"}}
${90:   ${91:server_ids}: ${92:"#"}}
${93:   ${94:source_server_password}: ${95:"#"}}
${96:   ${97:state}: ${98:"#"}}
${99:   ${100:storage_type}: ${101:"#"}}
${102:   ${103:template}: ${104:"#"}}
${105:   ${106:ttl}: ${107:"#"}}
${108:   ${109:type}: ${110:"#"}}
${111:   ${112:wait}: ${113:"#"}}
${114:${115:   become: ${116:true}} 
${117:   become_method: ${118:su}} 
${119:   become_user: ${120:nobody}} 
${121:   become_flags: ${122:"-s /bin/sh"}}} 
${123:   when: ${124:variable is defined}} 
${125:   with_items: ${126:array}} 
]]></content>
	<tabTrigger>clc_server</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
