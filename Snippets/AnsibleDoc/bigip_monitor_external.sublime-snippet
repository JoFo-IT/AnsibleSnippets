<snippet>
<content><![CDATA[
${1:# arguments: Specifies any command-line arguments that the 
# description: The description of the monitor. 
# external_program: Specifies the name of the file for the monitor 
# interval: The interval specifying how frequently the 
# ip: IP address part of the IP/port definition. If 
# name: (required) Specifies the name of the monitor. 
# parent: The parent template of this monitor template. 
# partition: Device partition to manage resources on. 
# password: (required) The password for the user account 
# port: Port address part of the IP/port definition. If 
# provider: A dict object containing connection details. 
# server: (required) The BIG-IP host. You may omit this 
# server_port: The BIG-IP server port. You may omit this option 
# state: When `present', ensures that the monitor exists. 
# timeout: The number of seconds in which the node or 
# user: (required) The username to connect to the BIG-IP 
# validate_certs: If `no', SSL certificates are not validated. Use 
# variables: Specifies any variables that the script 
}- name: ${2:Name for bigip_monitor_external module.}
  bigip_monitor_external:
${3:   ${4:arguments}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:external_program}: ${11:"#"}}
${12:   ${13:interval}: ${14:"#"}}
${15:   ${16:ip}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:parent}: ${23:"#"}}
${24:   ${25:partition}: ${26:"#"}}
${27:   ${28:password}: ${29:"#"}}
${30:   ${31:port}: ${32:"#"}}
${33:   ${34:provider}: ${35:"#"}}
${36:   ${37:server}: ${38:"#"}}
${39:   ${40:server_port}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:timeout}: ${47:"#"}}
${48:   ${49:user}: ${50:"#"}}
${51:   ${52:validate_certs}: ${53:"#"}}
${54:   ${55:variables}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>bigip_monitor_external</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
