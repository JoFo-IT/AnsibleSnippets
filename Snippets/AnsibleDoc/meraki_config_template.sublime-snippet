<snippet>
<content><![CDATA[
${1:# auth_key: (required) Authentication key provided by the 
# auto_bind: Optional boolean indicating whether the 
# config_template: Name of the configuration template within an 
# host: Hostname for Meraki dashboard. Can be used to 
# internal_error_retry_time: Number of seconds to retry if server returns an 
# net_id: ID of the network to bind or unbind 
# net_name: Name of the network to bind or unbind 
# org_id: ID of organization associated to a configuration 
# org_name: Name of organization containing the 
# output_format: Instructs module whether response keys should be 
# output_level: Set amount of debug output during module 
# rate_limit_retry_time: Number of seconds to retry if rate limiter is 
# state: Specifies whether configuration template 
# timeout: Time to timeout for HTTP requests. 
# use_https: If `no', it will use HTTP. Otherwise it will use 
# use_proxy: If `no', it will not use a proxy, even if one is 
# validate_certs: Whether to validate HTTP certificates. 
}- name: ${2:Name for meraki_config_template module.}
  meraki_config_template:
${3:   ${4:auth_key}: ${5:"#"}}
${6:   ${7:auto_bind}: ${8:"#"}}
${9:   ${10:config_template}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:internal_error_retry_time}: ${17:"#"}}
${18:   ${19:net_id}: ${20:"#"}}
${21:   ${22:net_name}: ${23:"#"}}
${24:   ${25:org_id}: ${26:"#"}}
${27:   ${28:org_name}: ${29:"#"}}
${30:   ${31:output_format}: ${32:"#"}}
${33:   ${34:output_level}: ${35:"#"}}
${36:   ${37:rate_limit_retry_time}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:timeout}: ${44:"#"}}
${45:   ${46:use_https}: ${47:"#"}}
${48:   ${49:use_proxy}: ${50:"#"}}
${51:   ${52:validate_certs}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>meraki_config_template</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
