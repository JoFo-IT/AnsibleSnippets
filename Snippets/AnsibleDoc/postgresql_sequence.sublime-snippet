<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# cache: Cache specifies how many sequence numbers are to 
# cascade: Automatically drop objects that depend on the 
# cycle: The cycle option allows the sequence to wrap 
# data_type: Specifies the data type of the sequence. Valid 
# db: Name of database to connect to and run queries 
# increment: Increment specifies which value is added to the 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# maxvalue: Maxvalue determines the maximum value for the 
# minvalue: Minvalue determines the minimum value a sequence 
# newschema: The new schema for the `sequence'. Will be used 
# owner: Set the owner for the `sequence'. 
# port: Database port to connect to. 
# rename_to: The new name for the `sequence'. Works only for 
# schema: The schema of the `sequence'. This is be used to 
# sequence: (required) The name of the sequence. 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
# start: Start allows the sequence to begin anywhere. The 
# state: The sequence state. If `state=absent' other 
}- name: ${2:Name for postgresql_sequence module.}
  postgresql_sequence:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:cache}: ${8:"#"}}
${9:   ${10:cascade}: ${11:"#"}}
${12:   ${13:cycle}: ${14:"#"}}
${15:   ${16:data_type}: ${17:"#"}}
${18:   ${19:db}: ${20:"#"}}
${21:   ${22:increment}: ${23:"#"}}
${24:   ${25:login_host}: ${26:"#"}}
${27:   ${28:login_password}: ${29:"#"}}
${30:   ${31:login_unix_socket}: ${32:"#"}}
${33:   ${34:login_user}: ${35:"#"}}
${36:   ${37:maxvalue}: ${38:"#"}}
${39:   ${40:minvalue}: ${41:"#"}}
${42:   ${43:newschema}: ${44:"#"}}
${45:   ${46:owner}: ${47:"#"}}
${48:   ${49:port}: ${50:"#"}}
${51:   ${52:rename_to}: ${53:"#"}}
${54:   ${55:schema}: ${56:"#"}}
${57:   ${58:sequence}: ${59:"#"}}
${60:   ${61:session_role}: ${62:"#"}}
${63:   ${64:ssl_mode}: ${65:"#"}}
${66:   ${67:start}: ${68:"#"}}
${69:   ${70:state}: ${71:"#"}}
${72:${73:   become: ${74:true}} 
${75:   become_method: ${76:su}} 
${77:   become_user: ${78:nobody}} 
${79:   become_flags: ${80:"-s /bin/sh"}}} 
${81:   when: ${82:variable is defined}} 
${83:   with_items: ${84:array}} 
]]></content>
	<tabTrigger>postgresql_sequence</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
