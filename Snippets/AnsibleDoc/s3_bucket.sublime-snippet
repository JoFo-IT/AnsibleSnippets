<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# ceph: Enable API compatibility with Ceph. It takes 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# encryption: Describes the default server-side encryption to 
# encryption_key_id: KMS master key ID to use for the default 
# force: When trying to delete a bucket, delete all keys 
# name: (required) Name of the s3 bucket 
# policy: The JSON policy as a string. 
# profile: Uses a boto profile. Only works with boto >= 
# purge_tags: whether to remove tags that aren't present in 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# requester_pays: With Requester Pays buckets, the requester 
# s3_url: S3 URL endpoint for usage with DigitalOcean, 
# security_token: AWS STS security token. If not set then the 
# state: Create or remove the s3 bucket 
# tags: tags dict to apply to bucket 
# validate_certs: When set to "no", SSL certificates will not be 
# versioning: Whether versioning is enabled or disabled (note 
}- name: ${2:Name for s3_bucket module.}
  s3_bucket:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:ceph}: ${11:"#"}}
${12:   ${13:debug_botocore_endpoint_logs}: ${14:"#"}}
${15:   ${16:ec2_url}: ${17:"#"}}
${18:   ${19:encryption}: ${20:"#"}}
${21:   ${22:encryption_key_id}: ${23:"#"}}
${24:   ${25:force}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:policy}: ${32:"#"}}
${33:   ${34:profile}: ${35:"#"}}
${36:   ${37:purge_tags}: ${38:"#"}}
${39:   ${40:region}: ${41:"#"}}
${42:   ${43:}: ${44:"#"}}
${45:   ${46:requester_pays}: ${47:"#"}}
${48:   ${49:s3_url}: ${50:"#"}}
${51:   ${52:security_token}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:tags}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:   ${64:versioning}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>s3_bucket</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
