<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#force = When trying to delete a bucket, delete all keys in the bucket first (an s3 bucket must be empty for a successful
#name = Name of the s3 bucket
#policy = The JSON policy as a string.
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#requester_pays = With Requester Pays buckets, the requester instead of the bucket owner pays the cost of the request and the data
#s3_url = S3 URL endpoint for usage with Eucalypus, fakes3, etc.  Otherwise assumes AWS
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#state = Create or remove the s3 bucket
#tags = tags dict to apply to bucket
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#versioning = Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be suspended)
}- name: ${2:Name for s3_bucket module.}
${3:  become: ${4:yes}}
  s3_bucket: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:ec2_url=${10: } }${11:force=${12: } }${13:name=${14: } }${15:policy=${16: } }${17:profile=${18: } }${19:region=${20: } }${21:http=${22: } }${23:requester_pays=${24: } }${25:s3_url=${26: } }${27:security_token=${28: } }${29:state=${30: } }${31:tags=${32: } }${33:validate_certs=${34: } }${35:versioning=${36: } }
${37:  when: ${38: variable is defined}}
${39:  with_items: ${40: array}}
]]></content>
	<tabTrigger>s3_bucket</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
