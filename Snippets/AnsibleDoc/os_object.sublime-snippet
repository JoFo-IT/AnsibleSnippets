<snippet>
<content><![CDATA[
${1:#api_timeout = How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be
#auth = Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password'
#auth_type = Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the
#availability_zone = Name of the availability zone.
#cacert = A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
#cert = A path to a client certificate to use as part of the SSL transaction
#cloud = Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is not needed
#container = The name of the container in which to create the object
#container_access = desired container access level.
#endpoint_type = Endpoint URL type to fetch from the service catalog.
#file = Path to local file to be uploaded.
#key = A path to a client key to use as part of the SSL transaction
#name = Name to be give to the object. If omitted, operations will be on the entire container
#region_name = Name of the region.
#state = Should the resource be present or absent.
#timeout = How long should ansible wait for the requested resource.
#validate_certs = Whether or not SSL API requests should be verified.
#wait = Should ansible wait until the requested resource is complete.
}- name: ${2:Name for os_object module.}
${3:  become: ${4:yes}}
  os_object: ${5:api_timeout=${6: } }${7:auth=${8: } }${9:auth_type=${10: } }${11:availability_zone=${12: } }${13:cacert=${14: } }${15:cert=${16: } }${17:cloud=${18: } }${19:container=${20: } }${21:container_access=${22: } }${23:endpoint_type=${24: } }${25:file=${26: } }${27:key=${28: } }${29:name=${30: } }${31:region_name=${32: } }${33:state=${34: } }${35:timeout=${36: } }${37:validate_certs=${38: } }${39:wait=${40: } }
${41:  when: ${42: variable is defined}}
${43:  with_items: ${44: array}}
]]></content>
	<tabTrigger>os_object</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
