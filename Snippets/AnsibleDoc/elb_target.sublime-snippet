<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# deregister_unused: The default behaviour for targets that are 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# profile: Uses a boto profile. Only works with boto >= 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# security_token: AWS STS security token. If not set then the 
# state: (required) Register or deregister the target. 
# target_az: An Availability Zone or all. This determines 
# target_group_arn: The Amazon Resource Name (ARN) of the target 
# target_group_name: The name of the target group. Mutually exclusive 
# target_id: (required) The ID of the target. 
# target_port: The port on which the target is listening. You 
# target_status: Blocks and waits for the target status to equal 
# : target-health- 
# target_status_timeout: Maximum time in seconds to wait for 
# validate_certs: When set to "no", SSL certificates will not be 
}- name: ${2:Name for elb_target module.}
  elb_target:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:debug_botocore_endpoint_logs}: ${11:"#"}}
${12:   ${13:deregister_unused}: ${14:"#"}}
${15:   ${16:ec2_url}: ${17:"#"}}
${18:   ${19:profile}: ${20:"#"}}
${21:   ${22:region}: ${23:"#"}}
${24:   ${25:}: ${26:"#"}}
${27:   ${28:security_token}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:target_az}: ${35:"#"}}
${36:   ${37:target_group_arn}: ${38:"#"}}
${39:   ${40:target_group_name}: ${41:"#"}}
${42:   ${43:target_id}: ${44:"#"}}
${45:   ${46:target_port}: ${47:"#"}}
${48:   ${49:target_status}: ${50:"#"}}
${51:   ${52:}: ${53:"#"}}
${54:   ${55:target_status_timeout}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>elb_target</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
