<snippet>
<content><![CDATA[
${1:# build_flags: Allow adding build flags for gem compilation 
# env_shebang: Rewrite the shebang line on installed scripts to 
# executable: Override the path to the gem executable 
# force: Force gem to install, bypassing dependency 
# gem_source: The path to a local gem used as installation 
# include_dependencies: Whether to include dependencies or not. 
# include_doc: Install with or without docs. 
# install_dir: Install the gems into a specific directory. 
# name: (required) The name of the gem to be managed. 
# pre_release: Allow installation of pre-release versions of 
# repository: The repository from which the gem will be 
# state: The desired state of the gem. `latest' ensures 
# user_install: Install gem in user's local gems cache or for 
# version: Version of the gem to be installed/removed. 
}- name: ${2:Name for gem module.}
  gem:
${3:   ${4:build_flags}: ${5:"#"}}
${6:   ${7:env_shebang}: ${8:"#"}}
${9:   ${10:executable}: ${11:"#"}}
${12:   ${13:force}: ${14:"#"}}
${15:   ${16:gem_source}: ${17:"#"}}
${18:   ${19:include_dependencies}: ${20:"#"}}
${21:   ${22:include_doc}: ${23:"#"}}
${24:   ${25:install_dir}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:pre_release}: ${32:"#"}}
${33:   ${34:repository}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:user_install}: ${41:"#"}}
${42:   ${43:version}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>gem</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
