<snippet>
<content><![CDATA[
${1:# datacenter: The datacenter name to which virtual machine 
# display_number: The number of display. Valid value from 1 to 10. 
# enable_3: Enable 3D for guest operating systems on which 
# folder: Destination folder, absolute or relative path to 
# gather_video_facts: If set to True, return settings of the video 
# hostname: The hostname or IP address of the vSphere 
# memory_3: The value of 3D Memory must be power of 2 and 
# moid: Managed Object ID of the instance to manage if 
# name: Name of the virtual machine. This is a required 
# password: The password of the vSphere vCenter or ESXi 
# port: The port number of the vSphere vCenter or ESXi 
# proxy_host: Address of a proxy that will receive all HTTPS 
# proxy_port: Port of the HTTP proxy that will receive all 
# renderer_3: If set to `automatic', selects the appropriate 
# use_auto_detect: If set to True, applies common video settings to 
# username: The username of the vSphere vCenter or ESXi 
# uuid: UUID of the instance to gather facts if known, 
# validate_certs: Allows connection when SSL certificates are not 
# video_memory_mb: Valid total MB of video memory range of virtual 
}- name: ${2:Name for vmware_guest_video module.}
  vmware_guest_video:
${3:   ${4:datacenter}: ${5:"#"}}
${6:   ${7:display_number}: ${8:"#"}}
${9:   ${10:enable_3}: ${11:"#"}}
${12:   ${13:folder}: ${14:"#"}}
${15:   ${16:gather_video_facts}: ${17:"#"}}
${18:   ${19:hostname}: ${20:"#"}}
${21:   ${22:memory_3}: ${23:"#"}}
${24:   ${25:moid}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:password}: ${32:"#"}}
${33:   ${34:port}: ${35:"#"}}
${36:   ${37:proxy_host}: ${38:"#"}}
${39:   ${40:proxy_port}: ${41:"#"}}
${42:   ${43:renderer_3}: ${44:"#"}}
${45:   ${46:use_auto_detect}: ${47:"#"}}
${48:   ${49:username}: ${50:"#"}}
${51:   ${52:uuid}: ${53:"#"}}
${54:   ${55:validate_certs}: ${56:"#"}}
${57:   ${58:video_memory_mb}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>vmware_guest_video</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
