<snippet>
<content><![CDATA[
${1:# action: Perform the given action. The lock and unlock actions always return changed as the servers API does not 
# api_timeout: How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will 
# auth: Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default 
# auth_type: Name of the auth plugin to use. If the cloud uses something other than password authentication, the name 
# availability_zone: Ignored. Present for backwards compatibility 
# cacert: A path to a CA Cert bundle that can be used as part of verifying SSL API requests. 
# cert: A path to a client certificate to use as part of the SSL transaction. 
# cloud: Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is 
# endpoint_type: Endpoint URL type to fetch from the service catalog. 
# image: Image the server should be rebuilt with 
# key: A path to a client key to use as part of the SSL transaction. 
# region_name: Name of the region. 
# server: (required) Name or ID of the instance 
# timeout: The amount of time the module should wait for the instance to perform the requested action. 
# validate_certs: Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True. 
# wait: If the module should wait for the instance action to be performed. 
}- name: ${2:Name for os_server_action module.}
  os_server_action:
${3:   ${4:action}: ${5:"#"}}
${6:   ${7:api_timeout}: ${8:"#"}}
${9:   ${10:auth}: ${11:"#"}}
${12:   ${13:auth_type}: ${14:"#"}}
${15:   ${16:availability_zone}: ${17:"#"}}
${18:   ${19:cacert}: ${20:"#"}}
${21:   ${22:cert}: ${23:"#"}}
${24:   ${25:cloud}: ${26:"#"}}
${27:   ${28:endpoint_type}: ${29:"#"}}
${30:   ${31:image}: ${32:"#"}}
${33:   ${34:key}: ${35:"#"}}
${36:   ${37:region_name}: ${38:"#"}}
${39:   ${40:server}: ${41:"#"}}
${42:   ${43:timeout}: ${44:"#"}}
${45:   ${46:validate_certs}: ${47:"#"}}
${48:   ${49:wait}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>os_server_action</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
