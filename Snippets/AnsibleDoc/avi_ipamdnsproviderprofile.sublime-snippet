<snippet>
<content><![CDATA[
${1:# allocate_ip_in_vrf: If this flag is set, only allocate ip from 
# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# aws_profile: Provider details if type is aws. 
# azure_profile: Provider details if type is microsoft azure. 
# controller: IP address or hostname of the controller. The 
# custom_profile: Provider details if type is custom. Field 
# gcp_profile: Provider details if type is google cloud. 
# infoblox_profile: Provider details if type is infoblox. 
# internal_profile: Provider details if type is avi. 
# name: (required) Name for the ipam/dns provider 
# openstack_profile: Provider details if type is openstack. 
# password: Password of Avi user in Avi controller. The 
# proxy_configuration: Field introduced in 17.1.1. 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# type: (required) Provider type for the ipam/dns 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Uuid of the ipam/dns provider profile. 
}- name: ${2:Name for avi_ipamdnsproviderprofile module.}
  avi_ipamdnsproviderprofile:
${3:   ${4:allocate_ip_in_vrf}: ${5:"#"}}
${6:   ${7:api_context}: ${8:"#"}}
${9:   ${10:api_version}: ${11:"#"}}
${12:   ${13:avi_api_patch_op}: ${14:"#"}}
${15:   ${16:avi_api_update_method}: ${17:"#"}}
${18:   ${19:avi_credentials}: ${20:"#"}}
${21:   ${22:aws_profile}: ${23:"#"}}
${24:   ${25:azure_profile}: ${26:"#"}}
${27:   ${28:controller}: ${29:"#"}}
${30:   ${31:custom_profile}: ${32:"#"}}
${33:   ${34:gcp_profile}: ${35:"#"}}
${36:   ${37:infoblox_profile}: ${38:"#"}}
${39:   ${40:internal_profile}: ${41:"#"}}
${42:   ${43:name}: ${44:"#"}}
${45:   ${46:openstack_profile}: ${47:"#"}}
${48:   ${49:password}: ${50:"#"}}
${51:   ${52:proxy_configuration}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:tenant}: ${59:"#"}}
${60:   ${61:tenant_ref}: ${62:"#"}}
${63:   ${64:tenant_uuid}: ${65:"#"}}
${66:   ${67:type}: ${68:"#"}}
${69:   ${70:url}: ${71:"#"}}
${72:   ${73:username}: ${74:"#"}}
${75:   ${76:uuid}: ${77:"#"}}
${78:${79:   become: ${80:true}} 
${81:   become_method: ${82:su}} 
${83:   become_user: ${84:nobody}} 
${85:   become_flags: ${86:"-s /bin/sh"}}} 
${87:   when: ${88:variable is defined}} 
${89:   with_items: ${90:array}} 
]]></content>
	<tabTrigger>avi_ipamdnsproviderprofile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
