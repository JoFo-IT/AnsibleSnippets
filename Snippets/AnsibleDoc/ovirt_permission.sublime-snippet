<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to 
# authz_name: (required) Authorization provider of the 
# fetch_nested: If `True' the module will fetch additional data 
# group_name: Name of the group to manage. Note that if group 
# namespace: Namespace of the authorization provider, where 
# nested_attributes: Specifies list of the attributes which should be 
# object_id: ID of the object where the permissions should be 
# object_name: Name of the object where the permissions should 
# object_type: The object where the permissions should be 
# poll_interval: Number of the seconds the module waits until 
# quota_name: Name of the quota to assign permission. Works 
# role: Name of the role to be assigned to user/group on 
# state: Should the permission be present/absent. 
# timeout: The amount of time in seconds the module should 
# user_name: Username of the user to manage. In most LDAPs 
# wait: `True' if the module should wait for the entity 
}- name: ${2:Name for ovirt_permission module.}
  ovirt_permission:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:authz_name}: ${8:"#"}}
${9:   ${10:fetch_nested}: ${11:"#"}}
${12:   ${13:group_name}: ${14:"#"}}
${15:   ${16:namespace}: ${17:"#"}}
${18:   ${19:nested_attributes}: ${20:"#"}}
${21:   ${22:object_id}: ${23:"#"}}
${24:   ${25:object_name}: ${26:"#"}}
${27:   ${28:object_type}: ${29:"#"}}
${30:   ${31:poll_interval}: ${32:"#"}}
${33:   ${34:quota_name}: ${35:"#"}}
${36:   ${37:role}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:timeout}: ${44:"#"}}
${45:   ${46:user_name}: ${47:"#"}}
${48:   ${49:wait}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>ovirt_permission</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
