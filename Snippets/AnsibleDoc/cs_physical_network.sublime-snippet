<snippet>
<content><![CDATA[
${1:# api_http_method: HTTP method used to query the API endpoint. If 
# api_key: API key of the CloudStack API. If not given, the 
# api_region: Name of the ini section in the `cloustack.ini' 
# api_secret: Secret key of the CloudStack API. If not set, 
# api_timeout: HTTP timeout in seconds. If not given, the 
# api_url: URL of the CloudStack API e.g. 
# broadcast_domain_range: broadcast domain range for the physical 
# domain: Domain the network is owned by. 
# isolation_method: Isolation method for the physical network. 
# name: (required) Name of the physical network. 
# network_speed: The speed for the physical network. 
# nsps_disabled: List of Network Service Providers to disable. 
# nsps_enabled: List of Network Service Providers to enable. 
# poll_async: Poll async jobs until job has finished. 
# state: State of the physical network. 
# tags: A tag to identify this network. Physical 
# vlan: The VLAN/VNI Ranges of the physical network. 
# zone: Name of the zone in which the network belongs. 
}- name: ${2:Name for cs_physical_network module.}
  cs_physical_network:
${3:   ${4:api_http_method}: ${5:"#"}}
${6:   ${7:api_key}: ${8:"#"}}
${9:   ${10:api_region}: ${11:"#"}}
${12:   ${13:api_secret}: ${14:"#"}}
${15:   ${16:api_timeout}: ${17:"#"}}
${18:   ${19:api_url}: ${20:"#"}}
${21:   ${22:broadcast_domain_range}: ${23:"#"}}
${24:   ${25:domain}: ${26:"#"}}
${27:   ${28:isolation_method}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:network_speed}: ${35:"#"}}
${36:   ${37:nsps_disabled}: ${38:"#"}}
${39:   ${40:nsps_enabled}: ${41:"#"}}
${42:   ${43:poll_async}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:tags}: ${50:"#"}}
${51:   ${52:vlan}: ${53:"#"}}
${54:   ${55:zone}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>cs_physical_network</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
