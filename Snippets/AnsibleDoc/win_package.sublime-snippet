<snippet>
<content><![CDATA[
${1:# arguments: Any arguments the installer needs to either 
# creates_path: Will check the existance of the path specified 
# creates_service: Will check the existing of the service specified 
# creates_version: Will check the file version property of the file 
# expected_return_code: One or more return codes from the package 
# password: The password for `user_name', must be set when 
# path: Location of the package to be installed or 
# product_id: The product id of the installed packaged. This 
# state: Whether to install or uninstall the package. The 
# username: Username of an account with access to the 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for win_package module.}
  win_package:
${3:   ${4:arguments}: ${5:"#"}}
${6:   ${7:creates_path}: ${8:"#"}}
${9:   ${10:creates_service}: ${11:"#"}}
${12:   ${13:creates_version}: ${14:"#"}}
${15:   ${16:expected_return_code}: ${17:"#"}}
${18:   ${19:password}: ${20:"#"}}
${21:   ${22:path}: ${23:"#"}}
${24:   ${25:product_id}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:   ${31:username}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>win_package</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
