<snippet>
<content><![CDATA[
${1:# arguments: Any arguments the installer needs to either install or uninstall the package. If the package is an MSI 
# creates_path: Will check the existance of the path specified and use the result to determine whether the package is 
# creates_service: Will check the existing of the service specified and use the result to determine whether the package is 
# creates_version: Will check the file version property of the file at `creates_path' and use the result to determine 
# expected_return_code: One or more return codes from the package installation that indicates success. Before Ansible 2.4 this 
# name: Name of the package, if name isn't specified the path will be used for log messages. As of Ansible 2.4 
# password: The password for `user_name', must be set when `user_name' is. 
# path: Location of the package to be installed or uninstalled. This package can either be on the local file 
# product_id: The product id of the installed packaged. This is used for checking whether the product is already 
# state: Whether to install or uninstall the package. The module uses `product_id' and whether it exists at the 
# username: Username of an account with access to the package if it is located on a file share. This is only needed 
# validate_certs: If `no', SSL certificates will not be validated. This should only be used on personally controlled sites 
}- name: ${2:Name for win_package module.}
  win_package:
${3:   ${4:arguments}: ${5:"#"}}
${6:   ${7:creates_path}: ${8:"#"}}
${9:   ${10:creates_service}: ${11:"#"}}
${12:   ${13:creates_version}: ${14:"#"}}
${15:   ${16:expected_return_code}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:password}: ${23:"#"}}
${24:   ${25:path}: ${26:"#"}}
${27:   ${28:product_id}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:username}: ${35:"#"}}
${36:   ${37:validate_certs}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>win_package</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
