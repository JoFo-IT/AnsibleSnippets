<snippet>
<content><![CDATA[
${1:# add_children: Add additional child-element(s) to a selected 
# attribute: The attribute to select when using parameter 
# backup: Create a backup file including the timestamp 
# content: Search for a given `xpath' and get content. This 
# count: Search for a given `xpath' and provide the count 
# input_type: Type of input for `add_children' and 
# insertafter: Add additional child-element(s) after the last 
# insertbefore: Add additional child-element(s) before the first 
# namespaces: The namespace `prefix:uri' mapping for the XPath 
# path: (required) Path to the file to operate on. This 
# pretty_print: Pretty print XML output. 
# print_match: Search for a given `xpath' and print out any 
# set_children: Set the child-element(s) of a selected element 
# state: Set or remove an xpath selection (node(s), 
# strip_cdata_tags: Remove CDATA tags surrounding text values. Note 
# value: Desired state of the selected attribute. Either 
# xmlstring: (required) A string containing XML on which to 
# xpath: A valid XPath expression describing the item(s) 
}- name: ${2:Name for xml module.}
  xml:
${3:   ${4:add_children}: ${5:"#"}}
${6:   ${7:attribute}: ${8:"#"}}
${9:   ${10:backup}: ${11:"#"}}
${12:   ${13:content}: ${14:"#"}}
${15:   ${16:count}: ${17:"#"}}
${18:   ${19:input_type}: ${20:"#"}}
${21:   ${22:insertafter}: ${23:"#"}}
${24:   ${25:insertbefore}: ${26:"#"}}
${27:   ${28:namespaces}: ${29:"#"}}
${30:   ${31:path}: ${32:"#"}}
${33:   ${34:pretty_print}: ${35:"#"}}
${36:   ${37:print_match}: ${38:"#"}}
${39:   ${40:set_children}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:strip_cdata_tags}: ${47:"#"}}
${48:   ${49:value}: ${50:"#"}}
${51:   ${52:xmlstring}: ${53:"#"}}
${54:   ${55:xpath}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>xml</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
