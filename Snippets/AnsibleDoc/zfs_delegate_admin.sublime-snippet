<snippet>
<content><![CDATA[
${1:# descendents: Apply permissions to `name''s descendents (`zfs 
# everyone: Apply permissions to everyone. 
# groups: List of groups to whom permission(s) should be 
# local: Apply permissions to `name' locally (`zfs allow 
# name: (required) File system or volume name e.g. 
# permissions: The list of permission(s) to delegate (required 
# recursive: Unallow permissions recursively (ignored when 
# state: (required) Whether to allow (`present'), or 
# users: List of users to whom permission(s) should be 
}- name: ${2:Name for zfs_delegate_admin module.}
  zfs_delegate_admin:
${3:   ${4:descendents}: ${5:"#"}}
${6:   ${7:everyone}: ${8:"#"}}
${9:   ${10:groups}: ${11:"#"}}
${12:   ${13:local}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:permissions}: ${20:"#"}}
${21:   ${22:recursive}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:users}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>zfs_delegate_admin</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
