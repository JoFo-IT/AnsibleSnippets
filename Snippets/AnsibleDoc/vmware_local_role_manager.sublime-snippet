<snippet>
<content><![CDATA[
${1:# action: This parameter is only valid while updating an 
# force_remove: If set to `False' then prevents the role from 
# hostname: The hostname or IP address of the vSphere 
# local_privilege_ids: The list of privileges that role needs to have. 
# local_role_name: (required) The local role name to be managed. 
# password: The password of the vSphere vCenter or ESXi 
# port: The port number of the vSphere vCenter or ESXi 
# state: Indicate desired state of the role. If the role 
# username: The username of the vSphere vCenter or ESXi 
# validate_certs: Allows connection when SSL certificates are not 
}- name: ${2:Name for vmware_local_role_manager module.}
  vmware_local_role_manager:
${3:   ${4:action}: ${5:"#"}}
${6:   ${7:force_remove}: ${8:"#"}}
${9:   ${10:hostname}: ${11:"#"}}
${12:   ${13:local_privilege_ids}: ${14:"#"}}
${15:   ${16:local_role_name}: ${17:"#"}}
${18:   ${19:password}: ${20:"#"}}
${21:   ${22:port}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:username}: ${29:"#"}}
${30:   ${31:validate_certs}: ${32:"#"}}
${33:${34:   become: ${35:true}} 
${36:   become_method: ${37:su}} 
${38:   become_user: ${39:nobody}} 
${40:   become_flags: ${41:"-s /bin/sh"}}} 
${42:   when: ${43:variable is defined}} 
${44:   with_items: ${45:array}} 
]]></content>
	<tabTrigger>vmware_local_role_manager</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
