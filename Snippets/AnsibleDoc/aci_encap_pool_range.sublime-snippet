<snippet>
<content><![CDATA[
${1:# allocation_mode: The method used for allocating encaps to 
# certificate_name: The X.509 certificate name attached to the APIC 
# description: Description for the pool range. 
# host: (required) IP Address or hostname of APIC 
# output_level: Influence the output of this ACI module. 
# password: (required) The password to use for 
# pool: The name of the pool that the range should be 
# pool_allocation_mode: The method used for allocating encaps to 
# pool_type: (required) The encap type of `pool'. 
# port: Port number to be used for REST connection. The 
# private_key: (required) Either a PEM-formatted private key 
# range_end: The end of encap range. 
# range_name: The name to give to the encap range. 
# range_start: The start of the encap range. 
# state: Use `present' or `absent' for adding or 
# timeout: The socket level timeout in seconds. 
# use_proxy: If `no', it will not use a proxy, even if one is 
# use_ssl: If `no', an HTTP connection will be used instead 
# username: The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for aci_encap_pool_range module.}
  aci_encap_pool_range:
${3:   ${4:allocation_mode}: ${5:"#"}}
${6:   ${7:certificate_name}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:output_level}: ${17:"#"}}
${18:   ${19:password}: ${20:"#"}}
${21:   ${22:pool}: ${23:"#"}}
${24:   ${25:pool_allocation_mode}: ${26:"#"}}
${27:   ${28:pool_type}: ${29:"#"}}
${30:   ${31:port}: ${32:"#"}}
${33:   ${34:private_key}: ${35:"#"}}
${36:   ${37:range_end}: ${38:"#"}}
${39:   ${40:range_name}: ${41:"#"}}
${42:   ${43:range_start}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:timeout}: ${50:"#"}}
${51:   ${52:use_proxy}: ${53:"#"}}
${54:   ${55:use_ssl}: ${56:"#"}}
${57:   ${58:username}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>aci_encap_pool_range</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
