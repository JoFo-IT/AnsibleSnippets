<snippet>
<content><![CDATA[
${1:# force: If `yes' will upload the file every time and 
# include_chassis_level_config: During restore of the UCS file, include chassis 
# no_license: Performs a full restore of the UCS file and all 
# no_platform_check: Bypasses the platform check and allows a UCS 
# passphrase: Specifies the passphrase that is necessary to 
# provider: A dict object containing connection details. 
# reset_trust: When specified, the device and trust domain 
# state: When `installed', ensures that the UCS is 
# ucs: The path to the UCS file to install. The 
}- name: ${2:Name for bigip_ucs module.}
  bigip_ucs:
${3:   ${4:force}: ${5:"#"}}
${6:   ${7:include_chassis_level_config}: ${8:"#"}}
${9:   ${10:no_license}: ${11:"#"}}
${12:   ${13:no_platform_check}: ${14:"#"}}
${15:   ${16:passphrase}: ${17:"#"}}
${18:   ${19:provider}: ${20:"#"}}
${21:   ${22:reset_trust}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:ucs}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>bigip_ucs</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
