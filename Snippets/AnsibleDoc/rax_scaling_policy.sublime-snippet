<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# at: The UTC time when this policy will be executed. 
# auth_endpoint: The URI of the authentication service. 
# change: The change, either as a number of servers or as 
# cooldown: The period of time, in seconds, that must pass 
# credentials: File to find the Rackspace credentials in. 
# cron: The time when the policy will be executed, as a 
# desired_capacity: The desired server capacity of the scaling the 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# identity_type: Authentication mechanism to use, such as 
# is_percent: Whether the value in `change' is a percent value 
# name: (required) Name to give the policy 
# policy_type: (required) The type of policy that will be 
# region: Region to create an instance in. 
# scaling_group: (required) Name of the scaling group that this 
# state: Indicate desired state of the resource 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# username: Rackspace username, overrides `credentials'. 
# validate_certs: Whether or not to require SSL validation of API 
}- name: ${2:Name for rax_scaling_policy module.}
  rax_scaling_policy:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:at}: ${8:"#"}}
${9:   ${10:auth_endpoint}: ${11:"#"}}
${12:   ${13:change}: ${14:"#"}}
${15:   ${16:cooldown}: ${17:"#"}}
${18:   ${19:credentials}: ${20:"#"}}
${21:   ${22:cron}: ${23:"#"}}
${24:   ${25:desired_capacity}: ${26:"#"}}
${27:   ${28:env}: ${29:"#"}}
${30:   ${31:md}: ${32:"#"}}
${33:   ${34:identity_type}: ${35:"#"}}
${36:   ${37:is_percent}: ${38:"#"}}
${39:   ${40:name}: ${41:"#"}}
${42:   ${43:policy_type}: ${44:"#"}}
${45:   ${46:region}: ${47:"#"}}
${48:   ${49:scaling_group}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:tenant_id}: ${56:"#"}}
${57:   ${58:tenant_name}: ${59:"#"}}
${60:   ${61:username}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>rax_scaling_policy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
