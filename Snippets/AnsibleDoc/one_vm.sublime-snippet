<snippet>
<content><![CDATA[
${1:# api_password: Password of the user to login into OpenNebula 
# api_url: URL of the OpenNebula RPC server. It is 
# api_username: Name of the user to login into the OpenNebula 
# attributes: A dictionary of key/value attributes to add to 
# deployed: ' 
# : ' 
# count: Number of instances to launch 
# count_attributes: A dictionary of key/value attributes that can 
# count_labels: A list of labels that can only be used with 
# cpu: Percentage of CPU divided by 100 required for 
# disk_saveas: Creates an image from a VM disk. It is a 
# disk_size: The size of the disk created for new instances 
# exact_count: Indicates how many instances that match 
# group_id: ID of the group which will be set as the group 
# hard: Reboot, power-off or terminate instances `hard' 
# instance_ids: A list of instance ids used for states':' 
# labels: A list of labels to associate with new 
# memory: The size of the memory for new instances (in MB, 
# mode: Set permission mode of the instance in octet 
# networks: A list of dictionaries with network parameters. 
# owner_id: ID of the user which will be set as the owner of 
# state: `present' - create instances from a template 
# template_id: ID of a VM template to use to create a new 
# template_name: Name of VM template to use to create a new 
# vcpu: Number of CPUs (cores) new VM will have. 
# wait: Wait for the instance to reach its desired state 
# wait_timeout: How long before wait gives up, in seconds 
}- name: ${2:Name for one_vm module.}
  one_vm:
${3:   ${4:api_password}: ${5:"#"}}
${6:   ${7:api_url}: ${8:"#"}}
${9:   ${10:api_username}: ${11:"#"}}
${12:   ${13:attributes}: ${14:"#"}}
${15:   ${16:deployed}: ${17:"#"}}
${18:   ${19:}: ${20:"#"}}
${21:   ${22:count}: ${23:"#"}}
${24:   ${25:count_attributes}: ${26:"#"}}
${27:   ${28:count_labels}: ${29:"#"}}
${30:   ${31:cpu}: ${32:"#"}}
${33:   ${34:disk_saveas}: ${35:"#"}}
${36:   ${37:disk_size}: ${38:"#"}}
${39:   ${40:exact_count}: ${41:"#"}}
${42:   ${43:group_id}: ${44:"#"}}
${45:   ${46:hard}: ${47:"#"}}
${48:   ${49:instance_ids}: ${50:"#"}}
${51:   ${52:labels}: ${53:"#"}}
${54:   ${55:memory}: ${56:"#"}}
${57:   ${58:mode}: ${59:"#"}}
${60:   ${61:networks}: ${62:"#"}}
${63:   ${64:owner_id}: ${65:"#"}}
${66:   ${67:state}: ${68:"#"}}
${69:   ${70:template_id}: ${71:"#"}}
${72:   ${73:template_name}: ${74:"#"}}
${75:   ${76:vcpu}: ${77:"#"}}
${78:   ${79:wait}: ${80:"#"}}
${81:   ${82:wait_timeout}: ${83:"#"}}
${84:${85:   become: ${86:true}} 
${87:   become_method: ${88:su}} 
${89:   become_user: ${90:nobody}} 
${91:   become_flags: ${92:"-s /bin/sh"}}} 
${93:   when: ${94:variable is defined}} 
${95:   with_items: ${96:array}} 
]]></content>
	<tabTrigger>one_vm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
