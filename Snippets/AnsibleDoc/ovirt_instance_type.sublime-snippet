<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to 
# ballooning_enabled: If `true', use memory ballooning. Memory balloon 
# boot_devices: List of boot devices which should be used to 
# cpu_cores: Number of virtual CPUs cores of the Instance 
# cpu_mode: CPU mode of the instance type. It can be some of 
# cpu_pinning: CPU Pinning topology to map instance type CPU to 
# cpu_sockets: Number of virtual CPUs sockets of the Instance 
# cpu_threads: Number of virtual CPUs sockets of the Instance 
# description: Description of the instance type. 
# fetch_nested: If `True' the module will fetch additional data 
# graphical_console: Assign graphical console to the instance type. 
# high_availability: If `yes' Instance Type will be set as highly 
# high_availability_priority: Indicates the priority of the instance type 
# host: Specify host where Instance Type should be 
# id: ID of the Instance Type to manage. 
# io_threads: Number of IO threads used by instance type. `0' 
# memory: Amount of memory of the Instance Type. Prefix 
# memory_guaranteed: Amount of minimal guaranteed memory of the 
# memory_max: Upper bound of instance type memory up to which 
# name: Name of the Instance Type to manage. If instance 
# nested_attributes: Specifies list of the attributes which should be 
# nics: List of NICs, which should be attached to 
# operating_system: Operating system of the Instance Type. Default 
# placement_policy: The configuration of the instance type's 
# poll_interval: Number of the seconds the module waits until 
# rng_bytes: Number of bytes allowed to consume per period. 
# rng_device: Random number generator (RNG). You can choose of 
# rng_period: Duration of one period in milliseconds. 
# serial_console: `True' enable VirtIO serial console, `False' to 
# smartcard_enabled: If `true', use smart card authentication. 
# soundcard_enabled: If `true', the sound card is added to the 
# state: Should the Instance Type be present/absent. 
# timeout: The amount of time in seconds the module should 
# usb_support: `True' enable USB support, `False' to disable 
# virtio_scsi: If `true', virtio scsi will be enabled. 
# wait: `yes' if the module should wait for the entity 
# watchdog: Assign watchdog device for the instance type. 
}- name: ${2:Name for ovirt_instance_type module.}
  ovirt_instance_type:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:ballooning_enabled}: ${8:"#"}}
${9:   ${10:boot_devices}: ${11:"#"}}
${12:   ${13:cpu_cores}: ${14:"#"}}
${15:   ${16:cpu_mode}: ${17:"#"}}
${18:   ${19:cpu_pinning}: ${20:"#"}}
${21:   ${22:cpu_sockets}: ${23:"#"}}
${24:   ${25:cpu_threads}: ${26:"#"}}
${27:   ${28:description}: ${29:"#"}}
${30:   ${31:fetch_nested}: ${32:"#"}}
${33:   ${34:graphical_console}: ${35:"#"}}
${36:   ${37:high_availability}: ${38:"#"}}
${39:   ${40:high_availability_priority}: ${41:"#"}}
${42:   ${43:host}: ${44:"#"}}
${45:   ${46:id}: ${47:"#"}}
${48:   ${49:io_threads}: ${50:"#"}}
${51:   ${52:memory}: ${53:"#"}}
${54:   ${55:memory_guaranteed}: ${56:"#"}}
${57:   ${58:memory_max}: ${59:"#"}}
${60:   ${61:name}: ${62:"#"}}
${63:   ${64:nested_attributes}: ${65:"#"}}
${66:   ${67:nics}: ${68:"#"}}
${69:   ${70:operating_system}: ${71:"#"}}
${72:   ${73:placement_policy}: ${74:"#"}}
${75:   ${76:poll_interval}: ${77:"#"}}
${78:   ${79:rng_bytes}: ${80:"#"}}
${81:   ${82:rng_device}: ${83:"#"}}
${84:   ${85:rng_period}: ${86:"#"}}
${87:   ${88:serial_console}: ${89:"#"}}
${90:   ${91:smartcard_enabled}: ${92:"#"}}
${93:   ${94:soundcard_enabled}: ${95:"#"}}
${96:   ${97:state}: ${98:"#"}}
${99:   ${100:timeout}: ${101:"#"}}
${102:   ${103:usb_support}: ${104:"#"}}
${105:   ${106:virtio_scsi}: ${107:"#"}}
${108:   ${109:wait}: ${110:"#"}}
${111:   ${112:watchdog}: ${113:"#"}}
${114:${115:   become: ${116:true}} 
${117:   become_method: ${118:su}} 
${119:   become_user: ${120:nobody}} 
${121:   become_flags: ${122:"-s /bin/sh"}}} 
${123:   when: ${124:variable is defined}} 
${125:   with_items: ${126:array}} 
]]></content>
	<tabTrigger>ovirt_instance_type</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
