<snippet>
<content><![CDATA[
${1:# active: A rule with `active' set to `False' will be 
# apply: Used in combination with `flagIN' and `flagOUT' 
# cache_ttl: The number of milliseconds for which to cache 
# client_addr: Match traffic from a specific source. 
# comment: Free form text field, usable for a descriptive 
# config_file: Specify a config file from which `login_user' 
# delay: Number of milliseconds to delay the execution of 
# destination_hostgroup: Route matched queries to this hostgroup. This 
# digest: Match queries with a specific digest, as 
# error_msg: Query will be blocked, and the specified 
# flag: Used in combination with `flagOUT' and `apply' 
# flag: Used in combination with `flagIN' and apply to 
# force_delete: By default we avoid deleting more than one 
# load_to_runtime: Dynamically load config to runtime memory. 
# log: Query will be logged. 
# login_host: The host used to connect to ProxySQL admin 
# login_password: The password used to authenticate to ProxySQL 
# login_port: The port used to connect to ProxySQL admin 
# login_user: The username used to authenticate to ProxySQL 
# match_digest: Regular expression that matches the query 
# match_pattern: Regular expression that matches the query text. 
# mirror_flag: Enables query mirroring. If set `mirror_flagOUT' 
# mirror_hostgroup: Enables query mirroring. If set 
# negate_match_pattern: If `negate_match_pattern' is set to `True', only 
# proxy_addr: Match incoming traffic on a specific local IP. 
# proxy_port: Match incoming traffic on a specific local port. 
# replace_pattern: This is the pattern with which to replace the 
# retries: The maximum number of times a query needs to be 
# rule_id: The unique id of the rule. Rules are processed 
# save_to_disk: Save config to sqlite db on disk to persist the 
# schemaname: Filtering criteria matching schemaname. If 
# state: When `present' - adds the rule, when `absent' - 
# timeout: The maximum timeout in milliseconds with which 
# username: Filtering criteria matching username.  If 
}- name: ${2:Name for proxysql_query_rules module.}
  proxysql_query_rules:
${3:   ${4:active}: ${5:"#"}}
${6:   ${7:apply}: ${8:"#"}}
${9:   ${10:cache_ttl}: ${11:"#"}}
${12:   ${13:client_addr}: ${14:"#"}}
${15:   ${16:comment}: ${17:"#"}}
${18:   ${19:config_file}: ${20:"#"}}
${21:   ${22:delay}: ${23:"#"}}
${24:   ${25:destination_hostgroup}: ${26:"#"}}
${27:   ${28:digest}: ${29:"#"}}
${30:   ${31:error_msg}: ${32:"#"}}
${33:   ${34:flag}: ${35:"#"}}
${36:   ${37:flag}: ${38:"#"}}
${39:   ${40:force_delete}: ${41:"#"}}
${42:   ${43:load_to_runtime}: ${44:"#"}}
${45:   ${46:log}: ${47:"#"}}
${48:   ${49:login_host}: ${50:"#"}}
${51:   ${52:login_password}: ${53:"#"}}
${54:   ${55:login_port}: ${56:"#"}}
${57:   ${58:login_user}: ${59:"#"}}
${60:   ${61:match_digest}: ${62:"#"}}
${63:   ${64:match_pattern}: ${65:"#"}}
${66:   ${67:mirror_flag}: ${68:"#"}}
${69:   ${70:mirror_hostgroup}: ${71:"#"}}
${72:   ${73:negate_match_pattern}: ${74:"#"}}
${75:   ${76:proxy_addr}: ${77:"#"}}
${78:   ${79:proxy_port}: ${80:"#"}}
${81:   ${82:replace_pattern}: ${83:"#"}}
${84:   ${85:retries}: ${86:"#"}}
${87:   ${88:rule_id}: ${89:"#"}}
${90:   ${91:save_to_disk}: ${92:"#"}}
${93:   ${94:schemaname}: ${95:"#"}}
${96:   ${97:state}: ${98:"#"}}
${99:   ${100:timeout}: ${101:"#"}}
${102:   ${103:username}: ${104:"#"}}
${105:${106:   become: ${107:true}} 
${108:   become_method: ${109:su}} 
${110:   become_user: ${111:nobody}} 
${112:   become_flags: ${113:"-s /bin/sh"}}} 
${114:   when: ${115:variable is defined}} 
${116:   with_items: ${117:array}} 
]]></content>
	<tabTrigger>proxysql_query_rules</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
