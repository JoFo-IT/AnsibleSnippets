<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY 
# aws_secret_key: AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). 
# id: ID of Amazon EFS. Either name or ID required for delete. 
# name: Creation Token of Amazon EFS file system. Required for create. Either name or ID required for delete. 
# performance_mode: File system's performance mode to use. Only takes effect during creation. 
# profile: Uses a boto profile. Only works with boto >= 2.24.0. 
# security_token: AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN 
# state: Allows to create, search and destroy Amazon EFS file system 
# tags: List of tags of Amazon EFS. Should be defined as dictionary In case of 'present' state with list of tags 
# targets: List of mounted targets. It should be a list of dictionaries, every dictionary should include next 
# validate_certs: When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0. 
# wait: In case of 'present' state should wait for EFS 'available' life cycle state (of course, if current state 
# wait_timeout: How long the module should wait (in seconds) for desired state before returning. Zero means wait as long 
}- name: ${2:Name for efs module.}
  efs:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:ec2_url}: ${11:"#"}}
${12:   ${13:id}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:performance_mode}: ${20:"#"}}
${21:   ${22:profile}: ${23:"#"}}
${24:   ${25:security_token}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:   ${31:tags}: ${32:"#"}}
${33:   ${34:targets}: ${35:"#"}}
${36:   ${37:validate_certs}: ${38:"#"}}
${39:   ${40:wait}: ${41:"#"}}
${42:   ${43:wait_timeout}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>efs</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
