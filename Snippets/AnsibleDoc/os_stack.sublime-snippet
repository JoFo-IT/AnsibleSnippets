<snippet>
<content><![CDATA[
${1:# api_timeout: How long should the socket layer wait before 
# auth: Dictionary containing auth information as needed 
# auth_type: Name of the auth plugin to use. If the cloud 
# availability_zone: Ignored. Present for backwards compatibility 
# ca_cert: A path to a CA Cert bundle that can be used as 
# client_cert: A path to a client certificate to use as part of 
# client_key: A path to a client key to use as part of the SSL 
# cloud: Named cloud or cloud config to operate against. 
# environment: List of environment files that should be used 
# interface: Endpoint URL type to fetch from the service 
# name: (required) Name of the stack that should be 
# parameters: Dictionary of parameters for the stack creation 
# region_name: Name of the region. 
# rollback: Rollback stack creation 
# state: Indicate desired state of the resource 
# tag: Tag for the stack that should be created, name 
# template: Path of the template file to use for the stack 
# timeout: Maximum number of seconds to wait for the stack 
# validate_certs: Whether or not SSL API requests should be 
# wait: Should ansible wait until the requested resource 
}- name: ${2:Name for os_stack module.}
  os_stack:
${3:   ${4:api_timeout}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:auth_type}: ${11:"#"}}
${12:   ${13:availability_zone}: ${14:"#"}}
${15:   ${16:ca_cert}: ${17:"#"}}
${18:   ${19:client_cert}: ${20:"#"}}
${21:   ${22:client_key}: ${23:"#"}}
${24:   ${25:cloud}: ${26:"#"}}
${27:   ${28:environment}: ${29:"#"}}
${30:   ${31:interface}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:parameters}: ${38:"#"}}
${39:   ${40:region_name}: ${41:"#"}}
${42:   ${43:rollback}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:tag}: ${50:"#"}}
${51:   ${52:template}: ${53:"#"}}
${54:   ${55:timeout}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:   ${61:wait}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>os_stack</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
