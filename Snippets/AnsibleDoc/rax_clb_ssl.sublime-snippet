<snippet>
<content><![CDATA[
${1:#api_key = Rackspace API key (overrides `credentials')
#certificate = The public SSL certificates as a string in PEM format.
#credentials = File to find the Rackspace credentials in (ignored if `api_key' and `username' are provided)
#enabled = If set to "false", temporarily disable SSL termination without discarding existing credentials.
#env = Environment as configured in ~/.pyrax.cfg, see
#https = pyrax-
#https_redirect = If "true", the load balancer will redirect HTTP traffic to HTTPS. Requires "secure_traffic_only" to be true.
#intermediate_certificate = One or more intermediate certificate authorities as a string in PEM format, concatenated into a single string.
#loadbalancer = Name or ID of the load balancer on which to manage SSL termination.
#private_key = The private SSL key as a string in PEM format.
#region = Region to create an instance in
#secure_port = The port to listen for secure traffic.
#secure_traffic_only = If "true", the load balancer will *only* accept secure traffic.
#state = If set to "present", SSL termination will be added to this load balancer. If "absent", SSL termination will be
#username = Rackspace username (overrides `credentials')
#verify_ssl = Whether or not to require SSL validation of API endpoints
#wait = Wait for the balancer to be in state "running" before turning.
#wait_timeout = How long before "wait" gives up, in seconds.
}- name: ${2:Name for rax_clb_ssl module.}
${3:  become: ${4:yes}}
  rax_clb_ssl: ${5:api_key=${6: } }${7:certificate=${8: } }${9:credentials=${10: } }${11:enabled=${12: } }${13:env=${14: } }${15:https=${16: } }${17:https_redirect=${18: } }${19:intermediate_certificate=${20: } }${21:loadbalancer=${22: } }${23:private_key=${24: } }${25:region=${26: } }${27:secure_port=${28: } }${29:secure_traffic_only=${30: } }${31:state=${32: } }${33:username=${34: } }${35:verify_ssl=${36: } }${37:wait=${38: } }${39:wait_timeout=${40: } }
${41:  when: ${42: variable is defined}}
${43:  with_items: ${44: array}}
]]></content>
	<tabTrigger>rax_clb_ssl</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
