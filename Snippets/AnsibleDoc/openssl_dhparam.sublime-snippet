<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To 
# force: Should the parameters be regenerated even it it 
# group: Name of the group that should own the 
# mode: Mode the file or directory should be. For those 
# owner: Name of the user that should own the 
# path: (required) Name of the file in which the 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# size: Size (in bits) of the generated DH-params 
# state: Whether the parameters should exist or not, 
# unsafe_writes: By default this module uses atomic operations to 
}- name: ${2:Name for openssl_dhparam module.}
  openssl_dhparam:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:force}: ${8:"#"}}
${9:   ${10:group}: ${11:"#"}}
${12:   ${13:mode}: ${14:"#"}}
${15:   ${16:owner}: ${17:"#"}}
${18:   ${19:path}: ${20:"#"}}
${21:   ${22:selevel}: ${23:"#"}}
${24:   ${25:serole}: ${26:"#"}}
${27:   ${28:setype}: ${29:"#"}}
${30:   ${31:seuser}: ${32:"#"}}
${33:   ${34:size}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:unsafe_writes}: ${41:"#"}}
${42:${43:   become: ${44:true}} 
${45:   become_method: ${46:su}} 
${47:   become_user: ${48:nobody}} 
${49:   become_flags: ${50:"-s /bin/sh"}}} 
${51:   when: ${52:variable is defined}} 
${53:   with_items: ${54:array}} 
]]></content>
	<tabTrigger>openssl_dhparam</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
