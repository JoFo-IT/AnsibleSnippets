<snippet>
<content><![CDATA[
${1:# behavior: the optional behavior that can be attached to the session when it is created. This can be set to either 
# checks: a list of checks that will be used to verify the session health. If all the checks fail, the session 
# datacenter: name of the datacenter in which the session exists or should be created. 
# delay: the optional lock delay that can be attached to the session when it is created. Locks for invalidated 
# host: host of the consul agent defaults to localhost 
# name: the name that should be associated with the session. This is opaque to Consul and not required. 
# node: the name of the node that with which the session will be associated. by default this is the name of the 
# port: the port on which the consul agent is running 
# scheme: the protocol scheme on which the consul agent is running 
# state: whether the session should be present i.e. created if it doesn't exist, or absent, removed if present. 
# validate_certs: whether to verify the tls certificate of the consul agent 
}- name: ${2:Name for consul_session module.}
  consul_session:
${3:   ${4:behavior}: ${5:"#"}}
${6:   ${7:checks}: ${8:"#"}}
${9:   ${10:datacenter}: ${11:"#"}}
${12:   ${13:delay}: ${14:"#"}}
${15:   ${16:host}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:node}: ${23:"#"}}
${24:   ${25:port}: ${26:"#"}}
${27:   ${28:scheme}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>consul_session</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
