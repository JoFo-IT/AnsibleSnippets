<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#description = description to be applied to the snapshot
#device_name = device name of a mounted volume to be snapshotted
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#instance_id = instance that has the required volume to snapshot mounted
#last_snapshot_min_age = If the volume's most recent snapshot has started less than `last_snapshot_min_age' minutes ago, a new snapshot
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#snapshot_id = snapshot id to remove
#snapshot_tags = a hash/dictionary of tags to add to the snapshot
#state = whether to add or create a snapshot
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#volume_id = volume from which to take the snapshot
#wait = wait for the snapshot to be ready
#wait_timeout = how long before wait gives up, in seconds specify 0 to wait forever
}- name: ${2:Name for ec2_snapshot module.}
${3:  become: ${4:yes}}
  ec2_snapshot: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:description=${10: } }${11:device_name=${12: } }${13:ec2_url=${14: } }${15:instance_id=${16: } }${17:last_snapshot_min_age=${18: } }${19:profile=${20: } }${21:region=${22: } }${23:http=${24: } }${25:security_token=${26: } }${27:snapshot_id=${28: } }${29:snapshot_tags=${30: } }${31:state=${32: } }${33:validate_certs=${34: } }${35:volume_id=${36: } }${37:wait=${38: } }${39:wait_timeout=${40: } }
${41:  when: ${42: variable is defined}}
${43:  with_items: ${44: array}}
]]></content>
	<tabTrigger>ec2_snapshot</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
