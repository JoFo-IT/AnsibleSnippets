<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# description: description to be applied to the snapshot 
# device_name: device name of a mounted volume to be 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# instance_id: instance that has the required volume to 
# last_snapshot_min_age: If the volume's most recent snapshot has started 
# profile: Uses a boto profile. Only works with boto >= 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# security_token: AWS STS security token. If not set then the 
# snapshot_id: snapshot id to remove 
# snapshot_tags: a hash/dictionary of tags to add to the snapshot 
# state: whether to add or create a snapshot 
# validate_certs: When set to "no", SSL certificates will not be 
# volume_id: volume from which to take the snapshot 
# wait: wait for the snapshot to be ready 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for ec2_snapshot module.}
  ec2_snapshot:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:debug_botocore_endpoint_logs}: ${11:"#"}}
${12:   ${13:description}: ${14:"#"}}
${15:   ${16:device_name}: ${17:"#"}}
${18:   ${19:ec2_url}: ${20:"#"}}
${21:   ${22:instance_id}: ${23:"#"}}
${24:   ${25:last_snapshot_min_age}: ${26:"#"}}
${27:   ${28:profile}: ${29:"#"}}
${30:   ${31:region}: ${32:"#"}}
${33:   ${34:}: ${35:"#"}}
${36:   ${37:security_token}: ${38:"#"}}
${39:   ${40:snapshot_id}: ${41:"#"}}
${42:   ${43:snapshot_tags}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:validate_certs}: ${50:"#"}}
${51:   ${52:volume_id}: ${53:"#"}}
${54:   ${55:wait}: ${56:"#"}}
${57:   ${58:wait_timeout}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>ec2_snapshot</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
