<snippet>
<content><![CDATA[
${1:#copy = If true, the file is copied from local 'master' to the target machine, otherwise, the plugin will look for src
#creates = a filename, when it already exists, this step will *not* be run.
#dest = Remote absolute path where the archive should be unpacked
#follow = This flag indicates that filesystem links, if they exist, should be followed.
#group = name of the group that should own the file/directory, as would be fed to `chown'
#list_files = If set to True, return the list of files that are contained in the tarball.
#mode = mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are actually octal
#owner = name of the user that should own the file/directory, as would be fed to `chown'
#selevel = level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'.
#serole = role part of SELinux file context, `_default' feature works as for `seuser'.
#setype = type part of SELinux file context, `_default' feature works as for `seuser'.
#seuser = user part of SELinux file context. Will default to system policy, if applicable. If set to `_default', it will
#src = If copy=yes (default), local path to archive file to copy to the target server; can be absolute or relative. If
}- name: ${2:Name for unarchive module.}
${3:  become: ${4:yes}}
  unarchive: ${5:copy=${6: } }${7:creates=${8: } }${9:dest=${10: } }${11:follow=${12: } }${13:group=${14: } }${15:list_files=${16: } }${17:mode=${18: } }${19:owner=${20: } }${21:selevel=${22: } }${23:serole=${24: } }${25:setype=${26: } }${27:seuser=${28: } }${29:src=${30: } }
${31:  when: ${32: variable is defined}}
${33:  with_items: ${34: array}}
]]></content>
	<tabTrigger>unarchive</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
