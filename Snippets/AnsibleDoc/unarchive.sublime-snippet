<snippet>
<content><![CDATA[
${1:# attributes: The attributes the resulting file or directory 
# copy: If true, the file is copied from local 'master' 
# creates: If the specified absolute path (file or 
# decrypt: This option controls the autodecryption of 
# dest: (required) Remote absolute path where the 
# exclude: List the directory and file entries that you 
# extra_opts: Specify additional options by passing in an 
# group: Name of the group that should own the 
# keep_newer: Do not replace existing files that are newer 
# list_files: If set to True, return the list of files that 
# mode: The permissions the resulting file or directory 
# owner: Name of the user that should own the 
# remote_src: Set to `yes' to indicate the archived file is 
# selevel: The level part of the SELinux file context. This 
# serole: The role part of the SELinux file context. When 
# setype: The type part of the SELinux file context. When 
# seuser: The user part of the SELinux file context. By 
# src: (required) If `remote_src=no' (default), local 
# unsafe_writes: Influence when to use atomic operation to 
# validate_certs: This only applies if using a https URL as the 
}- name: ${2:Name for unarchive module.}
  unarchive:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:copy}: ${8:"#"}}
${9:   ${10:creates}: ${11:"#"}}
${12:   ${13:decrypt}: ${14:"#"}}
${15:   ${16:dest}: ${17:"#"}}
${18:   ${19:exclude}: ${20:"#"}}
${21:   ${22:extra_opts}: ${23:"#"}}
${24:   ${25:group}: ${26:"#"}}
${27:   ${28:keep_newer}: ${29:"#"}}
${30:   ${31:list_files}: ${32:"#"}}
${33:   ${34:mode}: ${35:"#"}}
${36:   ${37:owner}: ${38:"#"}}
${39:   ${40:remote_src}: ${41:"#"}}
${42:   ${43:selevel}: ${44:"#"}}
${45:   ${46:serole}: ${47:"#"}}
${48:   ${49:setype}: ${50:"#"}}
${51:   ${52:seuser}: ${53:"#"}}
${54:   ${55:src}: ${56:"#"}}
${57:   ${58:unsafe_writes}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>unarchive</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
