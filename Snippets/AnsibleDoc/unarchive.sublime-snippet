<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To get supported flags look at the man page for `chattr' 
# copy: If true, the file is copied from local 'master' to the target machine, otherwise, the plugin will look 
# creates: A filename, when it already exists, this step will *not* be run. 
# decrypt: This option controls the autodecryption of source files using vault. 
# dest: (required) Remote absolute path where the archive should be unpacked. 
# exclude: List the directory and file entries that you would like to exclude from the unarchive action. 
# extra_opts: Specify additional options by passing in an array. 
# group: Name of the group that should own the file/directory, as would be fed to `chown'. 
# keep_newer: Do not replace existing files that are newer than files from the archive. 
# list_files: If set to True, return the list of files that are contained in the tarball. 
# mode: Mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are 
# owner: Name of the user that should own the file/directory, as would be fed to `chown'. 
# remote_src: Set to `yes' to indicate the archived file is already on the remote system and not local to the Ansible 
# selevel: Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'. 
# serole: Role part of SELinux file context, `_default' feature works as for `seuser'. 
# setype: Type part of SELinux file context, `_default' feature works as for `seuser'. 
# seuser: User part of SELinux file context. Will default to system policy, if applicable. If set to `_default', 
# src: (required) If `remote_src=no' (default), local path to archive file to copy to the target server; can be 
# unsafe_writes: Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the 
# validate_certs: This only applies if using a https URL as the source of the file. This should only set to `no' used on 
}- name: ${2:Name for unarchive module.}
  unarchive:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:copy}: ${8:"#"}}
${9:   ${10:creates}: ${11:"#"}}
${12:   ${13:decrypt}: ${14:"#"}}
${15:   ${16:dest}: ${17:"#"}}
${18:   ${19:exclude}: ${20:"#"}}
${21:   ${22:extra_opts}: ${23:"#"}}
${24:   ${25:group}: ${26:"#"}}
${27:   ${28:keep_newer}: ${29:"#"}}
${30:   ${31:list_files}: ${32:"#"}}
${33:   ${34:mode}: ${35:"#"}}
${36:   ${37:owner}: ${38:"#"}}
${39:   ${40:remote_src}: ${41:"#"}}
${42:   ${43:selevel}: ${44:"#"}}
${45:   ${46:serole}: ${47:"#"}}
${48:   ${49:setype}: ${50:"#"}}
${51:   ${52:seuser}: ${53:"#"}}
${54:   ${55:src}: ${56:"#"}}
${57:   ${58:unsafe_writes}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>unarchive</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
