<snippet>
<content><![CDATA[
${1:# api_timeout: How long should the socket layer wait before 
# auth: Dictionary containing auth information as needed 
# auth_type: Name of the auth plugin to use. If the cloud 
# auto_ip: Ensure instance has public ip however the cloud 
# availability_zone: Availability zone in which to create the server. 
# boot_from_volume: Should the instance boot from a persistent 
# boot_volume: Volume name or id to use as the volume to boot 
# ca_cert: A path to a CA Cert bundle that can be used as 
# client_cert: A path to a client certificate to use as part of 
# client_key: A path to a client key to use as part of the SSL 
# cloud: Named cloud or cloud config to operate against. 
# config_drive: Whether to boot the server with config drive 
# delete_fip: When `state' is absent and this option is true, 
# flavor: The name or id of the flavor in which the new 
# flavor_include: Text to use to filter flavor names, for the 
# flavor_ram: The minimum amount of ram in MB that the flavor 
# floating_ip_pools: Name of floating IP pool from which to choose a 
# floating_ips: list of valid floating IPs that pre-exist to 
# image: (required) The name or id of the base image to 
# image_exclude: Text to use to filter image names, for the case, 
# interface: Endpoint URL type to fetch from the service 
# key_name: The key pair name to be used when creating a 
# meta: A list of key value pairs that should be 
# name: (required) Name that has to be given to the 
# network: Name or ID of a network to attach this instance 
# nics: A list of networks to which the instance's 
# region_name: Name of the region. 
# reuse_ips: When `auto_ip' is true and this option is true, 
# scheduler_hints: Arbitrary key/value pairs to the scheduler for 
# security_groups: Names of the security groups to which the 
# state: Should the resource be present or absent. 
# terminate_volume: If `yes', delete volume when deleting instance 
# timeout: The amount of time the module should wait for 
# userdata: Opaque blob of data which is made available to 
# validate_certs: Whether or not SSL API requests should be 
# volume_size: The size of the volume to create in GB if 
# volumes: A list of preexisting volumes names or ids to 
# wait: If the module should wait for the instance to be 
}- name: ${2:Name for os_server module.}
  os_server:
${3:   ${4:api_timeout}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:auth_type}: ${11:"#"}}
${12:   ${13:auto_ip}: ${14:"#"}}
${15:   ${16:availability_zone}: ${17:"#"}}
${18:   ${19:boot_from_volume}: ${20:"#"}}
${21:   ${22:boot_volume}: ${23:"#"}}
${24:   ${25:ca_cert}: ${26:"#"}}
${27:   ${28:client_cert}: ${29:"#"}}
${30:   ${31:client_key}: ${32:"#"}}
${33:   ${34:cloud}: ${35:"#"}}
${36:   ${37:config_drive}: ${38:"#"}}
${39:   ${40:delete_fip}: ${41:"#"}}
${42:   ${43:flavor}: ${44:"#"}}
${45:   ${46:flavor_include}: ${47:"#"}}
${48:   ${49:flavor_ram}: ${50:"#"}}
${51:   ${52:floating_ip_pools}: ${53:"#"}}
${54:   ${55:floating_ips}: ${56:"#"}}
${57:   ${58:image}: ${59:"#"}}
${60:   ${61:image_exclude}: ${62:"#"}}
${63:   ${64:interface}: ${65:"#"}}
${66:   ${67:key_name}: ${68:"#"}}
${69:   ${70:meta}: ${71:"#"}}
${72:   ${73:name}: ${74:"#"}}
${75:   ${76:network}: ${77:"#"}}
${78:   ${79:nics}: ${80:"#"}}
${81:   ${82:region_name}: ${83:"#"}}
${84:   ${85:reuse_ips}: ${86:"#"}}
${87:   ${88:scheduler_hints}: ${89:"#"}}
${90:   ${91:security_groups}: ${92:"#"}}
${93:   ${94:state}: ${95:"#"}}
${96:   ${97:terminate_volume}: ${98:"#"}}
${99:   ${100:timeout}: ${101:"#"}}
${102:   ${103:userdata}: ${104:"#"}}
${105:   ${106:validate_certs}: ${107:"#"}}
${108:   ${109:volume_size}: ${110:"#"}}
${111:   ${112:volumes}: ${113:"#"}}
${114:   ${115:wait}: ${116:"#"}}
${117:${118:   become: ${119:true}} 
${120:   become_method: ${121:su}} 
${122:   become_user: ${123:nobody}} 
${124:   become_flags: ${125:"-s /bin/sh"}}} 
${126:   when: ${127:variable is defined}} 
${128:   with_items: ${129:array}} 
]]></content>
	<tabTrigger>os_server</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
