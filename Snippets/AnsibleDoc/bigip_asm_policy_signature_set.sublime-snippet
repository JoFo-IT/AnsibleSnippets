<snippet>
<content><![CDATA[
${1:# alarm: Specifies if the security policy logs the 
# block: Effective when the security policy`s enforcement 
# learn: Specifies if the security policy learns all 
# name: (required) Specifies the name of the signature 
# partition: This parameter is only used when identifying ASM 
# policy_name: (required) Specifies the name of an existing ASM 
# provider: A dict object containing connection details. 
# state: When `present', ensures that the resource 
}- name: ${2:Name for bigip_asm_policy_signature_set module.}
  bigip_asm_policy_signature_set:
${3:   ${4:alarm}: ${5:"#"}}
${6:   ${7:block}: ${8:"#"}}
${9:   ${10:learn}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:partition}: ${17:"#"}}
${18:   ${19:policy_name}: ${20:"#"}}
${21:   ${22:provider}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>bigip_asm_policy_signature_set</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
