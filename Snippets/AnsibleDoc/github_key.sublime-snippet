<snippet>
<content><![CDATA[
${1:# force: The default is `yes', which will replace the existing remote key if it's different than `pubkey'. If 
# name: (required) SSH key name 
# pubkey: SSH public key value. Required when `state=present'. 
# state: Whether to remove a key, ensure that it exists, or update its value. 
# token: (required) GitHub Access Token with permission to list and create public keys. 
}- name: ${2:Name for github_key module.}
  github_key:
${3:   ${4:force}: ${5:"#"}}
${6:   ${7:name}: ${8:"#"}}
${9:   ${10:pubkey}: ${11:"#"}}
${12:   ${13:state}: ${14:"#"}}
${15:   ${16:token}: ${17:"#"}}
${18:${19:   become: ${20:true}} 
${21:   become_method: ${22:su}} 
${23:   become_user: ${24:nobody}} 
${25:   become_flags: ${26:"-s /bin/sh"}}} 
${27:   when: ${28:variable is defined}} 
${29:   with_items: ${30:array}} 
]]></content>
	<tabTrigger>github_key</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
