<snippet>
<content><![CDATA[
${1:#backup = Create a backup file including the timestamp information so you can get the original file back if you somehow
#dest = Path to the INI-style file; this file is created if required
#follow = This flag indicates that filesystem links, if they exist, should be followed.
#group = name of the group that should own the file/directory, as would be fed to `chown'
#mode = mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are actually octal
#option = if set (required for changing a `value'), this is the name of the option. May be omitted if adding/removing a
#others = all arguments accepted by the [file] module also work here
#owner = name of the user that should own the file/directory, as would be fed to `chown'
#section = Section name in INI file. This is added if `state=present' automatically when a single value is being set.
#selevel = level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'.
#serole = role part of SELinux file context, `_default' feature works as for `seuser'.
#setype = type part of SELinux file context, `_default' feature works as for `seuser'.
#seuser = user part of SELinux file context. Will default to system policy, if applicable. If set to `_default', it will
#state = If set to `absent' the option or section will be removed if present instead of created.
#value = the string value to be associated with an `option'. May be omitted when removing an `option'.
}- name: ${2:Name for ini_file module.}
${3:  become: ${4:yes}}
  ini_file: ${5:backup=${6: } }${7:dest=${8: } }${9:follow=${10: } }${11:group=${12: } }${13:mode=${14: } }${15:option=${16: } }${17:others=${18: } }${19:owner=${20: } }${21:section=${22: } }${23:selevel=${24: } }${25:serole=${26: } }${27:setype=${28: } }${29:seuser=${30: } }${31:state=${32: } }${33:value=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>ini_file</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
