<snippet>
<content><![CDATA[
${1:#allocation_pool_end = From the subnet pool the last IP that should be assigned to the virtual machines.
#allocation_pool_start = From the subnet pool the starting address from which the IP should be allocated.
#api_timeout = How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be
#auth = Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password'
#auth_type = Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the
#availability_zone = Name of the availability zone.
#cacert = A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
#cert = A path to a client certificate to use as part of the SSL transaction
#cidr = The CIDR representation of the subnet that should be assigned to the subnet.
#cloud = Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is not needed
#dns_nameservers = List of DNS nameservers for this subnet.
#enable_dhcp = Whether DHCP should be enabled for this subnet.
#endpoint_type = Endpoint URL type to fetch from the service catalog.
#gateway_ip = The ip that would be assigned to the gateway for this subnet
#host_routes = A list of host route dictionaries for the subnet.
#ip_version = The IP version of the subnet 4 or 6
#ipv6_address_mode = IPv6 address mode
#ipv6_ra_mode = IPv6 router advertisement mode
#key = A path to a client key to use as part of the SSL transaction
#name = The name of the subnet that should be created. Although Neutron allows for non-unique subnet names, this module
#network_name = Name of the network to which the subnet should be attached
#region_name = Name of the region.
#state = Indicate desired state of the resource
#timeout = How long should ansible wait for the requested resource.
#validate_certs = Whether or not SSL API requests should be verified.
#wait = Should ansible wait until the requested resource is complete.
}- name: ${2:Name for os_subnet module.}
${3:  become: ${4:yes}}
  os_subnet: ${5:allocation_pool_end=${6: } }${7:allocation_pool_start=${8: } }${9:api_timeout=${10: } }${11:auth=${12: } }${13:auth_type=${14: } }${15:availability_zone=${16: } }${17:cacert=${18: } }${19:cert=${20: } }${21:cidr=${22: } }${23:cloud=${24: } }${25:dns_nameservers=${26: } }${27:enable_dhcp=${28: } }${29:endpoint_type=${30: } }${31:gateway_ip=${32: } }${33:host_routes=${34: } }${35:ip_version=${36: } }${37:ipv6_address_mode=${38: } }${39:ipv6_ra_mode=${40: } }${41:key=${42: } }${43:name=${44: } }${45:network_name=${46: } }${47:region_name=${48: } }${49:state=${50: } }${51:timeout=${52: } }${53:validate_certs=${54: } }${55:wait=${56: } }
${57:  when: ${58: variable is defined}}
${59:  with_items: ${60: array}}
]]></content>
	<tabTrigger>os_subnet</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
