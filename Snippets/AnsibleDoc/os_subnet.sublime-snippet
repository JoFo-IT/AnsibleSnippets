<snippet>
<content><![CDATA[
${1:# allocation_pool_end: From the subnet pool the last IP that should be 
# allocation_pool_start: From the subnet pool the starting address from 
# api_timeout: How long should the socket layer wait before 
# auth: Dictionary containing auth information as needed 
# auth_type: Name of the auth plugin to use. If the cloud 
# availability_zone: Ignored. Present for backwards compatibility 
# cacert: A path to a CA Cert bundle that can be used as 
# cert: A path to a client certificate to use as part of 
# cidr: The CIDR representation of the subnet that 
# cloud: Named cloud or cloud config to operate against. 
# dns_nameservers: List of DNS nameservers for this subnet. 
# enable_dhcp: Whether DHCP should be enabled for this subnet. 
# gateway_ip: The ip that would be assigned to the gateway for 
# host_routes: A list of host route dictionaries for the 
# interface: Endpoint URL type to fetch from the service 
# ip_version: The IP version of the subnet 4 or 6 
# ipv6_address_mode: IPv6 address mode 
# ipv6_ra_mode: IPv6 router advertisement mode 
# key: A path to a client key to use as part of the SSL 
# name: (required) The name of the subnet that should be 
# network_name: Name of the network to which the subnet should 
# no_gateway_ip: The gateway IP would not be assigned for this 
# project: Project name or ID containing the subnet (name 
# region_name: Name of the region. 
# state: Indicate desired state of the resource 
# timeout: How long should ansible wait for the requested 
# use_default_subnetpool: Use the default subnetpool for `ip_version' to 
# verify: Whether or not SSL API requests should be 
# wait: Should ansible wait until the requested resource 
}- name: ${2:Name for os_subnet module.}
  os_subnet:
${3:   ${4:allocation_pool_end}: ${5:"#"}}
${6:   ${7:allocation_pool_start}: ${8:"#"}}
${9:   ${10:api_timeout}: ${11:"#"}}
${12:   ${13:auth}: ${14:"#"}}
${15:   ${16:auth_type}: ${17:"#"}}
${18:   ${19:availability_zone}: ${20:"#"}}
${21:   ${22:cacert}: ${23:"#"}}
${24:   ${25:cert}: ${26:"#"}}
${27:   ${28:cidr}: ${29:"#"}}
${30:   ${31:cloud}: ${32:"#"}}
${33:   ${34:dns_nameservers}: ${35:"#"}}
${36:   ${37:enable_dhcp}: ${38:"#"}}
${39:   ${40:gateway_ip}: ${41:"#"}}
${42:   ${43:host_routes}: ${44:"#"}}
${45:   ${46:interface}: ${47:"#"}}
${48:   ${49:ip_version}: ${50:"#"}}
${51:   ${52:ipv6_address_mode}: ${53:"#"}}
${54:   ${55:ipv6_ra_mode}: ${56:"#"}}
${57:   ${58:key}: ${59:"#"}}
${60:   ${61:name}: ${62:"#"}}
${63:   ${64:network_name}: ${65:"#"}}
${66:   ${67:no_gateway_ip}: ${68:"#"}}
${69:   ${70:project}: ${71:"#"}}
${72:   ${73:region_name}: ${74:"#"}}
${75:   ${76:state}: ${77:"#"}}
${78:   ${79:timeout}: ${80:"#"}}
${81:   ${82:use_default_subnetpool}: ${83:"#"}}
${84:   ${85:verify}: ${86:"#"}}
${87:   ${88:wait}: ${89:"#"}}
${90:${91:   become: ${92:true}} 
${93:   become_method: ${94:su}} 
${95:   become_user: ${96:nobody}} 
${97:   become_flags: ${98:"-s /bin/sh"}}} 
${99:   when: ${100:variable is defined}} 
${101:   with_items: ${102:array}} 
]]></content>
	<tabTrigger>os_subnet</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
