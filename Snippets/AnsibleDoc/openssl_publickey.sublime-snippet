<snippet>
<content><![CDATA[
${1:# attributes: The attributes the resulting file or directory 
# backup: Create a backup file including a timestamp so 
# force: Should the key be regenerated even it it already 
# format: The format of the public key. 
# group: Name of the group that should own the 
# mode: The permissions the resulting file or directory 
# owner: Name of the user that should own the 
# path: (required) Name of the file in which the 
# privatekey_passphrase: The passphrase for the private key. 
# privatekey_path: (required) Path to the TLS/SSL private key from 
# selevel: The level part of the SELinux file context. This 
# serole: The role part of the SELinux file context. When 
# setype: The type part of the SELinux file context. When 
# seuser: The user part of the SELinux file context. By 
# state: Whether the public key should exist or not, 
# unsafe_writes: Influence when to use atomic operation to 
}- name: ${2:Name for openssl_publickey module.}
  openssl_publickey:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:force}: ${11:"#"}}
${12:   ${13:format}: ${14:"#"}}
${15:   ${16:group}: ${17:"#"}}
${18:   ${19:mode}: ${20:"#"}}
${21:   ${22:owner}: ${23:"#"}}
${24:   ${25:path}: ${26:"#"}}
${27:   ${28:privatekey_passphrase}: ${29:"#"}}
${30:   ${31:privatekey_path}: ${32:"#"}}
${33:   ${34:selevel}: ${35:"#"}}
${36:   ${37:serole}: ${38:"#"}}
${39:   ${40:setype}: ${41:"#"}}
${42:   ${43:seuser}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:unsafe_writes}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>openssl_publickey</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
