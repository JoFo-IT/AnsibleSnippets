<snippet>
<content><![CDATA[
${1:# certificate_name: The X.509 certificate name attached to the APIC 
# description: The description for the VRF. 
# host: (required) IP Address or hostname of APIC 
# output_level: Influence the output of this ACI module. 
# password: (required) The password to use for 
# policy_control_direction: Determines if the policy should be enforced by 
# policy_control_preference: Determines if the fabric should enforce contract 
# port: Port number to be used for REST connection. The 
# private_key: (required) PEM formatted file that contains your 
# state: Use `present' or `absent' for adding or 
# tenant: The name of the Tenant the VRF should belong to. 
# timeout: The socket level timeout in seconds. 
# use_proxy: If `no', it will not use a proxy, even if one is 
# use_ssl: If `no', an HTTP connection will be used instead 
# username: The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. 
# vrf: The name of the VRF. 
}- name: ${2:Name for aci_vrf module.}
  aci_vrf:
${3:   ${4:certificate_name}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:host}: ${11:"#"}}
${12:   ${13:output_level}: ${14:"#"}}
${15:   ${16:password}: ${17:"#"}}
${18:   ${19:policy_control_direction}: ${20:"#"}}
${21:   ${22:policy_control_preference}: ${23:"#"}}
${24:   ${25:port}: ${26:"#"}}
${27:   ${28:private_key}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:tenant}: ${35:"#"}}
${36:   ${37:timeout}: ${38:"#"}}
${39:   ${40:use_proxy}: ${41:"#"}}
${42:   ${43:use_ssl}: ${44:"#"}}
${45:   ${46:username}: ${47:"#"}}
${48:   ${49:validate_certs}: ${50:"#"}}
${51:   ${52:vrf}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>aci_vrf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
