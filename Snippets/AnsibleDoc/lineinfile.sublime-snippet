<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To 
# backrefs: Used with `state=present'. If set, `line' can 
# backup: Create a backup file including the timestamp 
# create: Used with `state=present'. If specified, the 
# firstmatch: Used with `insertafter' or `insertbefore'. If 
# group: Name of the group that should own the 
# insertafter: Used with `state=present'. If specified, the 
# insertbefore: Used with `state=present'. If specified, the 
# line: Required for `state=present'. The line to 
# mode: Mode the file or directory should be. For those 
# others: All arguments accepted by the [file] module also 
# owner: Name of the user that should own the 
# path: (required) The file to modify. Before 2.3 this 
# regexp: The regular expression to look for in every line 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# state: Whether the line should be there or not. 
# unsafe_writes: Normally this module uses atomic operations to 
# validate: The validation command to run before copying 
}- name: ${2:Name for lineinfile module.}
  lineinfile:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backrefs}: ${8:"#"}}
${9:   ${10:backup}: ${11:"#"}}
${12:   ${13:create}: ${14:"#"}}
${15:   ${16:firstmatch}: ${17:"#"}}
${18:   ${19:group}: ${20:"#"}}
${21:   ${22:insertafter}: ${23:"#"}}
${24:   ${25:insertbefore}: ${26:"#"}}
${27:   ${28:line}: ${29:"#"}}
${30:   ${31:mode}: ${32:"#"}}
${33:   ${34:others}: ${35:"#"}}
${36:   ${37:owner}: ${38:"#"}}
${39:   ${40:path}: ${41:"#"}}
${42:   ${43:regexp}: ${44:"#"}}
${45:   ${46:selevel}: ${47:"#"}}
${48:   ${49:serole}: ${50:"#"}}
${51:   ${52:setype}: ${53:"#"}}
${54:   ${55:seuser}: ${56:"#"}}
${57:   ${58:state}: ${59:"#"}}
${60:   ${61:unsafe_writes}: ${62:"#"}}
${63:   ${64:validate}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>lineinfile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
