<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To get supported flags look at the man page for `chattr' 
# backrefs: Used with `state=present'. If set, line can contain backreferences (both positional and named) that will 
# backup: Create a backup file including the timestamp information so you can get the original file back if you 
# create: Used with `state=present'. If specified, the file will be created if it does not already exist. By 
# group: Name of the group that should own the file/directory, as would be fed to `chown'. 
# insertafter: Used with `state=present'. If specified, the line will be inserted after the last match of specified 
# insertbefore: Used with `state=present'. If specified, the line will be inserted before the last match of specified 
# line: Required for `state=present'. The line to insert/replace into the file. If `backrefs' is set, may 
# mode: Mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are 
# others: All arguments accepted by the [file] module also work here. 
# owner: Name of the user that should own the file/directory, as would be fed to `chown'. 
# path: (required) The file to modify. Before 2.3 this option was only usable as `dest', `destfile' and `name'. 
# regexp: The regular expression to look for in every line of the file. For `state=present', the pattern to 
# selevel: Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'. 
# serole: Role part of SELinux file context, `_default' feature works as for `seuser'. 
# setype: Type part of SELinux file context, `_default' feature works as for `seuser'. 
# seuser: User part of SELinux file context. Will default to system policy, if applicable. If set to `_default', 
# state: Whether the line should be there or not. 
# unsafe_writes: Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the 
# validate: The validation command to run before copying into place. The path to the file to validate is passed in 
}- name: ${2:Name for lineinfile module.}
  lineinfile:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backrefs}: ${8:"#"}}
${9:   ${10:backup}: ${11:"#"}}
${12:   ${13:create}: ${14:"#"}}
${15:   ${16:group}: ${17:"#"}}
${18:   ${19:insertafter}: ${20:"#"}}
${21:   ${22:insertbefore}: ${23:"#"}}
${24:   ${25:line}: ${26:"#"}}
${27:   ${28:mode}: ${29:"#"}}
${30:   ${31:others}: ${32:"#"}}
${33:   ${34:owner}: ${35:"#"}}
${36:   ${37:path}: ${38:"#"}}
${39:   ${40:regexp}: ${41:"#"}}
${42:   ${43:selevel}: ${44:"#"}}
${45:   ${46:serole}: ${47:"#"}}
${48:   ${49:setype}: ${50:"#"}}
${51:   ${52:seuser}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:unsafe_writes}: ${59:"#"}}
${60:   ${61:validate}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>lineinfile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
