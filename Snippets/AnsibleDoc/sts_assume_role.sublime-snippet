<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#duration_seconds = The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#external_id = A unique identifier that is used by third parties to assume a role in their customers' accounts.
#mfa_serial_number = he identification number of the MFA device that is associated with the user who is making the AssumeRole call.
#mfa_token = The value provided by the MFA device, if the trust policy of the role being assumed requires MFA.
#policy = Supplemental policy to use in addition to assumed role's policies.
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#role_arn = The Amazon Resource Name (ARN) of the role that the caller is assuming
# = Identifie
#role_session_name = Name of the role's session - will be used by CloudTrail
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
}- name: ${2:Name for sts_assume_role module.}
${3:  become: ${4:yes}}
  sts_assume_role: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:duration_seconds=${10: } }${11:ec2_url=${12: } }${13:external_id=${14: } }${15:mfa_serial_number=${16: } }${17:mfa_token=${18: } }${19:policy=${20: } }${21:profile=${22: } }${23:region=${24: } }${25:http=${26: } }${27:role_arn=${28: } }${29:=${30: } }${31:role_session_name=${32: } }${33:security_token=${34: } }${35:validate_certs=${36: } }
${37:  when: ${38: variable is defined}}
${39:  with_items: ${40: array}}
]]></content>
	<tabTrigger>sts_assume_role</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
