<snippet>
<content><![CDATA[
${1:# description: The description of the monitor. 
# interval: The interval specifying how frequently the 
# ip: IP address part of the IP/port definition. If 
# name: (required) Monitor name. 
# parent: The parent template of this monitor template. 
# partition: Device partition to manage resources on. 
# port: Port address part of the IP/port definition. If 
# provider: A dict object containing connection details. 
# receive: The receive string for the monitor call. 
# receive_disable: This setting works like `receive', except that 
# send: The send string for the monitor call. When 
# state: When `present', ensures that the monitor exists. 
# time_until_up: Specifies the amount of time in seconds after 
# timeout: The number of seconds in which the node or 
}- name: ${2:Name for bigip_monitor_udp module.}
  bigip_monitor_udp:
${3:   ${4:description}: ${5:"#"}}
${6:   ${7:interval}: ${8:"#"}}
${9:   ${10:ip}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:parent}: ${17:"#"}}
${18:   ${19:partition}: ${20:"#"}}
${21:   ${22:port}: ${23:"#"}}
${24:   ${25:provider}: ${26:"#"}}
${27:   ${28:receive}: ${29:"#"}}
${30:   ${31:receive_disable}: ${32:"#"}}
${33:   ${34:send}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:time_until_up}: ${41:"#"}}
${42:   ${43:timeout}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>bigip_monitor_udp</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
