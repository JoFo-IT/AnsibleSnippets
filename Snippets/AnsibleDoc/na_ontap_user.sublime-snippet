<snippet>
<content><![CDATA[
${1:# application: (required) Application to grant access to. 
# authentication_method: (required) Authentication method for the 
# hostname: (required) The hostname or IP address of the 
# https: Enable and disabled https 
# lock_user: Whether the specified user account is locked. 
# name: (required) The name of the user to manage. 
# password: (required) Password for the specified user. 
# role_name: The name of the role. Required when 
# set_password: Password for the user account. It is ignored for 
# state: Whether the specified user should exist or not. 
# username: (required) This can be a Cluster-scoped or SVM- 
# vserver: (required) The name of the vserver to use. 
}- name: ${2:Name for na_ontap_user module.}
  na_ontap_user:
${3:   ${4:application}: ${5:"#"}}
${6:   ${7:authentication_method}: ${8:"#"}}
${9:   ${10:hostname}: ${11:"#"}}
${12:   ${13:https}: ${14:"#"}}
${15:   ${16:lock_user}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:password}: ${23:"#"}}
${24:   ${25:role_name}: ${26:"#"}}
${27:   ${28:set_password}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:username}: ${35:"#"}}
${36:   ${37:vserver}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>na_ontap_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
