<snippet>
<content><![CDATA[
${1:# dependencies: A list of service dependencies to set for this particular service. This should be a list of service 
# dependency_action: Used in conjunction with `dependency' to either add the dependencies to the existing service 
# description: The description to set for the service. 
# desktop_interact: Whether to allow the service user to interact with the desktop. This should only be set to true when 
# display_name: The display name to set for the service. 
# force_dependent_services: If True, stopping or restarting a service with dependent services will force the dependent services to 
# name: (required) Name of the service 
# password: The password to set the service to start as. This and the `username' argument must be supplied together. 
# path: The path to the executable to set for the service. 
# start_mode: Set the startup type for the service. `delayed' added in Ansible 2.3 
# state: `started'/`stopped'/`absent'/`pause' are idempotent actions that will not run commands unless necessary. 
# username: The username to set the service to start as. This and the `password' argument must be supplied together. 
}- name: ${2:Name for win_service module.}
  win_service:
${3:   ${4:dependencies}: ${5:"#"}}
${6:   ${7:dependency_action}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:desktop_interact}: ${14:"#"}}
${15:   ${16:display_name}: ${17:"#"}}
${18:   ${19:force_dependent_services}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:password}: ${26:"#"}}
${27:   ${28:path}: ${29:"#"}}
${30:   ${31:start_mode}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:username}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>win_service</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
