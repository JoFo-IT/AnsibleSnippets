<snippet>
<content><![CDATA[
${1:# address: Virtual address. This value cannot be modified 
# arp: Specifies whether the system accepts ARP 
# arp_state: Specifies whether the system accepts ARP 
# auto_delete: Specifies whether the system automatically 
# availability_calculation: Specifies what routes of the virtual address the 
# connection_limit: Specifies the number of concurrent connections 
# icmp_echo: Specifies how the systems sends responses to 
# name: Name of the virtual address. If this parameter 
# netmask: Netmask of the provided virtual address. This 
# partition: Device partition to manage resources on. 
# provider: A dict object containing connection details. 
# route_advertisement: Specifies whether the system uses route 
# route_domain: The route domain of the `address' that you want 
# spanning: Enables all BIG-IP systems in a device group to 
# state: The virtual address state. If `absent', an 
# traffic_group: The traffic group for the virtual address. When 
}- name: ${2:Name for bigip_virtual_address module.}
  bigip_virtual_address:
${3:   ${4:address}: ${5:"#"}}
${6:   ${7:arp}: ${8:"#"}}
${9:   ${10:arp_state}: ${11:"#"}}
${12:   ${13:auto_delete}: ${14:"#"}}
${15:   ${16:availability_calculation}: ${17:"#"}}
${18:   ${19:connection_limit}: ${20:"#"}}
${21:   ${22:icmp_echo}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:netmask}: ${29:"#"}}
${30:   ${31:partition}: ${32:"#"}}
${33:   ${34:provider}: ${35:"#"}}
${36:   ${37:route_advertisement}: ${38:"#"}}
${39:   ${40:route_domain}: ${41:"#"}}
${42:   ${43:spanning}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:traffic_group}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>bigip_virtual_address</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
