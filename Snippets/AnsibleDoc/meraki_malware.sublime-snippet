<snippet>
<content><![CDATA[
${1:# allowed_files: List of files to whitelist. 
# allowed_urls: List of URLs to whitelist. 
# auth_key: (required) Authentication key provided by the 
# host: Hostname for Meraki dashboard. Can be used to 
# internal_error_retry_time: Number of seconds to retry if server returns an 
# mode: Enabled or disabled state of malware protection. 
# net_id: ID of network which configuration is applied to. 
# net_name: Name of network which configuration is applied 
# org_id: ID of organization. 
# org_name: Name of organization. 
# output_format: Instructs module whether response keys should be 
# output_level: Set amount of debug output during module 
# rate_limit_retry_time: Number of seconds to retry if rate limiter is 
# state: Specifies whether object should be queried, 
# timeout: Time to timeout for HTTP requests. 
# use_https: If `no', it will use HTTP. Otherwise it will use 
# use_proxy: If `no', it will not use a proxy, even if one is 
# validate_certs: Whether to validate HTTP certificates. 
}- name: ${2:Name for meraki_malware module.}
  meraki_malware:
${3:   ${4:allowed_files}: ${5:"#"}}
${6:   ${7:allowed_urls}: ${8:"#"}}
${9:   ${10:auth_key}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:internal_error_retry_time}: ${17:"#"}}
${18:   ${19:mode}: ${20:"#"}}
${21:   ${22:net_id}: ${23:"#"}}
${24:   ${25:net_name}: ${26:"#"}}
${27:   ${28:org_id}: ${29:"#"}}
${30:   ${31:org_name}: ${32:"#"}}
${33:   ${34:output_format}: ${35:"#"}}
${36:   ${37:output_level}: ${38:"#"}}
${39:   ${40:rate_limit_retry_time}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:timeout}: ${47:"#"}}
${48:   ${49:use_https}: ${50:"#"}}
${51:   ${52:use_proxy}: ${53:"#"}}
${54:   ${55:validate_certs}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>meraki_malware</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
