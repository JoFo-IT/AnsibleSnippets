<snippet>
<content><![CDATA[
${1:# daemon_reload: run daemon-reload before doing any other 
# enabled: Whether the service should start on boot. *At 
# force: Whether to override existing symlinks. 
# masked: Whether the unit should be masked or not, a 
# name: Name of the service. When using in a chroot 
# no_block: Do not synchronously wait for the requested 
# scope: run systemctl within a given service manager 
# state: `started'/`stopped' are idempotent actions that 
# user: (deprecated) run ``systemctl`` talking to the 
}- name: ${2:Name for systemd module.}
  systemd:
${3:   ${4:daemon_reload}: ${5:"#"}}
${6:   ${7:enabled}: ${8:"#"}}
${9:   ${10:force}: ${11:"#"}}
${12:   ${13:masked}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:no_block}: ${20:"#"}}
${21:   ${22:scope}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:user}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>systemd</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
