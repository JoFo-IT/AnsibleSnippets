<snippet>
<content><![CDATA[
${1:# daemon_reload: run daemon-reload before doing any other operations, to make sure systemd has read any changes. 
# enabled: Whether the service should start on boot. *At least one of state and enabled are required.* 
# masked: Whether the unit should be masked or not, a masked unit is impossible to start. 
# name: Name of the service. When using in a chroot environment you always need to specify the full name i.e. 
# no_block: Do not synchronously wait for the requested operation to finish. Enqueued job will continue without 
# state: `started'/`stopped' are idempotent actions that will not run commands unless necessary. `restarted' will 
# user: run systemctl talking to the service manager of the calling user, rather than the service manager of the 
}- name: ${2:Name for systemd module.}
  systemd:
${3:   ${4:daemon_reload}: ${5:"#"}}
${6:   ${7:enabled}: ${8:"#"}}
${9:   ${10:masked}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:no_block}: ${17:"#"}}
${18:   ${19:state}: ${20:"#"}}
${21:   ${22:user}: ${23:"#"}}
${24:${25:   become: ${26:true}} 
${27:   become_method: ${28:su}} 
${29:   become_user: ${30:nobody}} 
${31:   become_flags: ${32:"-s /bin/sh"}}} 
${33:   when: ${34:variable is defined}} 
${35:   with_items: ${36:array}} 
]]></content>
	<tabTrigger>systemd</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
