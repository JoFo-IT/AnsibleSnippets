<snippet>
<content><![CDATA[
${1:# entry_timeout: Specifies the duration of the persistence 
# hash_algorithm: Specifies the algorithm the system uses for hash 
# match_across_pools: When `yes', specifies that the system can use 
# match_across_services: When `yes', specifies that all persistent 
# match_across_virtuals: When `yes', specifies that all persistent 
# name: (required) Specifies the name of the profile. 
# override_connection_limit: When `yes', specifies that the system allows you 
# parent: Specifies the profile from which this profile 
# partition: Device partition to manage resources on. 
# provider: A dict object containing connection details. 
# state: When `present', ensures that the profile exists. 
}- name: ${2:Name for bigip_profile_persistence_src_addr module.}
  bigip_profile_persistence_src_addr:
${3:   ${4:entry_timeout}: ${5:"#"}}
${6:   ${7:hash_algorithm}: ${8:"#"}}
${9:   ${10:match_across_pools}: ${11:"#"}}
${12:   ${13:match_across_services}: ${14:"#"}}
${15:   ${16:match_across_virtuals}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:override_connection_limit}: ${23:"#"}}
${24:   ${25:parent}: ${26:"#"}}
${27:   ${28:partition}: ${29:"#"}}
${30:   ${31:provider}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>bigip_profile_persistence_src_addr</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
