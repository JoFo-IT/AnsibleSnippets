<snippet>
<content><![CDATA[
${1:# attributes: The attributes the resulting file or directory 
# comment: Provides a new comment to the public key. When 
# force: Should the key be regenerated even if it already 
# group: Name of the group that should own the 
# mode: The permissions the resulting file or directory 
# owner: Name of the user that should own the 
# path: (required) Name of the files containing the 
# selevel: The level part of the SELinux file context. This 
# serole: The role part of the SELinux file context. When 
# setype: The type part of the SELinux file context. When 
# seuser: The user part of the SELinux file context. By 
# size: Specifies the number of bits in the private key 
# state: Whether the private and public keys should exist 
# type: The algorithm used to generate the SSH private 
# unsafe_writes: Influence when to use atomic operation to 
}- name: ${2:Name for openssh_keypair module.}
  openssh_keypair:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:comment}: ${8:"#"}}
${9:   ${10:force}: ${11:"#"}}
${12:   ${13:group}: ${14:"#"}}
${15:   ${16:mode}: ${17:"#"}}
${18:   ${19:owner}: ${20:"#"}}
${21:   ${22:path}: ${23:"#"}}
${24:   ${25:selevel}: ${26:"#"}}
${27:   ${28:serole}: ${29:"#"}}
${30:   ${31:setype}: ${32:"#"}}
${33:   ${34:seuser}: ${35:"#"}}
${36:   ${37:size}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:type}: ${44:"#"}}
${45:   ${46:unsafe_writes}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>openssh_keypair</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
