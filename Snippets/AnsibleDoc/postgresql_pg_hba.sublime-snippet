<snippet>
<content><![CDATA[
${1:# address: The source address/net where the connections 
# attributes: The attributes the resulting file or directory 
# backup: If set, create a backup of the `pg_hba' file 
# backup_file: Write backup to a specific backupfile rather 
# contype: Type of the rule. If not set, 
# create: Create an `pg_hba' file if none exists. When set 
# databases: Databases this line applies to. 
# dest: (required) Path to `pg_hba' file to modify. 
# group: Name of the group that should own the 
# method: Authentication method to be used. 
# mode: The permissions the resulting file or directory 
# netmask: The netmask of the source address. 
# options: Additional options for the authentication 
# order: The entries will be written out in a specific 
# owner: Name of the user that should own the 
# selevel: The level part of the SELinux file context. This 
# serole: The role part of the SELinux file context. When 
# setype: The type part of the SELinux file context. When 
# seuser: The user part of the SELinux file context. By 
# state: The lines will be added/modified when 
# unsafe_writes: Influence when to use atomic operation to 
# users: Users this line applies to. 
}- name: ${2:Name for postgresql_pg_hba module.}
  postgresql_pg_hba:
${3:   ${4:address}: ${5:"#"}}
${6:   ${7:attributes}: ${8:"#"}}
${9:   ${10:backup}: ${11:"#"}}
${12:   ${13:backup_file}: ${14:"#"}}
${15:   ${16:contype}: ${17:"#"}}
${18:   ${19:create}: ${20:"#"}}
${21:   ${22:databases}: ${23:"#"}}
${24:   ${25:dest}: ${26:"#"}}
${27:   ${28:group}: ${29:"#"}}
${30:   ${31:method}: ${32:"#"}}
${33:   ${34:mode}: ${35:"#"}}
${36:   ${37:netmask}: ${38:"#"}}
${39:   ${40:options}: ${41:"#"}}
${42:   ${43:order}: ${44:"#"}}
${45:   ${46:owner}: ${47:"#"}}
${48:   ${49:selevel}: ${50:"#"}}
${51:   ${52:serole}: ${53:"#"}}
${54:   ${55:setype}: ${56:"#"}}
${57:   ${58:seuser}: ${59:"#"}}
${60:   ${61:state}: ${62:"#"}}
${63:   ${64:unsafe_writes}: ${65:"#"}}
${66:   ${67:users}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>postgresql_pg_hba</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
