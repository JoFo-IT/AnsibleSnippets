<snippet>
<content><![CDATA[
${1:# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# avi_disable_session_cache_as_fact: It disables avi session information to be cached 
# controller: IP address or hostname of the controller. The 
# description: User defined description for the object. 
# dns_monitor: Healthmonitordns settings for healthmonitor. 
# external_monitor: Healthmonitorexternal settings for 
# failed_checks: Number of continuous failed health checks before 
# http_monitor: Healthmonitorhttp settings for healthmonitor. 
# https_monitor: Healthmonitorhttp settings for healthmonitor. 
# is_federated: This field describes the object's replication 
# monitor_port: Use this port instead of the port defined for 
# name: (required) A user friendly name for this health 
# password: Password of Avi user in Avi controller. The 
# radius_monitor: Health monitor for radius. Field introduced in 
# receive_timeout: A valid response from the server is expected 
# send_interval: Frequency, in seconds, that monitors are sent to 
# sip_monitor: Health monitor for sip. Field introduced in 
# state: The state that should be applied on the entity. 
# successful_checks: Number of continuous successful health checks 
# tcp_monitor: Healthmonitortcp settings for healthmonitor. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# type: (required) Type of the health monitor. Enum 
# udp_monitor: Healthmonitorudp settings for healthmonitor. 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Uuid of the health monitor. 
}- name: ${2:Name for avi_healthmonitor module.}
  avi_healthmonitor:
${3:   ${4:api_context}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:avi_api_patch_op}: ${11:"#"}}
${12:   ${13:avi_api_update_method}: ${14:"#"}}
${15:   ${16:avi_credentials}: ${17:"#"}}
${18:   ${19:avi_disable_session_cache_as_fact}: ${20:"#"}}
${21:   ${22:controller}: ${23:"#"}}
${24:   ${25:description}: ${26:"#"}}
${27:   ${28:dns_monitor}: ${29:"#"}}
${30:   ${31:external_monitor}: ${32:"#"}}
${33:   ${34:failed_checks}: ${35:"#"}}
${36:   ${37:http_monitor}: ${38:"#"}}
${39:   ${40:https_monitor}: ${41:"#"}}
${42:   ${43:is_federated}: ${44:"#"}}
${45:   ${46:monitor_port}: ${47:"#"}}
${48:   ${49:name}: ${50:"#"}}
${51:   ${52:password}: ${53:"#"}}
${54:   ${55:radius_monitor}: ${56:"#"}}
${57:   ${58:receive_timeout}: ${59:"#"}}
${60:   ${61:send_interval}: ${62:"#"}}
${63:   ${64:sip_monitor}: ${65:"#"}}
${66:   ${67:state}: ${68:"#"}}
${69:   ${70:successful_checks}: ${71:"#"}}
${72:   ${73:tcp_monitor}: ${74:"#"}}
${75:   ${76:tenant}: ${77:"#"}}
${78:   ${79:tenant_ref}: ${80:"#"}}
${81:   ${82:tenant_uuid}: ${83:"#"}}
${84:   ${85:type}: ${86:"#"}}
${87:   ${88:udp_monitor}: ${89:"#"}}
${90:   ${91:url}: ${92:"#"}}
${93:   ${94:username}: ${95:"#"}}
${96:   ${97:uuid}: ${98:"#"}}
${99:${100:   become: ${101:true}} 
${102:   become_method: ${103:su}} 
${104:   become_user: ${105:nobody}} 
${106:   become_flags: ${107:"-s /bin/sh"}}} 
${108:   when: ${109:variable is defined}} 
${110:   with_items: ${111:array}} 
]]></content>
	<tabTrigger>avi_healthmonitor</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
