<snippet>
<content><![CDATA[
${1:# action: (required) The AWS Lambda action you want to allow in this statement. Each Lambda action is a string 
# alias: Name of the function alias. Mutually exclusive with `version'. 
# aws_access_key: AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY 
# aws_secret_key: AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). 
# event_source_token: Token string representing source ARN or account. Mutually exclusive with `source_arn' or 
# function_name: (required) Name of the Lambda function whose resource policy you are updating by adding a new 
# principal: (required) The principal who is getting this permission. It can be Amazon S3 service Principal 
# profile: Uses a boto profile. Only works with boto >= 2.24.0. 
# security_token: AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN 
# source_account: The AWS account ID (without a hyphen) of the source owner. For example, if the SourceArn identifies a 
# source_arn: This is optional; however, when granting Amazon S3 permission to invoke your function, you should 
# state: (required) Describes the desired state. 
# statement_id: (required) A unique statement identifier. 
# validate_certs: When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0. 
# version: Version of the Lambda function. Mutually exclusive with `alias'. 
}- name: ${2:Name for lambda_policy module.}
  lambda_policy:
${3:   ${4:action}: ${5:"#"}}
${6:   ${7:alias}: ${8:"#"}}
${9:   ${10:aws_access_key}: ${11:"#"}}
${12:   ${13:aws_secret_key}: ${14:"#"}}
${15:   ${16:ec2_url}: ${17:"#"}}
${18:   ${19:event_source_token}: ${20:"#"}}
${21:   ${22:function_name}: ${23:"#"}}
${24:   ${25:principal}: ${26:"#"}}
${27:   ${28:profile}: ${29:"#"}}
${30:   ${31:security_token}: ${32:"#"}}
${33:   ${34:source_account}: ${35:"#"}}
${36:   ${37:source_arn}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:statement_id}: ${44:"#"}}
${45:   ${46:validate_certs}: ${47:"#"}}
${48:   ${49:version}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>lambda_policy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
