<snippet>
<content><![CDATA[
${1:# admin_auth_configuration: Adminauthconfiguration settings for 
# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# controller: IP address or hostname of the controller. The 
# default_license_tier: Specifies the default license tier which would 
# dns_configuration: Dnsconfiguration settings for 
# dns_virtualservice_refs: Dns virtualservices hosting fqdn records for 
# docker_mode: Boolean flag to set docker_mode. Default value 
# email_configuration: Emailconfiguration settings for 
# global_tenant_config: Tenantconfiguration settings for 
# linux_configuration: Linuxconfiguration settings for 
# mgmt_ip_access_control: Configure ip access control for controller to 
# ntp_configuration: Ntpconfiguration settings for 
# password: Password of Avi user in Avi controller. The 
# portal_configuration: Portalconfiguration settings for 
# proxy_configuration: Proxyconfiguration settings for 
# snmp_configuration: Snmpconfiguration settings for 
# ssh_ciphers: Allowed ciphers list for ssh to the management 
# ssh_hmacs: Allowed hmac list for ssh to the management 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Unique object identifier of the object. 
}- name: ${2:Name for avi_systemconfiguration module.}
  avi_systemconfiguration:
${3:   ${4:admin_auth_configuration}: ${5:"#"}}
${6:   ${7:api_context}: ${8:"#"}}
${9:   ${10:api_version}: ${11:"#"}}
${12:   ${13:avi_api_patch_op}: ${14:"#"}}
${15:   ${16:avi_api_update_method}: ${17:"#"}}
${18:   ${19:avi_credentials}: ${20:"#"}}
${21:   ${22:controller}: ${23:"#"}}
${24:   ${25:default_license_tier}: ${26:"#"}}
${27:   ${28:dns_configuration}: ${29:"#"}}
${30:   ${31:dns_virtualservice_refs}: ${32:"#"}}
${33:   ${34:docker_mode}: ${35:"#"}}
${36:   ${37:email_configuration}: ${38:"#"}}
${39:   ${40:global_tenant_config}: ${41:"#"}}
${42:   ${43:linux_configuration}: ${44:"#"}}
${45:   ${46:mgmt_ip_access_control}: ${47:"#"}}
${48:   ${49:ntp_configuration}: ${50:"#"}}
${51:   ${52:password}: ${53:"#"}}
${54:   ${55:portal_configuration}: ${56:"#"}}
${57:   ${58:proxy_configuration}: ${59:"#"}}
${60:   ${61:snmp_configuration}: ${62:"#"}}
${63:   ${64:ssh_ciphers}: ${65:"#"}}
${66:   ${67:ssh_hmacs}: ${68:"#"}}
${69:   ${70:state}: ${71:"#"}}
${72:   ${73:tenant}: ${74:"#"}}
${75:   ${76:tenant_uuid}: ${77:"#"}}
${78:   ${79:url}: ${80:"#"}}
${81:   ${82:username}: ${83:"#"}}
${84:   ${85:uuid}: ${86:"#"}}
${87:${88:   become: ${89:true}} 
${90:   become_method: ${91:su}} 
${92:   become_user: ${93:nobody}} 
${94:   become_flags: ${95:"-s /bin/sh"}}} 
${96:   when: ${97:variable is defined}} 
${98:   with_items: ${99:array}} 
]]></content>
	<tabTrigger>avi_systemconfiguration</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
