<snippet>
<content><![CDATA[
${1:# cmd: List of commands assigned to the rule. If an empty list is passed all commands will be removed from the 
# cmdcategory: Command category the rule applies to. 
# cn: (required) Canonical name. Can not be changed as it is the unique identifier. 
# host: List of hosts assigned to the rule. If an empty list is passed all hosts will be removed from the rule. 
# hostcategory: Host category the rule applies to. If 'all' is passed one must omit `host' and `hostgroup'. Option 
# hostgroup: List of host groups assigned to the rule. If an empty list is passed all host groups will be removed 
# ipa_host: IP or hostname of IPA server 
# ipa_pass: (required) Password of administrative user 
# ipa_port: Port of IPA server 
# ipa_prot: Protocol used by IPA server 
# ipa_user: Administrative account used on IPA server 
# state: State to ensure 
# user: List of users assigned to the rule. If an empty list is passed all users will be removed from the rule. 
# usercategory: User category the rule applies to. 
# usergroup: List of user groups assigned to the rule. If an empty list is passed all user groups will be removed 
# validate_certs: This only applies if `ipa_prot' is `https'. If set to `no', the SSL certificates will not be validated. 
}- name: ${2:Name for ipa_sudorule module.}
  ipa_sudorule:
${3:   ${4:cmd}: ${5:"#"}}
${6:   ${7:cmdcategory}: ${8:"#"}}
${9:   ${10:cn}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:hostcategory}: ${17:"#"}}
${18:   ${19:hostgroup}: ${20:"#"}}
${21:   ${22:ipa_host}: ${23:"#"}}
${24:   ${25:ipa_pass}: ${26:"#"}}
${27:   ${28:ipa_port}: ${29:"#"}}
${30:   ${31:ipa_prot}: ${32:"#"}}
${33:   ${34:ipa_user}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:user}: ${41:"#"}}
${42:   ${43:usercategory}: ${44:"#"}}
${45:   ${46:usergroup}: ${47:"#"}}
${48:   ${49:validate_certs}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>ipa_sudorule</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
