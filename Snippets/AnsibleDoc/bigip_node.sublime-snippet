<snippet>
<content><![CDATA[
${1:# address: IP address of the node. This can be either IPv4 
# description: Specifies descriptive text that identifies the 
# fqdn: FQDN name of the node. This can be any name that 
# fqdn_address_type: Specifies whether the FQDN of the node resolves 
# fqdn_auto_populate: Specifies whether the system automatically 
# fqdn_down_interval: Specifies the interval in which a query occurs, 
# fqdn_up_interval: Specifies the interval in which a query occurs, 
# monitor_type: Monitor rule type when `monitors' is specified. 
# monitors: Specifies the health monitors that the system 
# name: (required) Specifies the name of the node. 
# partition: Device partition to manage resources on. 
# password: (required) The password for the user account 
# provider: A dict object containing connection details. 
# quorum: Monitor quorum value when `monitor_type' is 
# server: (required) The BIG-IP host. You can omit this 
# server_port: The BIG-IP server port. You can omit this option 
# state: Specifies the current state of the node. 
# user: (required) The username to connect to the BIG-IP 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for bigip_node module.}
  bigip_node:
${3:   ${4:address}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:fqdn}: ${11:"#"}}
${12:   ${13:fqdn_address_type}: ${14:"#"}}
${15:   ${16:fqdn_auto_populate}: ${17:"#"}}
${18:   ${19:fqdn_down_interval}: ${20:"#"}}
${21:   ${22:fqdn_up_interval}: ${23:"#"}}
${24:   ${25:monitor_type}: ${26:"#"}}
${27:   ${28:monitors}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:partition}: ${35:"#"}}
${36:   ${37:password}: ${38:"#"}}
${39:   ${40:provider}: ${41:"#"}}
${42:   ${43:quorum}: ${44:"#"}}
${45:   ${46:server}: ${47:"#"}}
${48:   ${49:server_port}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:user}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>bigip_node</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
