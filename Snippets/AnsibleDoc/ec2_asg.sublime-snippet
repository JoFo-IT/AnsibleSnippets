<snippet>
<content><![CDATA[
${1:# availability_zones: List of availability zone names in which to 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# default_cooldown: The number of seconds after a scaling activity 
# desired_capacity: Desired number of instances in group, if 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# health_check_period: Length of time in seconds after a new EC2 
# health_check_type: The service you want the health status from, 
# launch_config_name: Name of the Launch configuration to use for the 
# launch_template: Dictionary describing the Launch Template to use 
# lc_check: Check to make sure instances that are being 
# load_balancers: List of ELB names to use for the group. Use for 
# lt_check: Check to make sure instances that are being 
# max_size: Maximum number of instances in group, if 
# metrics_collection: Enable ASG metrics collection 
# metrics_granularity: When metrics_collection is enabled this will 
# metrics_list: List of autoscaling metrics to collect when 
# min_size: Minimum number of instances in group, if 
# name: (required) Unique name for group to be created 
# notification_topic: A SNS topic ARN to send auto scaling 
# notification_types: A list of auto scaling events to trigger 
# placement_group: Physical location of your cluster placement 
# profile: Uses a boto profile. Only works with boto >= 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# replace_all_instances: In a rolling fashion, replace all instances that 
# replace_batch_size: Number of instances you'd like to replace at a 
# replace_instances: List of instance_ids belonging to the named ASG 
# security_token: AWS STS security token. If not set then the 
# state: register or deregister the instance 
# suspend_processes: A list of scaling processes to suspend. 
# tags: A list of tags to add to the Auto Scale Group. 
# target_group_arns: List of target group ARNs to use for the group. 
# termination_policies: An ordered list of criteria used for selecting 
# validate_certs: When set to "no", SSL certificates will not be 
# vpc_zone_identifier: List of VPC subnets to use 
# wait_for_instances: Wait for the ASG instances to be in a ready 
# wait_timeout: How long to wait for instances to become viable 
}- name: ${2:Name for ec2_asg module.}
  ec2_asg:
${3:   ${4:availability_zones}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_secret_key}: ${11:"#"}}
${12:   ${13:debug_botocore_endpoint_logs}: ${14:"#"}}
${15:   ${16:default_cooldown}: ${17:"#"}}
${18:   ${19:desired_capacity}: ${20:"#"}}
${21:   ${22:ec2_url}: ${23:"#"}}
${24:   ${25:health_check_period}: ${26:"#"}}
${27:   ${28:health_check_type}: ${29:"#"}}
${30:   ${31:launch_config_name}: ${32:"#"}}
${33:   ${34:launch_template}: ${35:"#"}}
${36:   ${37:lc_check}: ${38:"#"}}
${39:   ${40:load_balancers}: ${41:"#"}}
${42:   ${43:lt_check}: ${44:"#"}}
${45:   ${46:max_size}: ${47:"#"}}
${48:   ${49:metrics_collection}: ${50:"#"}}
${51:   ${52:metrics_granularity}: ${53:"#"}}
${54:   ${55:metrics_list}: ${56:"#"}}
${57:   ${58:min_size}: ${59:"#"}}
${60:   ${61:name}: ${62:"#"}}
${63:   ${64:notification_topic}: ${65:"#"}}
${66:   ${67:notification_types}: ${68:"#"}}
${69:   ${70:placement_group}: ${71:"#"}}
${72:   ${73:profile}: ${74:"#"}}
${75:   ${76:region}: ${77:"#"}}
${78:   ${79:}: ${80:"#"}}
${81:   ${82:replace_all_instances}: ${83:"#"}}
${84:   ${85:replace_batch_size}: ${86:"#"}}
${87:   ${88:replace_instances}: ${89:"#"}}
${90:   ${91:security_token}: ${92:"#"}}
${93:   ${94:state}: ${95:"#"}}
${96:   ${97:suspend_processes}: ${98:"#"}}
${99:   ${100:tags}: ${101:"#"}}
${102:   ${103:target_group_arns}: ${104:"#"}}
${105:   ${106:termination_policies}: ${107:"#"}}
${108:   ${109:validate_certs}: ${110:"#"}}
${111:   ${112:vpc_zone_identifier}: ${113:"#"}}
${114:   ${115:wait_for_instances}: ${116:"#"}}
${117:   ${118:wait_timeout}: ${119:"#"}}
${120:${121:   become: ${122:true}} 
${123:   become_method: ${124:su}} 
${125:   become_user: ${126:nobody}} 
${127:   become_flags: ${128:"-s /bin/sh"}}} 
${129:   when: ${130:variable is defined}} 
${131:   with_items: ${132:array}} 
]]></content>
	<tabTrigger>ec2_asg</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
