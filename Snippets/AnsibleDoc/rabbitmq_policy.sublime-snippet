<snippet>
<content><![CDATA[
${1:# apply_to: What the policy applies to. Requires RabbitMQ 
# name: (required) The name of the policy to manage. 
# node: Erlang node name of the rabbit we wish to 
# pattern: A regex of queues to apply the policy to. 
# priority: The priority of the policy. 
# state: The state of the policy. 
# tags: A dict or string describing the policy. Required 
# vhost: The name of the vhost to apply to. 
}- name: ${2:Name for rabbitmq_policy module.}
  rabbitmq_policy:
${3:   ${4:apply_to}: ${5:"#"}}
${6:   ${7:name}: ${8:"#"}}
${9:   ${10:node}: ${11:"#"}}
${12:   ${13:pattern}: ${14:"#"}}
${15:   ${16:priority}: ${17:"#"}}
${18:   ${19:state}: ${20:"#"}}
${21:   ${22:tags}: ${23:"#"}}
${24:   ${25:vhost}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>rabbitmq_policy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
