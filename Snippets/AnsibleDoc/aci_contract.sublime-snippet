<snippet>
<content><![CDATA[
${1:# certificate_name: The X.509 certificate name attached to the APIC 
# contract: (required) The name of the contract. 
# description: Description for the contract. 
# dscp: The target Differentiated Service (DSCP) value. 
# host: (required) IP Address or hostname of APIC 
# output_level: Influence the output of this ACI module. 
# password: (required) The password to use for 
# port: Port number to be used for REST connection. The 
# priority: The desired QoS class to be used. The APIC 
# private_key: (required) PEM formatted file that contains your 
# scope: The scope of a service contract. The APIC 
# state: Use `present' or `absent' for adding or 
# tenant: (required) The name of the tenant. 
# timeout: The socket level timeout in seconds. 
# use_proxy: If `no', it will not use a proxy, even if one is 
# use_ssl: If `no', an HTTP connection will be used instead 
# username: The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for aci_contract module.}
  aci_contract:
${3:   ${4:certificate_name}: ${5:"#"}}
${6:   ${7:contract}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:dscp}: ${14:"#"}}
${15:   ${16:host}: ${17:"#"}}
${18:   ${19:output_level}: ${20:"#"}}
${21:   ${22:password}: ${23:"#"}}
${24:   ${25:port}: ${26:"#"}}
${27:   ${28:priority}: ${29:"#"}}
${30:   ${31:private_key}: ${32:"#"}}
${33:   ${34:scope}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:tenant}: ${41:"#"}}
${42:   ${43:timeout}: ${44:"#"}}
${45:   ${46:use_proxy}: ${47:"#"}}
${48:   ${49:use_ssl}: ${50:"#"}}
${51:   ${52:username}: ${53:"#"}}
${54:   ${55:validate_certs}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>aci_contract</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
