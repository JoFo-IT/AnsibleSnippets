<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# config_drive: Attach read-only configuration drive to server as label config-2 
# cooldown: The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. 
# credentials: File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided. 
# disk_config: Disk partitioning strategy 
# env: Environment as configured in `~/.pyrax.cfg', see 
# : pyrax-configuration. 
# files: Files to insert into the instance. Hash of `remotepath: localpath' 
# flavor: (required) flavor to use for the instance 
# image: (required) image to use for the instance. Can be an `id', `human_id' or `name' 
# key_name: key pair to use on the instance 
# loadbalancers: List of load balancer `id' and `port' hashes 
# max_entities: (required) The maximum number of entities that are allowed in the scaling group. Must be an integer 
# meta: A hash of metadata to associate with the instance 
# min_entities: (required) The minimum number of entities that are allowed in the scaling group. Must be an integer 
# name: (required) Name to give the scaling group 
# networks: The network to attach to the instances. If specified, you must include ALL networks including the public 
# region: Region to create an instance in. 
# server_name: (required) The base name for servers created by Autoscale 
# state: Indicate desired state of the resource 
# user_data: Data to be uploaded to the servers config drive. This option implies `config_drive'. Can be a file path 
# username: Rackspace username, overrides `credentials'. 
# verify_ssl: Whether or not to require SSL validation of API endpoints. 
# wait: wait for the scaling group to finish provisioning the minimum amount of servers 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for rax_scaling_group module.}
  rax_scaling_group:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:config_drive}: ${8:"#"}}
${9:   ${10:cooldown}: ${11:"#"}}
${12:   ${13:credentials}: ${14:"#"}}
${15:   ${16:disk_config}: ${17:"#"}}
${18:   ${19:env}: ${20:"#"}}
${21:   ${22:}: ${23:"#"}}
${24:   ${25:files}: ${26:"#"}}
${27:   ${28:flavor}: ${29:"#"}}
${30:   ${31:image}: ${32:"#"}}
${33:   ${34:key_name}: ${35:"#"}}
${36:   ${37:loadbalancers}: ${38:"#"}}
${39:   ${40:max_entities}: ${41:"#"}}
${42:   ${43:meta}: ${44:"#"}}
${45:   ${46:min_entities}: ${47:"#"}}
${48:   ${49:name}: ${50:"#"}}
${51:   ${52:networks}: ${53:"#"}}
${54:   ${55:region}: ${56:"#"}}
${57:   ${58:server_name}: ${59:"#"}}
${60:   ${61:state}: ${62:"#"}}
${63:   ${64:user_data}: ${65:"#"}}
${66:   ${67:username}: ${68:"#"}}
${69:   ${70:verify_ssl}: ${71:"#"}}
${72:   ${73:wait}: ${74:"#"}}
${75:   ${76:wait_timeout}: ${77:"#"}}
${78:${79:   become: ${80:true}} 
${81:   become_method: ${82:su}} 
${83:   become_user: ${84:nobody}} 
${85:   become_flags: ${86:"-s /bin/sh"}}} 
${87:   when: ${88:variable is defined}} 
${89:   with_items: ${90:array}} 
]]></content>
	<tabTrigger>rax_scaling_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
