<snippet>
<content><![CDATA[
${1:#api_key = Rackspace API key (overrides `credentials')
#config_drive = Attach read-only configuration drive to server as label config-2
#cooldown = The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be
#credentials = File to find the Rackspace credentials in (ignored if `api_key' and `username' are provided)
#disk_config = Disk partitioning strategy
#env = Environment as configured in ~/.pyrax.cfg, see
#https = pyrax-
#files = Files to insert into the instance. Hash of `remotepath: localpath'
#flavor = flavor to use for the instance
#image = image to use for the instance. Can be an `id', `human_id' or `name'
#key_name = key pair to use on the instance
#loadbalancers = List of load balancer `id' and `port' hashes
#max_entities = The maximum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000.
#meta = A hash of metadata to associate with the instance
#min_entities = The minimum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000.
#name = Name to give the scaling group
#networks = The network to attach to the instances. If specified, you must include ALL networks including the public and
#region = Region to create an instance in
#server_name = The base name for servers created by Autoscale
#state = Indicate desired state of the resource
#user_data = Data to be uploaded to the servers config drive. This option implies `config_drive'. Can be a file path or a
#username = Rackspace username (overrides `credentials')
#verify_ssl = Whether or not to require SSL validation of API endpoints
#wait = wait for the scaling group to finish provisioning the minimum amount of servers
#wait_timeout = how long before wait gives up, in seconds
}- name: ${2:Name for rax_scaling_group module.}
${3:  become: ${4:yes}}
  rax_scaling_group: ${5:api_key=${6: } }${7:config_drive=${8: } }${9:cooldown=${10: } }${11:credentials=${12: } }${13:disk_config=${14: } }${15:env=${16: } }${17:https=${18: } }${19:files=${20: } }${21:flavor=${22: } }${23:image=${24: } }${25:key_name=${26: } }${27:loadbalancers=${28: } }${29:max_entities=${30: } }${31:meta=${32: } }${33:min_entities=${34: } }${35:name=${36: } }${37:networks=${38: } }${39:region=${40: } }${41:server_name=${42: } }${43:state=${44: } }${45:user_data=${46: } }${47:username=${48: } }${49:verify_ssl=${50: } }${51:wait=${52: } }${53:wait_timeout=${54: } }
${55:  when: ${56: variable is defined}}
${57:  with_items: ${58: array}}
]]></content>
	<tabTrigger>rax_scaling_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
