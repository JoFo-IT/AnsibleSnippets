<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# config_drive: Attach read-only configuration drive to server 
# cooldown: The period of time, in seconds, that must pass 
# credentials: File to find the Rackspace credentials in. 
# disk_config: Disk partitioning strategy 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# files: Files to insert into the instance. Hash of 
# flavor: (required) flavor to use for the instance 
# identity_type: Authentication mechanism to use, such as 
# image: (required) image to use for the instance. Can be 
# key_name: key pair to use on the instance 
# loadbalancers: List of load balancer `id' and `port' hashes 
# max_entities: (required) The maximum number of entities that 
# meta: A hash of metadata to associate with the 
# min_entities: (required) The minimum number of entities that 
# name: (required) Name to give the scaling group 
# networks: The network to attach to the instances. If 
# region: Region to create an instance in. 
# server_name: (required) The base name for servers created by 
# state: Indicate desired state of the resource 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# user_data: Data to be uploaded to the servers config drive. 
# username: Rackspace username, overrides `credentials'. 
# validate_certs: Whether or not to require SSL validation of API 
# wait: wait for the scaling group to finish 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for rax_scaling_group module.}
  rax_scaling_group:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:auth_endpoint}: ${8:"#"}}
${9:   ${10:config_drive}: ${11:"#"}}
${12:   ${13:cooldown}: ${14:"#"}}
${15:   ${16:credentials}: ${17:"#"}}
${18:   ${19:disk_config}: ${20:"#"}}
${21:   ${22:env}: ${23:"#"}}
${24:   ${25:md}: ${26:"#"}}
${27:   ${28:files}: ${29:"#"}}
${30:   ${31:flavor}: ${32:"#"}}
${33:   ${34:identity_type}: ${35:"#"}}
${36:   ${37:image}: ${38:"#"}}
${39:   ${40:key_name}: ${41:"#"}}
${42:   ${43:loadbalancers}: ${44:"#"}}
${45:   ${46:max_entities}: ${47:"#"}}
${48:   ${49:meta}: ${50:"#"}}
${51:   ${52:min_entities}: ${53:"#"}}
${54:   ${55:name}: ${56:"#"}}
${57:   ${58:networks}: ${59:"#"}}
${60:   ${61:region}: ${62:"#"}}
${63:   ${64:server_name}: ${65:"#"}}
${66:   ${67:state}: ${68:"#"}}
${69:   ${70:tenant_id}: ${71:"#"}}
${72:   ${73:tenant_name}: ${74:"#"}}
${75:   ${76:user_data}: ${77:"#"}}
${78:   ${79:username}: ${80:"#"}}
${81:   ${82:validate_certs}: ${83:"#"}}
${84:   ${85:wait}: ${86:"#"}}
${87:   ${88:wait_timeout}: ${89:"#"}}
${90:${91:   become: ${92:true}} 
${93:   become_method: ${94:su}} 
${95:   become_user: ${96:nobody}} 
${97:   become_flags: ${98:"-s /bin/sh"}}} 
${99:   when: ${100:variable is defined}} 
${101:   with_items: ${102:array}} 
]]></content>
	<tabTrigger>rax_scaling_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
