<snippet>
<content><![CDATA[
${1:#api_timeout = How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be
#auth = Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password'
#auth_type = Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the
#availability_zone = Name of the availability zone.
#cacert = A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
#cert = A path to a client certificate to use as part of the SSL transaction
#cloud = Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is not needed
#endpoint_type = Endpoint URL type to fetch from the service catalog.
#key = A path to a client key to use as part of the SSL transaction
#name = Name that has to be given to the key pair
#public_key = The public key that would be uploaded to nova and injected into VMs upon creation.
#public_key_file = Path to local file containing ssh public key. Mutually exclusive with public_key.
#region_name = Name of the region.
#state = Should the resource be present or absent.
#timeout = How long should ansible wait for the requested resource.
#validate_certs = Whether or not SSL API requests should be verified.
#wait = Should ansible wait until the requested resource is complete.
}- name: ${2:Name for os_keypair module.}
${3:  become: ${4:yes}}
  os_keypair: ${5:api_timeout=${6: } }${7:auth=${8: } }${9:auth_type=${10: } }${11:availability_zone=${12: } }${13:cacert=${14: } }${15:cert=${16: } }${17:cloud=${18: } }${19:endpoint_type=${20: } }${21:key=${22: } }${23:name=${24: } }${25:public_key=${26: } }${27:public_key_file=${28: } }${29:region_name=${30: } }${31:state=${32: } }${33:timeout=${34: } }${35:validate_certs=${36: } }${37:wait=${38: } }
${39:  when: ${40: variable is defined}}
${41:  with_items: ${42: array}}
]]></content>
	<tabTrigger>os_keypair</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
