<snippet>
<content><![CDATA[
${1:# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# avi_disable_session_cache_as_fact: It disables avi session information to be cached 
# controller: IP address or hostname of the controller. The 
# created_by: Creator name. Field introduced in 
# datascript: Datascripts to execute. 
# description: User defined description for the object. 
# ipgroup_refs: Uuid of ip groups that could be referred by 
# name: (required) Name for the virtual service 
# password: Password of Avi user in Avi controller. The 
# pool_group_refs: Uuid of pool groups that could be referred by 
# pool_refs: Uuid of pools that could be referred by 
# protocol_parser_refs: List of protocol parsers that could be referred 
# state: The state that should be applied on the entity. 
# string_group_refs: Uuid of string groups that could be referred by 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Uuid of the virtual service datascript 
}- name: ${2:Name for avi_vsdatascriptset module.}
  avi_vsdatascriptset:
${3:   ${4:api_context}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:avi_api_patch_op}: ${11:"#"}}
${12:   ${13:avi_api_update_method}: ${14:"#"}}
${15:   ${16:avi_credentials}: ${17:"#"}}
${18:   ${19:avi_disable_session_cache_as_fact}: ${20:"#"}}
${21:   ${22:controller}: ${23:"#"}}
${24:   ${25:created_by}: ${26:"#"}}
${27:   ${28:datascript}: ${29:"#"}}
${30:   ${31:description}: ${32:"#"}}
${33:   ${34:ipgroup_refs}: ${35:"#"}}
${36:   ${37:name}: ${38:"#"}}
${39:   ${40:password}: ${41:"#"}}
${42:   ${43:pool_group_refs}: ${44:"#"}}
${45:   ${46:pool_refs}: ${47:"#"}}
${48:   ${49:protocol_parser_refs}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:string_group_refs}: ${56:"#"}}
${57:   ${58:tenant}: ${59:"#"}}
${60:   ${61:tenant_ref}: ${62:"#"}}
${63:   ${64:tenant_uuid}: ${65:"#"}}
${66:   ${67:url}: ${68:"#"}}
${69:   ${70:username}: ${71:"#"}}
${72:   ${73:uuid}: ${74:"#"}}
${75:${76:   become: ${77:true}} 
${78:   become_method: ${79:su}} 
${80:   become_user: ${81:nobody}} 
${82:   become_flags: ${83:"-s /bin/sh"}}} 
${84:   when: ${85:variable is defined}} 
${86:   with_items: ${87:array}} 
]]></content>
	<tabTrigger>avi_vsdatascriptset</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
