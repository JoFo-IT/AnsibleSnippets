<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to create HTTP/HTTPS connection to oVirt: 
# cluster: Name of the cluster where vms and hosts resides. 
# fetch_nested: If `True' the module will fetch additional data from the API. It will fetch IDs of the VMs disks, 
# hosts: List of the hosts names, which should have assigned this affinity label. 
# name: (required) Name of the affinity label to manage. 
# nested_attributes: Specifies list of the attributes which should be fetched from the API. This parameter apply only when 
# poll_interval: Number of the seconds the module waits until another poll request on entity status is sent. 
# state: Should the affinity label be present or absent. 
# timeout: The amount of time in seconds the module should wait for the instance to get into desired state. 
# vms: List of the VMs names, which should have assigned this affinity label. 
# wait: `True' if the module should wait for the entity to get into desired state. 
}- name: ${2:Name for ovirt_affinity_label module.}
  ovirt_affinity_label:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:cluster}: ${8:"#"}}
${9:   ${10:fetch_nested}: ${11:"#"}}
${12:   ${13:hosts}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:nested_attributes}: ${20:"#"}}
${21:   ${22:poll_interval}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:timeout}: ${29:"#"}}
${30:   ${31:vms}: ${32:"#"}}
${33:   ${34:wait}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>ovirt_affinity_label</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
