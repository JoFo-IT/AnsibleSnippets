<snippet>
<content><![CDATA[
${1:# cert_content: When used instead of 'cert_src', sets the contents of a certificate directly to the specified value. 
# cert_src: This is the local filename of the certificate. Either one of `key_src', `key_content', `cert_src' or 
# key_content: When used instead of 'key_src', sets the contents of a certificate key directly to the specified value. 
# key_src: This is the local filename of the private key. Either one of `key_src', `key_content', `cert_src' or 
# name: (required) SSL Certificate Name.  This is the cert/key pair name used when importing a certificate/key 
# passphrase: Passphrase on certificate private key 
# password: (required) The password for the user account used to connect to the BIG-IP. This option can be omitted 
# server: (required) The BIG-IP host. This option can be omitted if the environment variable `F5_SERVER' is set. 
# server_port: The BIG-IP server port. This option can be omitted if the environment variable `F5_SERVER_PORT' is set. 
# state: Certificate and key state. This determines if the provided certificate and key is to be made `present' 
# user: (required) The username to connect to the BIG-IP with. This user must have administrative privileges on 
# validate_certs: If `no', SSL certificates will not be validated. This should only be used on personally controlled sites 
}- name: ${2:Name for bigip_ssl_certificate module.}
  bigip_ssl_certificate:
${3:   ${4:cert_content}: ${5:"#"}}
${6:   ${7:cert_src}: ${8:"#"}}
${9:   ${10:key_content}: ${11:"#"}}
${12:   ${13:key_src}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:passphrase}: ${20:"#"}}
${21:   ${22:password}: ${23:"#"}}
${24:   ${25:server}: ${26:"#"}}
${27:   ${28:server_port}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:user}: ${35:"#"}}
${36:   ${37:validate_certs}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>bigip_ssl_certificate</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
