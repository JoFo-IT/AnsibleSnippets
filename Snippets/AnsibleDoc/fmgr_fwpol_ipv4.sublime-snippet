<snippet>
<content><![CDATA[
${1:# action: Policy action (allow/deny/ipsec). choice | deny 
# adom: The ADOM the configuration should belong to. 
# app_category: Application category ID list. 
# app_group: Application group names. 
# application: Application ID list. 
# application_list: Name of an existing Application list. 
# auth_cert: HTTPS server certificate for policy 
# auth_path: Enable/disable authentication-based routing. 
# auth_redirect_addr: HTTP-to-HTTPS redirect address for firewall 
# auto_asic_offload: Enable/disable offloading security profile 
# av_profile: Name of an existing Antivirus profile. 
# block_notification: Enable/disable block notification. choice | 
# captive_portal_exempt: Enable to exempt some users from the captive 
# capture_packet: Enable/disable capture packets. choice | disable 
# comments: Comment. 
# custom_log_fields: Custom fields to append to log messages for this 
# delay_tcp_npu_session: Enable TCP NPU session delay to guarantee packet 
# devices: Names of devices or device groups that can be 
# diffserv_forward: Enable to change packet's DiffServ values to the 
# diffserv_reverse: Enable to change packet's reverse (reply) 
# diffservcode_forward: Change packet's DiffServ to this value. 
# diffservcode_rev: Change packet's reverse (reply) DiffServ to this 
# disclaimer: Enable/disable user authentication disclaimer. 
# dlp_sensor: Name of an existing DLP sensor. 
# dnsfilter_profile: Name of an existing DNS filter profile. 
# dscp_match: Enable DSCP check. choice | disable | Disable 
# dscp_negate: Enable negated DSCP match. choice | disable | 
# dscp_value: DSCP value. 
# dsri: Enable DSRI to ignore HTTP server responses. 
# dstaddr: Destination address and address group names. 
# dstaddr_negate: When enabled dstaddr specifies what the 
# dstintf: Outgoing (egress) interface. 
# fail_on_missing_dependency: Normal behavior is to "skip" tasks that fail 
# firewall_session_dirty: How to handle sessions if the configuration of 
# fixedport: Enable to prevent source NAT from changing a 
# fsso: Enable/disable Fortinet Single Sign-On. choice | 
# fsso_agent_for_ntlm: FSSO agent to use for NTLM authentication. 
# global_label: Label for the policy that appears when the GUI 
# groups: Names of user groups that can authenticate with 
# gtp_profile: GTP profile. 
# icap_profile: Name of an existing ICAP profile. 
# identity_based_route: Name of identity-based routing rule. 
# inbound: Policy-based IPsec VPN |  only traffic from the 
# internet_service: Enable/disable use of Internet Services for this 
# internet_service_custom: Custom Internet Service name. 
# internet_service_id: Internet Service ID. 
# internet_service_negate: When enabled internet-service specifies what the 
# internet_service_src: Enable/disable use of Internet Services in 
# internet_service_src_custom: Custom Internet Service source name. 
# internet_service_src_id: Internet Service source ID. 
# internet_service_src_negate: When enabled internet-service-src specifies what 
# ippool: Enable to use IP Pools for source NAT. choice | 
# ips_sensor: Name of an existing IPS sensor. 
# label: Label for the policy that appears when the GUI 
# learning_mode: Enable to allow everything, but log all of the 
# logtraffic: Enable or disable logging. Log all sessions or 
# logtraffic_start: Record logs when a session starts and ends. 
# match_vip: Enable to match packets that have had their 
# mms_profile: Name of an existing MMS profile. 
# mode: Sets one of three modes for managing the object. 
# name: Policy name. 
# nat: Enable/disable source NAT. choice | disable | 
# natinbound: Policy-based IPsec VPN |  apply destination NAT 
# natip: Policy-based IPsec VPN |  source NAT IP address 
# natoutbound: Policy-based IPsec VPN |  apply source NAT to 
# np_acceleration: Enable/disable UTM Network Processor 
# ntlm: Enable/disable NTLM authentication. choice | 
# ntlm_enabled_browsers: HTTP-User-Agent value of supported browsers. 
# ntlm_guest: Enable/disable NTLM guest user access. choice | 
# outbound: Policy-based IPsec VPN |  only traffic from the 
# package_name: The policy package you want to modify 
# per_ip_shaper: Per-IP traffic shaper. 
# permit_any_host: Accept UDP packets from any host. choice | 
# permit_stun_host: Accept UDP packets from any Session Traversal 
# policyid: Policy ID. 
# poolname: IP Pool names. 
# profile_group: Name of profile group. 
# profile_protocol_options: Name of an existing Protocol options profile. 
# profile_type: Determine whether the firewall policy allows 
# radius_mac_auth_bypass: Enable MAC authentication bypass. The bypassed 
# redirect_url: URL users are directed to after seeing and 
# replacemsg_override_group: Override the default replacement message group 
# rsso: Enable/disable RADIUS single sign-on (RSSO). 
# rtp_addr: Address names if this is an RTP NAT policy. 
# rtp_nat: Enable Real Time Protocol (RTP) NAT. choice | 
# scan_botnet_connections: Block or monitor connections to Botnet servers 
# schedule: Schedule name. 
# schedule_timeout: Enable to force current sessions to end when the 
# send_deny_packet: Enable to send a reply when a session is denied 
# service: Service and service group names. 
# service_negate: When enabled service specifies what the service 
# session_ttl: TTL in seconds for sessions accepted by this 
# spamfilter_profile: Name of an existing Spam filter profile. 
# srcaddr: Source address and address group names. 
# srcaddr_negate: When enabled srcaddr specifies what the source 
# srcintf: Incoming (ingress) interface. 
# ssh_filter_profile: Name of an existing SSH filter profile. 
# ssl_mirror: Enable to copy decrypted SSL traffic to a 
# ssl_mirror_intf: SSL mirror interface name. 
# ssl_ssh_profile: Name of an existing SSL SSH profile. 
# status: Enable or disable this policy. choice | disable 
# tcp_mss_receiver: Receiver TCP maximum segment size (MSS). 
# tcp_mss_sender: Sender TCP maximum segment size (MSS). 
# tcp_session_without_syn: Enable/disable creation of TCP session without 
# timeout_send_rst: Enable/disable sending RST packets when TCP 
# traffic_shaper: Traffic shaper. 
# traffic_shaper_reverse: Reverse traffic shaper. 
# url_category: URL category ID list. 
# users: Names of individual users that can authenticate 
# utm_status: Enable to add one or more security profiles (AV, 
# vlan_cos_fwd: VLAN forward direction user priority | 255 
# vlan_cos_rev: VLAN reverse direction user priority | 255 
# vlan_filter: Set VLAN filters. 
# voip_profile: Name of an existing VoIP profile. 
# vpn_dst_node: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# vpn_dst_node_host: VPN Destination Node Host. 
# vpn_dst_node_seq: VPN Destination Node Seq. 
# vpn_dst_node_subnet: VPN Destination Node Seq. 
# vpn_src_node: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# vpn_src_node_host: VPN Source Node Host. 
# vpn_src_node_seq: VPN Source Node Seq. 
# vpn_src_node_subnet: VPN Source Node. 
# vpntunnel: Policy-based IPsec VPN |  name of the IPsec VPN 
# waf_profile: Name of an existing Web application firewall 
# wanopt: Enable/disable WAN optimization. choice | 
# wanopt_detection: WAN optimization auto-detection mode. choice | 
# wanopt_passive_opt: WAN optimization passive mode options. This 
# wanopt_peer: WAN optimization peer. 
# wanopt_profile: WAN optimization profile. 
# wccp: Enable/disable forwarding traffic matching this 
# webcache: Enable/disable web cache. choice | disable | 
# webcache_https: Enable/disable web cache for HTTPS. choice | 
# webfilter_profile: Name of an existing Web filter profile. 
# wsso: Enable/disable WiFi Single Sign On (WSSO). 
}- name: ${2:Name for fmgr_fwpol_ipv4 module.}
  fmgr_fwpol_ipv4:
${3:   ${4:action}: ${5:"#"}}
${6:   ${7:adom}: ${8:"#"}}
${9:   ${10:app_category}: ${11:"#"}}
${12:   ${13:app_group}: ${14:"#"}}
${15:   ${16:application}: ${17:"#"}}
${18:   ${19:application_list}: ${20:"#"}}
${21:   ${22:auth_cert}: ${23:"#"}}
${24:   ${25:auth_path}: ${26:"#"}}
${27:   ${28:auth_redirect_addr}: ${29:"#"}}
${30:   ${31:auto_asic_offload}: ${32:"#"}}
${33:   ${34:av_profile}: ${35:"#"}}
${36:   ${37:block_notification}: ${38:"#"}}
${39:   ${40:captive_portal_exempt}: ${41:"#"}}
${42:   ${43:capture_packet}: ${44:"#"}}
${45:   ${46:comments}: ${47:"#"}}
${48:   ${49:custom_log_fields}: ${50:"#"}}
${51:   ${52:delay_tcp_npu_session}: ${53:"#"}}
${54:   ${55:devices}: ${56:"#"}}
${57:   ${58:diffserv_forward}: ${59:"#"}}
${60:   ${61:diffserv_reverse}: ${62:"#"}}
${63:   ${64:diffservcode_forward}: ${65:"#"}}
${66:   ${67:diffservcode_rev}: ${68:"#"}}
${69:   ${70:disclaimer}: ${71:"#"}}
${72:   ${73:dlp_sensor}: ${74:"#"}}
${75:   ${76:dnsfilter_profile}: ${77:"#"}}
${78:   ${79:dscp_match}: ${80:"#"}}
${81:   ${82:dscp_negate}: ${83:"#"}}
${84:   ${85:dscp_value}: ${86:"#"}}
${87:   ${88:dsri}: ${89:"#"}}
${90:   ${91:dstaddr}: ${92:"#"}}
${93:   ${94:dstaddr_negate}: ${95:"#"}}
${96:   ${97:dstintf}: ${98:"#"}}
${99:   ${100:fail_on_missing_dependency}: ${101:"#"}}
${102:   ${103:firewall_session_dirty}: ${104:"#"}}
${105:   ${106:fixedport}: ${107:"#"}}
${108:   ${109:fsso}: ${110:"#"}}
${111:   ${112:fsso_agent_for_ntlm}: ${113:"#"}}
${114:   ${115:global_label}: ${116:"#"}}
${117:   ${118:groups}: ${119:"#"}}
${120:   ${121:gtp_profile}: ${122:"#"}}
${123:   ${124:icap_profile}: ${125:"#"}}
${126:   ${127:identity_based_route}: ${128:"#"}}
${129:   ${130:inbound}: ${131:"#"}}
${132:   ${133:internet_service}: ${134:"#"}}
${135:   ${136:internet_service_custom}: ${137:"#"}}
${138:   ${139:internet_service_id}: ${140:"#"}}
${141:   ${142:internet_service_negate}: ${143:"#"}}
${144:   ${145:internet_service_src}: ${146:"#"}}
${147:   ${148:internet_service_src_custom}: ${149:"#"}}
${150:   ${151:internet_service_src_id}: ${152:"#"}}
${153:   ${154:internet_service_src_negate}: ${155:"#"}}
${156:   ${157:ippool}: ${158:"#"}}
${159:   ${160:ips_sensor}: ${161:"#"}}
${162:   ${163:label}: ${164:"#"}}
${165:   ${166:learning_mode}: ${167:"#"}}
${168:   ${169:logtraffic}: ${170:"#"}}
${171:   ${172:logtraffic_start}: ${173:"#"}}
${174:   ${175:match_vip}: ${176:"#"}}
${177:   ${178:mms_profile}: ${179:"#"}}
${180:   ${181:mode}: ${182:"#"}}
${183:   ${184:name}: ${185:"#"}}
${186:   ${187:nat}: ${188:"#"}}
${189:   ${190:natinbound}: ${191:"#"}}
${192:   ${193:natip}: ${194:"#"}}
${195:   ${196:natoutbound}: ${197:"#"}}
${198:   ${199:np_acceleration}: ${200:"#"}}
${201:   ${202:ntlm}: ${203:"#"}}
${204:   ${205:ntlm_enabled_browsers}: ${206:"#"}}
${207:   ${208:ntlm_guest}: ${209:"#"}}
${210:   ${211:outbound}: ${212:"#"}}
${213:   ${214:package_name}: ${215:"#"}}
${216:   ${217:per_ip_shaper}: ${218:"#"}}
${219:   ${220:permit_any_host}: ${221:"#"}}
${222:   ${223:permit_stun_host}: ${224:"#"}}
${225:   ${226:policyid}: ${227:"#"}}
${228:   ${229:poolname}: ${230:"#"}}
${231:   ${232:profile_group}: ${233:"#"}}
${234:   ${235:profile_protocol_options}: ${236:"#"}}
${237:   ${238:profile_type}: ${239:"#"}}
${240:   ${241:radius_mac_auth_bypass}: ${242:"#"}}
${243:   ${244:redirect_url}: ${245:"#"}}
${246:   ${247:replacemsg_override_group}: ${248:"#"}}
${249:   ${250:rsso}: ${251:"#"}}
${252:   ${253:rtp_addr}: ${254:"#"}}
${255:   ${256:rtp_nat}: ${257:"#"}}
${258:   ${259:scan_botnet_connections}: ${260:"#"}}
${261:   ${262:schedule}: ${263:"#"}}
${264:   ${265:schedule_timeout}: ${266:"#"}}
${267:   ${268:send_deny_packet}: ${269:"#"}}
${270:   ${271:service}: ${272:"#"}}
${273:   ${274:service_negate}: ${275:"#"}}
${276:   ${277:session_ttl}: ${278:"#"}}
${279:   ${280:spamfilter_profile}: ${281:"#"}}
${282:   ${283:srcaddr}: ${284:"#"}}
${285:   ${286:srcaddr_negate}: ${287:"#"}}
${288:   ${289:srcintf}: ${290:"#"}}
${291:   ${292:ssh_filter_profile}: ${293:"#"}}
${294:   ${295:ssl_mirror}: ${296:"#"}}
${297:   ${298:ssl_mirror_intf}: ${299:"#"}}
${300:   ${301:ssl_ssh_profile}: ${302:"#"}}
${303:   ${304:status}: ${305:"#"}}
${306:   ${307:tcp_mss_receiver}: ${308:"#"}}
${309:   ${310:tcp_mss_sender}: ${311:"#"}}
${312:   ${313:tcp_session_without_syn}: ${314:"#"}}
${315:   ${316:timeout_send_rst}: ${317:"#"}}
${318:   ${319:traffic_shaper}: ${320:"#"}}
${321:   ${322:traffic_shaper_reverse}: ${323:"#"}}
${324:   ${325:url_category}: ${326:"#"}}
${327:   ${328:users}: ${329:"#"}}
${330:   ${331:utm_status}: ${332:"#"}}
${333:   ${334:vlan_cos_fwd}: ${335:"#"}}
${336:   ${337:vlan_cos_rev}: ${338:"#"}}
${339:   ${340:vlan_filter}: ${341:"#"}}
${342:   ${343:voip_profile}: ${344:"#"}}
${345:   ${346:vpn_dst_node}: ${347:"#"}}
${348:   ${349:vpn_dst_node_host}: ${350:"#"}}
${351:   ${352:vpn_dst_node_seq}: ${353:"#"}}
${354:   ${355:vpn_dst_node_subnet}: ${356:"#"}}
${357:   ${358:vpn_src_node}: ${359:"#"}}
${360:   ${361:vpn_src_node_host}: ${362:"#"}}
${363:   ${364:vpn_src_node_seq}: ${365:"#"}}
${366:   ${367:vpn_src_node_subnet}: ${368:"#"}}
${369:   ${370:vpntunnel}: ${371:"#"}}
${372:   ${373:waf_profile}: ${374:"#"}}
${375:   ${376:wanopt}: ${377:"#"}}
${378:   ${379:wanopt_detection}: ${380:"#"}}
${381:   ${382:wanopt_passive_opt}: ${383:"#"}}
${384:   ${385:wanopt_peer}: ${386:"#"}}
${387:   ${388:wanopt_profile}: ${389:"#"}}
${390:   ${391:wccp}: ${392:"#"}}
${393:   ${394:webcache}: ${395:"#"}}
${396:   ${397:webcache_https}: ${398:"#"}}
${399:   ${400:webfilter_profile}: ${401:"#"}}
${402:   ${403:wsso}: ${404:"#"}}
${405:${406:   become: ${407:true}} 
${408:   become_method: ${409:su}} 
${410:   become_user: ${411:nobody}} 
${412:   become_flags: ${413:"-s /bin/sh"}}} 
${414:   when: ${415:variable is defined}} 
${416:   with_items: ${417:array}} 
]]></content>
	<tabTrigger>fmgr_fwpol_ipv4</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
