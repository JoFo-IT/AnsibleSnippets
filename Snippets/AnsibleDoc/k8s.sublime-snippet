<snippet>
<content><![CDATA[
${1:# api_key: Token used to authenticate with the API. Can 
# api_version: Use to specify the API version. Use to create, 
# append_hash: Whether to append a hash to a resource name for 
# apply: `apply' compares the desired resource definition 
# ca_cert: Path to a CA certificate used to authenticate 
# client_cert: Path to a certificate used to authenticate with 
# client_key: Path to a key file used to authenticate with the 
# context: The name of a context found in the config file. 
# force: If set to `yes', and `state' is `present', an 
# host: Provide a URL for accessing the API. Can also be 
# kind: Use to specify an object model. Use to create, 
# kubeconfig: Path to an existing Kubernetes config file. If 
# merge_type: Whether to override the default patch merge 
# patch: use-a 
# name: Use to specify an object name. Use to create, 
# namespace: Use to specify an object namespace. Useful when 
# password: Provide a password for authenticating with the 
# proxy: The URL of an HTTP proxy to use for the 
# resource_definition: Provide a valid YAML definition (either as a 
# src: Provide a path to a file containing a valid YAML 
# state: Determines if an object should be created, 
# username: Provide a username for authenticating with the 
# validate: how (if at all) to validate the resource 
# validate_certs: Whether or not to verify the API server's SSL 
# wait: Whether to wait for certain resource kinds to 
# wait_condition: Specifies a custom condition on the status to 
# wait_sleep: Number of seconds to sleep between checks. 
# wait_timeout: How long in seconds to wait for the resource to 
}- name: ${2:Name for k8s module.}
  k8s:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:append_hash}: ${11:"#"}}
${12:   ${13:apply}: ${14:"#"}}
${15:   ${16:ca_cert}: ${17:"#"}}
${18:   ${19:client_cert}: ${20:"#"}}
${21:   ${22:client_key}: ${23:"#"}}
${24:   ${25:context}: ${26:"#"}}
${27:   ${28:force}: ${29:"#"}}
${30:   ${31:host}: ${32:"#"}}
${33:   ${34:kind}: ${35:"#"}}
${36:   ${37:kubeconfig}: ${38:"#"}}
${39:   ${40:merge_type}: ${41:"#"}}
${42:   ${43:patch}: ${44:"#"}}
${45:   ${46:name}: ${47:"#"}}
${48:   ${49:namespace}: ${50:"#"}}
${51:   ${52:password}: ${53:"#"}}
${54:   ${55:proxy}: ${56:"#"}}
${57:   ${58:resource_definition}: ${59:"#"}}
${60:   ${61:src}: ${62:"#"}}
${63:   ${64:state}: ${65:"#"}}
${66:   ${67:username}: ${68:"#"}}
${69:   ${70:validate}: ${71:"#"}}
${72:   ${73:validate_certs}: ${74:"#"}}
${75:   ${76:wait}: ${77:"#"}}
${78:   ${79:wait_condition}: ${80:"#"}}
${81:   ${82:wait_sleep}: ${83:"#"}}
${84:   ${85:wait_timeout}: ${86:"#"}}
${87:${88:   become: ${89:true}} 
${90:   become_method: ${91:su}} 
${92:   become_user: ${93:nobody}} 
${94:   become_flags: ${95:"-s /bin/sh"}}} 
${96:   when: ${97:variable is defined}} 
${98:   with_items: ${99:array}} 
]]></content>
	<tabTrigger>k8s</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
