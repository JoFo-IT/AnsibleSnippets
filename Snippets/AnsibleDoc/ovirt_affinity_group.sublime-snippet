<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to create HTTP/HTTPS connection to oVirt: 
# cluster: Name of the cluster of the affinity group. 
# description: Description of the affinity group. 
# fetch_nested: If `True' the module will fetch additional data from the API. It will fetch IDs of the VMs disks, 
# host_enforcing: If `true' VM cannot start on host if it does not satisfy the `host_rule'. `This parameter is support 
# host_rule: If `positive' `all' VMs in this group should run on the this host. If `negative' `no' VMs in this group 
# hosts: List of the hosts names, which should have assigned this affinity group. `This parameter is support 
# name: (required) Name of the affinity group to manage. 
# nested_attributes: Specifies list of the attributes which should be fetched from the API. This parameter apply only when 
# poll_interval: Number of the seconds the module waits until another poll request on entity status is sent. 
# state: Should the affinity group be present or absent. 
# timeout: The amount of time in seconds the module should wait for the instance to get into desired state. 
# vm_enforcing: If `true' VM cannot start if it does not satisfy the `vm_rule'. 
# vm_rule: If `positive' `all' VMs in this group should run on the host defined by `host_rule'. If `negative' `no' 
# vms: List of the VMs names, which should have assigned this affinity group. 
# wait: `True' if the module should wait for the entity to get into desired state. 
}- name: ${2:Name for ovirt_affinity_group module.}
  ovirt_affinity_group:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:cluster}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:fetch_nested}: ${14:"#"}}
${15:   ${16:host_enforcing}: ${17:"#"}}
${18:   ${19:host_rule}: ${20:"#"}}
${21:   ${22:hosts}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:nested_attributes}: ${29:"#"}}
${30:   ${31:poll_interval}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:timeout}: ${38:"#"}}
${39:   ${40:vm_enforcing}: ${41:"#"}}
${42:   ${43:vm_rule}: ${44:"#"}}
${45:   ${46:vms}: ${47:"#"}}
${48:   ${49:wait}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>ovirt_affinity_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
