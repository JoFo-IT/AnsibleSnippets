<snippet>
<content><![CDATA[
${1:# access_level: Determines if a runner can pick up jobs from 
# active: Define if the runners is immediately active 
# api_password: The password to use for authentication against 
# api_token: (required) Your private token to interact with 
# api_url: The resolvable endpoint for the API 
# api_username: The username to use for authentication against 
# description: (required) The unique name of the runner. 
# locked: Determines if the runner is locked or not. 
# maximum_timeout: The maximum timeout that a runner has to pick up 
# registration_token: (required) The registration token is used to 
# run_untagged: Run untagged jobs or not. 
# state: Make sure that the runner with the same name 
# tag_list: The tags that apply to the runner. 
# url: (required) The URL of the Gitlab server, with 
# validate_certs: Whether or not to validate SSL certs when 
}- name: ${2:Name for gitlab_runner module.}
  gitlab_runner:
${3:   ${4:access_level}: ${5:"#"}}
${6:   ${7:active}: ${8:"#"}}
${9:   ${10:api_password}: ${11:"#"}}
${12:   ${13:api_token}: ${14:"#"}}
${15:   ${16:api_url}: ${17:"#"}}
${18:   ${19:api_username}: ${20:"#"}}
${21:   ${22:description}: ${23:"#"}}
${24:   ${25:locked}: ${26:"#"}}
${27:   ${28:maximum_timeout}: ${29:"#"}}
${30:   ${31:registration_token}: ${32:"#"}}
${33:   ${34:run_untagged}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:tag_list}: ${41:"#"}}
${42:   ${43:url}: ${44:"#"}}
${45:   ${46:validate_certs}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>gitlab_runner</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
