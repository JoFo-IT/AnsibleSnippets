<snippet>
<content><![CDATA[
${1:# cache_name: Specifies the user-created cache that the system 
# enable_cache: Specifies whether the system caches DNS 
# enable_dns_express: Specifies whether the DNS Express engine is 
# enable_dns_firewall: Specifies whether DNS firewall capability is 
# enable_dnssec: Specifies whether the system signs responses 
# enable_gtm: Specifies whether the system uses Global Traffic 
# enable_zone_transfer: Specifies whether the system answers zone 
# name: (required) Specifies the name of the DNS 
# parent: Specifies the profile from which this profile 
# partition: Device partition to manage resources on. 
# process_recursion_desired: Specifies whether to process client-side DNS 
# provider: A dict object containing connection details. 
# state: When `present', ensures that the profile exists. 
# unhandled_query_action: Specifies the action to take when a query does 
# use_local_bind: Specifies whether the system forwards non-wide 
}- name: ${2:Name for bigip_profile_dns module.}
  bigip_profile_dns:
${3:   ${4:cache_name}: ${5:"#"}}
${6:   ${7:enable_cache}: ${8:"#"}}
${9:   ${10:enable_dns_express}: ${11:"#"}}
${12:   ${13:enable_dns_firewall}: ${14:"#"}}
${15:   ${16:enable_dnssec}: ${17:"#"}}
${18:   ${19:enable_gtm}: ${20:"#"}}
${21:   ${22:enable_zone_transfer}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:parent}: ${29:"#"}}
${30:   ${31:partition}: ${32:"#"}}
${33:   ${34:process_recursion_desired}: ${35:"#"}}
${36:   ${37:provider}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:unhandled_query_action}: ${44:"#"}}
${45:   ${46:use_local_bind}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>bigip_profile_dns</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
