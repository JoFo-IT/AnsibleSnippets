<snippet>
<content><![CDATA[
${1:# allow_agent: if true, enables querying SSH agent (if found) for keys if false, disables querying the SSH agent for 
# datastore: auto, uses candidate and fallback to running candidate, edit <candidate/> datastore and then commit 
# host: (required) the hostname or ip address of the netconf device 
# hostkey_verify: if true, the ssh host key of the device must match a ssh key present on the host if false, the ssh host 
# look_for_keys: if true, enables looking in the usual locations for ssh keys (e.g. ~/.ssh/id_*) if false, disables 
# password: (required) password of the user to authenticate with 
# port: the netconf port 
# save: The `save' argument instructs the module to save the running- config to the startup-config if changed. 
# src: Specifies the source path to the xml file that contains the configuration or configuration template to 
# username: (required) the username to authenticate with 
# xml: the XML content to send to the device 
}- name: ${2:Name for netconf_config module.}
  netconf_config:
${3:   ${4:allow_agent}: ${5:"#"}}
${6:   ${7:datastore}: ${8:"#"}}
${9:   ${10:host}: ${11:"#"}}
${12:   ${13:hostkey_verify}: ${14:"#"}}
${15:   ${16:look_for_keys}: ${17:"#"}}
${18:   ${19:password}: ${20:"#"}}
${21:   ${22:port}: ${23:"#"}}
${24:   ${25:save}: ${26:"#"}}
${27:   ${28:src}: ${29:"#"}}
${30:   ${31:username}: ${32:"#"}}
${33:   ${34:xml}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>netconf_config</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
