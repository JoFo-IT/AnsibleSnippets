<snippet>
<content><![CDATA[
${1:# cipher: The cipher to encrypt the private key. (cipher can be found by running `openssl list-cipher-algorithms`) 
# force: Should the key be regenerated even it it already exists 
# passphrase: The passphrase for the private key. 
# path: (required) Name of the file in which the generated TLS/SSL private key will be written. It will have 
# size: Size (in bits) of the TLS/SSL key to generate 
# state: Whether the private key should exist or not, taking action if the state is different from what is 
# type: The algorithm used to generate the TLS/SSL private key 
}- name: ${2:Name for openssl_privatekey module.}
  openssl_privatekey:
${3:   ${4:cipher}: ${5:"#"}}
${6:   ${7:force}: ${8:"#"}}
${9:   ${10:passphrase}: ${11:"#"}}
${12:   ${13:path}: ${14:"#"}}
${15:   ${16:size}: ${17:"#"}}
${18:   ${19:state}: ${20:"#"}}
${21:   ${22:type}: ${23:"#"}}
${24:${25:   become: ${26:true}} 
${27:   become_method: ${28:su}} 
${29:   become_user: ${30:nobody}} 
${31:   become_flags: ${32:"-s /bin/sh"}}} 
${33:   when: ${34:variable is defined}} 
${35:   with_items: ${36:array}} 
]]></content>
	<tabTrigger>openssl_privatekey</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
