<snippet>
<content><![CDATA[
${1:# attributes: The attributes the resulting file or directory 
# backup: Create a backup file including a timestamp so 
# cipher: The cipher to encrypt the private key. (Valid 
# curve: Note that not all curves are supported by all 
# : tls- 
# force: Should the key be regenerated even if it already 
# group: Name of the group that should own the 
# mode: The permissions the resulting file or directory 
# owner: Name of the user that should own the 
# passphrase: The passphrase for the private key. 
# path: (required) Name of the file in which the 
# select_crypto_backend: Determines which crypto backend to use. The 
# selevel: The level part of the SELinux file context. This 
# serole: The role part of the SELinux file context. When 
# setype: The type part of the SELinux file context. When 
# seuser: The user part of the SELinux file context. By 
# size: Size (in bits) of the TLS/SSL key to generate. 
# state: Whether the private key should exist or not, 
# type: The algorithm used to generate the TLS/SSL 
# unsafe_writes: Influence when to use atomic operation to 
}- name: ${2:Name for openssl_privatekey module.}
  openssl_privatekey:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:cipher}: ${11:"#"}}
${12:   ${13:curve}: ${14:"#"}}
${15:   ${16:}: ${17:"#"}}
${18:   ${19:force}: ${20:"#"}}
${21:   ${22:group}: ${23:"#"}}
${24:   ${25:mode}: ${26:"#"}}
${27:   ${28:owner}: ${29:"#"}}
${30:   ${31:passphrase}: ${32:"#"}}
${33:   ${34:path}: ${35:"#"}}
${36:   ${37:select_crypto_backend}: ${38:"#"}}
${39:   ${40:selevel}: ${41:"#"}}
${42:   ${43:serole}: ${44:"#"}}
${45:   ${46:setype}: ${47:"#"}}
${48:   ${49:seuser}: ${50:"#"}}
${51:   ${52:size}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:type}: ${59:"#"}}
${60:   ${61:unsafe_writes}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>openssl_privatekey</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
