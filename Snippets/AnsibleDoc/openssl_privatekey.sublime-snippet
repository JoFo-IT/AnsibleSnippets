<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To 
# cipher: The cipher to encrypt the private key. (cipher 
# force: Should the key be regenerated even if it already 
# group: Name of the group that should own the 
# mode: Mode the file or directory should be. For those 
# owner: Name of the user that should own the 
# passphrase: The passphrase for the private key. 
# path: (required) Name of the file in which the 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# size: Size (in bits) of the TLS/SSL key to generate 
# state: Whether the private key should exist or not, 
# type: The algorithm used to generate the TLS/SSL 
# unsafe_writes: By default this module uses atomic operations to 
}- name: ${2:Name for openssl_privatekey module.}
  openssl_privatekey:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:cipher}: ${8:"#"}}
${9:   ${10:force}: ${11:"#"}}
${12:   ${13:group}: ${14:"#"}}
${15:   ${16:mode}: ${17:"#"}}
${18:   ${19:owner}: ${20:"#"}}
${21:   ${22:passphrase}: ${23:"#"}}
${24:   ${25:path}: ${26:"#"}}
${27:   ${28:selevel}: ${29:"#"}}
${30:   ${31:serole}: ${32:"#"}}
${33:   ${34:setype}: ${35:"#"}}
${36:   ${37:seuser}: ${38:"#"}}
${39:   ${40:size}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:type}: ${47:"#"}}
${48:   ${49:unsafe_writes}: ${50:"#"}}
${51:${52:   become: ${53:true}} 
${54:   become_method: ${55:su}} 
${56:   become_user: ${57:nobody}} 
${58:   become_flags: ${59:"-s /bin/sh"}}} 
${60:   when: ${61:variable is defined}} 
${62:   with_items: ${63:array}} 
]]></content>
	<tabTrigger>openssl_privatekey</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
