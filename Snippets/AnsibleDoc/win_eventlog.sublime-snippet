<snippet>
<content><![CDATA[
${1:# category_file: For one or more sources specified, the path to a 
# maximum_size: The maximum size of the event log. Value must be 
# message_file: For one or more sources specified, the path to a 
# name: (required) Name of the event log to manage. 
# overflow_action: The action for the log to take once it reaches 
# parameter_file: For one or more sources specified, the path to a 
# retention_days: The minimum number of days event entries must 
# sources: A list of one or more sources to ensure are 
# state: Desired state of the log and/or sources. When 
}- name: ${2:Name for win_eventlog module.}
  win_eventlog:
${3:   ${4:category_file}: ${5:"#"}}
${6:   ${7:maximum_size}: ${8:"#"}}
${9:   ${10:message_file}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:overflow_action}: ${17:"#"}}
${18:   ${19:parameter_file}: ${20:"#"}}
${21:   ${22:retention_days}: ${23:"#"}}
${24:   ${25:sources}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>win_eventlog</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
