<snippet>
<content><![CDATA[
${1:# ami_id: An AMI ID to match. 
# ami_tags: A hash/dictionary of tags to match for the AMI. 
# architecture: An architecture type to match (e.g. x86_64). 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# hypervisor: A hypervisor type type to match (e.g. xen). 
# is_public: Whether or not the image(s) are public. 
# name: An AMI name to match. 
# no_result_action: What to do when no results are found. 'success' 
# owner: Search AMIs owned by the specified owner Can 
# platform: Platform type to match. 
# product_code: Marketplace product code to match. 
# profile: Uses a boto profile. Only works with boto >= 
# region: (required) The AWS region to use. 
# root_device_type: Root device type to match (e.g. ebs, instance- 
# security_token: AWS STS security token. If not set then the 
# sort: Optional attribute which with to sort the 
# sort_end: Which result to end with (when sorting). 
# sort_order: Order in which to sort results. Only used when 
# sort_start: Which result to start with (when sorting). 
# sort_tag: Tag name with which to sort results. Required 
# state: AMI state to match. 
# validate_certs: When set to "no", SSL certificates will not be 
# virtualization_type: Virtualization type to match (e.g. hvm). 
}- name: ${2:Name for ec2_ami_find module.}
  ec2_ami_find:
${3:   ${4:ami_id}: ${5:"#"}}
${6:   ${7:ami_tags}: ${8:"#"}}
${9:   ${10:architecture}: ${11:"#"}}
${12:   ${13:aws_access_key}: ${14:"#"}}
${15:   ${16:aws_secret_key}: ${17:"#"}}
${18:   ${19:ec2_url}: ${20:"#"}}
${21:   ${22:hypervisor}: ${23:"#"}}
${24:   ${25:is_public}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:no_result_action}: ${32:"#"}}
${33:   ${34:owner}: ${35:"#"}}
${36:   ${37:platform}: ${38:"#"}}
${39:   ${40:product_code}: ${41:"#"}}
${42:   ${43:profile}: ${44:"#"}}
${45:   ${46:region}: ${47:"#"}}
${48:   ${49:root_device_type}: ${50:"#"}}
${51:   ${52:security_token}: ${53:"#"}}
${54:   ${55:sort}: ${56:"#"}}
${57:   ${58:sort_end}: ${59:"#"}}
${60:   ${61:sort_order}: ${62:"#"}}
${63:   ${64:sort_start}: ${65:"#"}}
${66:   ${67:sort_tag}: ${68:"#"}}
${69:   ${70:state}: ${71:"#"}}
${72:   ${73:validate_certs}: ${74:"#"}}
${75:   ${76:virtualization_type}: ${77:"#"}}
${78:${79:   become: ${80:true}} 
${81:   become_method: ${82:su}} 
${83:   become_user: ${84:nobody}} 
${85:   become_flags: ${86:"-s /bin/sh"}}} 
${87:   when: ${88:variable is defined}} 
${89:   with_items: ${90:array}} 
]]></content>
	<tabTrigger>ec2_ami_find</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
