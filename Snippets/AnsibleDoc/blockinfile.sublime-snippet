<snippet>
<content><![CDATA[
${1:#backup = Create a backup file including the timestamp information so you can get the original file back if you somehow
#block = The text to insert inside the marker lines. If it's missing or an empty string, the block will be removed as if
#create = Create a new file if it doesn't exist.
#dest = The file to modify.
#follow = This flag indicates that filesystem links, if they exist, should be followed.
#group = name of the group that should own the file/directory, as would be fed to `chown'
#insertafter = If specified, the block will be inserted after the last match of specified regular expression. A special value
#insertbefore = If specified, the block will be inserted before the last match of specified regular expression. A special value
#marker = The marker line template. "{mark}" will be replaced with "BEGIN" or "END".
#mode = mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are actually octal
#owner = name of the user that should own the file/directory, as would be fed to `chown'
#selevel = level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'.
#serole = role part of SELinux file context, `_default' feature works as for `seuser'.
#setype = type part of SELinux file context, `_default' feature works as for `seuser'.
#seuser = user part of SELinux file context. Will default to system policy, if applicable. If set to `_default', it will
#state = Whether the block should be there or not.
#validate = The validation command to run before copying into place. The path to the file to validate is passed in via '%s'
}- name: ${2:Name for blockinfile module.}
${3:  become: ${4:yes}}
  blockinfile: ${5:backup=${6: } }${7:block=${8: } }${9:create=${10: } }${11:dest=${12: } }${13:follow=${14: } }${15:group=${16: } }${17:insertafter=${18: } }${19:insertbefore=${20: } }${21:marker=${22: } }${23:mode=${24: } }${25:owner=${26: } }${27:selevel=${28: } }${29:serole=${30: } }${31:setype=${32: } }${33:seuser=${34: } }${35:state=${36: } }${37:validate=${38: } }
${39:  when: ${40: variable is defined}}
${41:  with_items: ${42: array}}
]]></content>
	<tabTrigger>blockinfile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
