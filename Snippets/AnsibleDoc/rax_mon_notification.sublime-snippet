<snippet>
<content><![CDATA[
${1:#api_key = Rackspace API key (overrides `credentials')
#auth_endpoint = The URI of the authentication service
#credentials = File to find the Rackspace credentials in (ignored if `api_key' and `username' are provided)
#details = Dictionary of key-value pairs used to initialize the notification. Required keys and meanings vary with
#env = Environment as configured in ~/.pyrax.cfg, see
#https = pyrax-
#identity_type = Authentication machanism to use, such as rackspace or keystone
#label = Defines a friendly name for this notification. String between 1 and 255 characters long.
#notification_type = A supported notification type.
#region = Region to create an instance in
#state = Ensure that the notification with this `label' exists or does not exist.
#tenant_id = The tenant ID used for authentication
#tenant_name = The tenant name used for authentication
#username = Rackspace username (overrides `credentials')
#verify_ssl = Whether or not to require SSL validation of API endpoints
}- name: ${2:Name for rax_mon_notification module.}
${3:  become: ${4:yes}}
  rax_mon_notification: ${5:api_key=${6: } }${7:auth_endpoint=${8: } }${9:credentials=${10: } }${11:details=${12: } }${13:env=${14: } }${15:https=${16: } }${17:identity_type=${18: } }${19:label=${20: } }${21:notification_type=${22: } }${23:region=${24: } }${25:state=${26: } }${27:tenant_id=${28: } }${29:tenant_name=${30: } }${31:username=${32: } }${33:verify_ssl=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>rax_mon_notification</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
