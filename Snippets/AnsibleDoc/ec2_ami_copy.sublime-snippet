<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# description: An optional human-readable string describing the 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# encrypted: Whether or not the destination snapshots of the 
# kms_key_id: KMS key id used to encrypt image. If not 
# name: The name of the new AMI to copy. (As of 2.3 the 
# profile: Uses a boto profile. Only works with boto >= 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# security_token: AWS STS security token. If not set then the 
# source_image_id: (required) The ID of the AMI in source region 
# source_region: (required) The source region the AMI should be 
# tag_equality: Whether to use tags if the source AMI already 
# tags: A hash/dictionary of tags to add to the new 
# validate_certs: When set to "no", SSL certificates will not be 
# wait: Wait for the copied AMI to be in state 
# wait_timeout: How long before wait gives up, in seconds. Prior 
}- name: ${2:Name for ec2_ami_copy module.}
  ec2_ami_copy:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:debug_botocore_endpoint_logs}: ${11:"#"}}
${12:   ${13:description}: ${14:"#"}}
${15:   ${16:ec2_url}: ${17:"#"}}
${18:   ${19:encrypted}: ${20:"#"}}
${21:   ${22:kms_key_id}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:profile}: ${29:"#"}}
${30:   ${31:region}: ${32:"#"}}
${33:   ${34:}: ${35:"#"}}
${36:   ${37:security_token}: ${38:"#"}}
${39:   ${40:source_image_id}: ${41:"#"}}
${42:   ${43:source_region}: ${44:"#"}}
${45:   ${46:tag_equality}: ${47:"#"}}
${48:   ${49:tags}: ${50:"#"}}
${51:   ${52:validate_certs}: ${53:"#"}}
${54:   ${55:wait}: ${56:"#"}}
${57:   ${58:wait_timeout}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>ec2_ami_copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
