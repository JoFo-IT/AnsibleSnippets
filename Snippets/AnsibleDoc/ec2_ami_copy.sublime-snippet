<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#description = An optional human-readable string describing the contents and purpose of the new AMI.
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#name = The name of the new image to copy
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#source_image_id = the id of the image in source region that should be copied
#source_region = the source region that AMI should be copied from
#tags = a hash/dictionary of tags to add to the new copied AMI; '{"key":"value"}' and '{"key":"value","key":"value"}'
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#wait = wait for the copied AMI to be in state 'available' before returning.
#wait_timeout = how long before wait gives up, in seconds
}- name: ${2:Name for ec2_ami_copy module.}
${3:  become: ${4:yes}}
  ec2_ami_copy: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:description=${10: } }${11:ec2_url=${12: } }${13:name=${14: } }${15:profile=${16: } }${17:region=${18: } }${19:http=${20: } }${21:security_token=${22: } }${23:source_image_id=${24: } }${25:source_region=${26: } }${27:tags=${28: } }${29:validate_certs=${30: } }${31:wait=${32: } }${33:wait_timeout=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>ec2_ami_copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
