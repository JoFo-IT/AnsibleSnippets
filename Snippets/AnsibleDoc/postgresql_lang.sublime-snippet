<snippet>
<content><![CDATA[
${1:#cascade = when dropping a language, also delete object that depend on this language. only used when `state=absent'.
#db = name of database where the language will be added, removed or changed
#fail_on_drop = if `yes', fail when removing a language. Otherwise just log and continue in some cases, it is not possible to
#force_trust = marks the language as trusted, even if it's marked as untrusted in pg_pltemplate. use with care!
#lang = name of the procedural language to add, remove or change
#login_host = Host running PostgreSQL where you want to execute the actions.
#login_password = Password used to authenticate with PostgreSQL (must match `login_user')
#login_user = User used to authenticate with PostgreSQL
#port = Database port to connect to.
#state = The state of the language for the selected database
#trust = make this language trusted for the selected db
}- name: ${2:Name for postgresql_lang module.}
${3:  become: ${4:yes}}
  postgresql_lang: ${5:cascade=${6: } }${7:db=${8: } }${9:fail_on_drop=${10: } }${11:force_trust=${12: } }${13:lang=${14: } }${15:login_host=${16: } }${17:login_password=${18: } }${19:login_user=${20: } }${21:port=${22: } }${23:state=${24: } }${25:trust=${26: } }
${27:  when: ${28: variable is defined}}
${29:  with_items: ${30: array}}
]]></content>
	<tabTrigger>postgresql_lang</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
