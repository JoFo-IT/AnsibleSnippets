<snippet>
<content><![CDATA[
${1:# arguments: extra arguments for queue. If defined this 
# auto_delete: if the queue should delete itself after all 
# auto_expires: How long a queue can be unused before it is 
# ca_cert: CA certificate to verify SSL connection to 
# client_cert: Client certificate to send on SSL connections to 
# client_key: Private key matching the client certificate. 
# dead_letter_exchange: Optional name of an exchange to which messages 
# dead_letter_routing_key: Optional replacement routing key to use when a 
# durable: whether queue is durable or not 
# login_host: RabbitMQ host for connection. 
# login_password: RabbitMQ password for connection. 
# login_port: RabbitMQ management API port. 
# login_protocol: RabbitMQ management API protocol. 
# login_user: RabbitMQ user for connection. 
# max_length: How many messages can the queue contain before 
# max_priority: Maximum number of priority levels for the queue 
# message_ttl: How long a message can live in queue before it 
# name: (required) Name of the queue 
# state: Whether the queue should be present or absent 
# vhost: RabbitMQ virtual host. 
}- name: ${2:Name for rabbitmq_queue module.}
  rabbitmq_queue:
${3:   ${4:arguments}: ${5:"#"}}
${6:   ${7:auto_delete}: ${8:"#"}}
${9:   ${10:auto_expires}: ${11:"#"}}
${12:   ${13:ca_cert}: ${14:"#"}}
${15:   ${16:client_cert}: ${17:"#"}}
${18:   ${19:client_key}: ${20:"#"}}
${21:   ${22:dead_letter_exchange}: ${23:"#"}}
${24:   ${25:dead_letter_routing_key}: ${26:"#"}}
${27:   ${28:durable}: ${29:"#"}}
${30:   ${31:login_host}: ${32:"#"}}
${33:   ${34:login_password}: ${35:"#"}}
${36:   ${37:login_port}: ${38:"#"}}
${39:   ${40:login_protocol}: ${41:"#"}}
${42:   ${43:login_user}: ${44:"#"}}
${45:   ${46:max_length}: ${47:"#"}}
${48:   ${49:max_priority}: ${50:"#"}}
${51:   ${52:message_ttl}: ${53:"#"}}
${54:   ${55:name}: ${56:"#"}}
${57:   ${58:state}: ${59:"#"}}
${60:   ${61:vhost}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>rabbitmq_queue</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
