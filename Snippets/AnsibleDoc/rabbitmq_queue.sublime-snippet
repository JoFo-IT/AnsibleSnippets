<snippet>
<content><![CDATA[
${1:# arguments: extra arguments for queue. If defined this argument is a key/value dictionary 
# auto_delete: if the queue should delete itself after all queues/queues unbound from it 
# auto_expires: How long a queue can be unused before it is automatically deleted (milliseconds) 
# dead_letter_exchange: Optional name of an exchange to which messages will be republished if they are rejected or expire 
# dead_letter_routing_key: Optional replacement routing key to use when a message is dead-lettered. Original routing key will be 
# durable: whether queue is durable or not 
# login_host: rabbitMQ host for connection 
# login_password: rabbitMQ password for connection 
# login_port: rabbitMQ management api port 
# login_user: rabbitMQ user for connection 
# max_length: How many messages can the queue contain before it starts rejecting 
# message_ttl: How long a message can live in queue before it is discarded (milliseconds) 
# name: (required) Name of the queue to create 
# state: Whether the queue should be present or absent Only present implemented atm 
# vhost: rabbitMQ virtual host 
}- name: ${2:Name for rabbitmq_queue module.}
  rabbitmq_queue:
${3:   ${4:arguments}: ${5:"#"}}
${6:   ${7:auto_delete}: ${8:"#"}}
${9:   ${10:auto_expires}: ${11:"#"}}
${12:   ${13:dead_letter_exchange}: ${14:"#"}}
${15:   ${16:dead_letter_routing_key}: ${17:"#"}}
${18:   ${19:durable}: ${20:"#"}}
${21:   ${22:login_host}: ${23:"#"}}
${24:   ${25:login_password}: ${26:"#"}}
${27:   ${28:login_port}: ${29:"#"}}
${30:   ${31:login_user}: ${32:"#"}}
${33:   ${34:max_length}: ${35:"#"}}
${36:   ${37:message_ttl}: ${38:"#"}}
${39:   ${40:name}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:vhost}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>rabbitmq_queue</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
