<snippet>
<content><![CDATA[
${1:# access: True - enables, False - disables access & NAT 
# access_layers: Access policy layers. 
# auto_publish_session: Publish the current session if changes have been 
# color: Color of the object. Should be one of existing 
# comments: Comments string. 
# desktop_security: True - enables, False - disables Desktop 
# details_level: The level of detail for some of the fields in 
# ignore_errors: Apply changes ignoring errors. You won't be able 
# ignore_warnings: Apply changes ignoring warnings. 
# installation_targets: Which Gateways identified by the name or UID to 
# name: (required) Object name. 
# qos: True - enables, False - disables QoS policy, 
# qos_policy_type: QoS policy type. 
# state: State of the access rule (present or absent). 
# tags: Collection of tag identifiers. 
# threat_layers: Threat policy layers. 
# threat_prevention: True - enables, False - disables Threat policy, 
# version: Version of checkpoint. If not given one, the 
# vpn_traditional_mode: True - enables, False - disables VPN traditional 
# wait_for_task: Wait for the task to end. Such as publish task. 
}- name: ${2:Name for cp_mgmt_package module.}
  cp_mgmt_package:
${3:   ${4:access}: ${5:"#"}}
${6:   ${7:access_layers}: ${8:"#"}}
${9:   ${10:auto_publish_session}: ${11:"#"}}
${12:   ${13:color}: ${14:"#"}}
${15:   ${16:comments}: ${17:"#"}}
${18:   ${19:desktop_security}: ${20:"#"}}
${21:   ${22:details_level}: ${23:"#"}}
${24:   ${25:ignore_errors}: ${26:"#"}}
${27:   ${28:ignore_warnings}: ${29:"#"}}
${30:   ${31:installation_targets}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:qos}: ${38:"#"}}
${39:   ${40:qos_policy_type}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:tags}: ${47:"#"}}
${48:   ${49:threat_layers}: ${50:"#"}}
${51:   ${52:threat_prevention}: ${53:"#"}}
${54:   ${55:version}: ${56:"#"}}
${57:   ${58:vpn_traditional_mode}: ${59:"#"}}
${60:   ${61:wait_for_task}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>cp_mgmt_package</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
