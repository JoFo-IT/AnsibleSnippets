<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# cascade: Automatically install/remove any extensions that 
# db: (required) Name of the database to add or remove 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# name: (required) Name of the extension to add or 
# port: Database port to connect to. 
# schema: Name of the schema to add the extension to. 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
# state: The database extension state. 
# version: Extension version to add or update to. Has 
}- name: ${2:Name for postgresql_ext module.}
  postgresql_ext:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:cascade}: ${8:"#"}}
${9:   ${10:db}: ${11:"#"}}
${12:   ${13:login_host}: ${14:"#"}}
${15:   ${16:login_password}: ${17:"#"}}
${18:   ${19:login_unix_socket}: ${20:"#"}}
${21:   ${22:login_user}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:port}: ${29:"#"}}
${30:   ${31:schema}: ${32:"#"}}
${33:   ${34:session_role}: ${35:"#"}}
${36:   ${37:ssl_mode}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:version}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>postgresql_ext</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
