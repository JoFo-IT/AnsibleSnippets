<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# cdb_type: type of instance (i.e. MySQL, MariaDB, Percona) 
# cdb_version: version of database (MySQL supports 5.1 and 5.6, 
# credentials: File to find the Rackspace credentials in. 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# flavor: flavor to use for the instance 1 to 6 (i.e. 
# identity_type: Authentication mechanism to use, such as 
# name: Name of the databases server instance 
# region: Region to create an instance in. 
# state: Indicate desired state of the resource 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# username: Rackspace username, overrides `credentials'. 
# validate_certs: Whether or not to require SSL validation of API 
# volume: Volume size of the database 1-150GB 
# wait: wait for the instance to be in state 'running' 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for rax_cdb module.}
  rax_cdb:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:auth_endpoint}: ${8:"#"}}
${9:   ${10:cdb_type}: ${11:"#"}}
${12:   ${13:cdb_version}: ${14:"#"}}
${15:   ${16:credentials}: ${17:"#"}}
${18:   ${19:env}: ${20:"#"}}
${21:   ${22:md}: ${23:"#"}}
${24:   ${25:flavor}: ${26:"#"}}
${27:   ${28:identity_type}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:region}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:tenant_id}: ${41:"#"}}
${42:   ${43:tenant_name}: ${44:"#"}}
${45:   ${46:username}: ${47:"#"}}
${48:   ${49:validate_certs}: ${50:"#"}}
${51:   ${52:volume}: ${53:"#"}}
${54:   ${55:wait}: ${56:"#"}}
${57:   ${58:wait_timeout}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>rax_cdb</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
