<snippet>
<content><![CDATA[
${1:# border: Configures interface to be a boundary of a PIM domain. 
# hello_auth_key: Authentication for hellos on this interface. 
# hello_interval: Hello interval in milliseconds for this interface. 
# host: (required) Specifies the DNS host name or address for connecting to the remote device over the specified 
# interface: (required) Full name of the interface such as Ethernet1/33. 
# jp_policy_in: Policy for join-prune messages (inbound). 
# jp_policy_out: (required) Policy for join-prune messages (outbound). 
# jp_type_in: Type of policy mapped to `jp_policy_in'. 
# jp_type_out: Type of policy mapped to `jp_policy_out'. 
# neighbor_policy: Configures a neighbor policy for filtering adjacencies. 
# neighbor_type: Type of policy mapped to neighbor_policy. 
# password: Specifies the password to use to authenticate the connection to the remote device.  This is a common 
# port: Specifies the port to use when building the connection to the remote device.  This value applies to 
# provider: Convenience method that allows all `nxos' arguments to be passed as a dict object.  All constraints 
# sparse: Enable/disable sparse-mode on the interface. 
# ssh_keyfile: Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only 
# state: Manages desired state of the resource. 
# timeout: Specifies the timeout in seconds for communicating with the network device for either connecting or 
# transport: (required) Configures the transport connection to use when connecting to the remote device.  The 
# use_ssl: Configures the `transport' to use SSL if set to true only when the `transport=nxapi', otherwise this 
# username: Configures the username to use to authenticate the connection to the remote device.  This value is used 
# validate_certs: If `no', SSL certificates will not be validated. This should only be used on personally controlled sites 
}- name: ${2:Name for nxos_pim_interface module.}
  nxos_pim_interface:
${3:   ${4:border}: ${5:"#"}}
${6:   ${7:hello_auth_key}: ${8:"#"}}
${9:   ${10:hello_interval}: ${11:"#"}}
${12:   ${13:host}: ${14:"#"}}
${15:   ${16:interface}: ${17:"#"}}
${18:   ${19:jp_policy_in}: ${20:"#"}}
${21:   ${22:jp_policy_out}: ${23:"#"}}
${24:   ${25:jp_type_in}: ${26:"#"}}
${27:   ${28:jp_type_out}: ${29:"#"}}
${30:   ${31:neighbor_policy}: ${32:"#"}}
${33:   ${34:neighbor_type}: ${35:"#"}}
${36:   ${37:password}: ${38:"#"}}
${39:   ${40:port}: ${41:"#"}}
${42:   ${43:provider}: ${44:"#"}}
${45:   ${46:sparse}: ${47:"#"}}
${48:   ${49:ssh_keyfile}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:timeout}: ${56:"#"}}
${57:   ${58:transport}: ${59:"#"}}
${60:   ${61:use_ssl}: ${62:"#"}}
${63:   ${64:username}: ${65:"#"}}
${66:   ${67:validate_certs}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>nxos_pim_interface</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
