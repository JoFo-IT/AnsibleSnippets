<snippet>
<content><![CDATA[
${1:# api_key: (required) The pagerduty API key (readonly access), generated on the pagerduty site. 
# client: The name of the monitoring client that is triggering this event. 
# client_url: The URL of the monitoring client that is triggering this event. 
# desc: For `triggered' `state' - Required. Short description of the problem that led to this trigger. This 
# incident_key: Identifies the incident to which this `state' should be applied. For `triggered' `state' - If there's no 
# name: (required) PagerDuty unique subdomain. 
# service_key: (required) The GUID of one of your "Generic API" services. This is the "service key" listed on a Generic 
# state: (required) Type of event to be sent. 
}- name: ${2:Name for pagerduty_alert module.}
  pagerduty_alert:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:client}: ${8:"#"}}
${9:   ${10:client_url}: ${11:"#"}}
${12:   ${13:desc}: ${14:"#"}}
${15:   ${16:incident_key}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:service_key}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>pagerduty_alert</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
