<snippet>
<content><![CDATA[
${1:# after: The ordered set of commands to append to the end of the command stack if a changed needs to be made. 
# authorize: Instructs the module to enter privileged mode on the remote device before sending any commands.  If not 
# before: The ordered set of commands to push on to the command stack if a change needs to be made.  This allows 
# config: The module, by default, will connect to the remote device and retrieve the current running-config to use 
# context: Specifies which context to target if you are running in the ASA in multiple context mode. Defaults to 
# force: The force argument instructs the module to not consider the current devices running-config.  When set to 
# lines: (required) The ordered set of commands that should be configured in the section.  The commands must be 
# match: Instructs the module on the way to perform the matching of the set of commands against the current 
# provider: A dict object containing connection details. 
# replace: Instructs the module on the way to perform the configuration on the device.  If the replace argument is 
}- name: ${2:Name for asa_acl module.}
  asa_acl:
${3:   ${4:after}: ${5:"#"}}
${6:   ${7:authorize}: ${8:"#"}}
${9:   ${10:before}: ${11:"#"}}
${12:   ${13:config}: ${14:"#"}}
${15:   ${16:context}: ${17:"#"}}
${18:   ${19:force}: ${20:"#"}}
${21:   ${22:lines}: ${23:"#"}}
${24:   ${25:match}: ${26:"#"}}
${27:   ${28:provider}: ${29:"#"}}
${30:   ${31:replace}: ${32:"#"}}
${33:${34:   become: ${35:true}} 
${36:   become_method: ${37:su}} 
${38:   become_user: ${39:nobody}} 
${40:   become_flags: ${41:"-s /bin/sh"}}} 
${42:   when: ${43:variable is defined}} 
${44:   with_items: ${45:array}} 
]]></content>
	<tabTrigger>asa_acl</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
