<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# comment: Brief description of the domain. Maximum length of 160 characters 
# credentials: File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided. 
# data: (required) IP address for A/AAAA record, FQDN for CNAME/MX/NS, or text data for SRV/TXT 
# domain: Domain name to create the record in. This is an invalid option when type=PTR 
# env: Environment as configured in `~/.pyrax.cfg', see 
# : pyrax-configuration. 
# loadbalancer: Load Balancer ID to create a PTR record for. Only used with type=PTR 
# name: (required) FQDN record name to create 
# overwrite: Add new records if data doesn't match, instead of updating existing record with matching name. If there 
# priority: Required for MX and SRV records, but forbidden for other record types. If specified, must be an integer 
# region: Region to create an instance in. 
# server: Server ID to create a PTR record for. Only used with type=PTR 
# state: Indicate desired state of the resource 
# ttl: Time to live of record in seconds 
# type: (required) DNS record type 
# username: Rackspace username, overrides `credentials'. 
# verify_ssl: Whether or not to require SSL validation of API endpoints. 
}- name: ${2:Name for rax_dns_record module.}
  rax_dns_record:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:comment}: ${8:"#"}}
${9:   ${10:credentials}: ${11:"#"}}
${12:   ${13:data}: ${14:"#"}}
${15:   ${16:domain}: ${17:"#"}}
${18:   ${19:env}: ${20:"#"}}
${21:   ${22:}: ${23:"#"}}
${24:   ${25:loadbalancer}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:overwrite}: ${32:"#"}}
${33:   ${34:priority}: ${35:"#"}}
${36:   ${37:region}: ${38:"#"}}
${39:   ${40:server}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:ttl}: ${47:"#"}}
${48:   ${49:type}: ${50:"#"}}
${51:   ${52:username}: ${53:"#"}}
${54:   ${55:verify_ssl}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>rax_dns_record</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
