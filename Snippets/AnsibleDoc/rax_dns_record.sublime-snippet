<snippet>
<content><![CDATA[
${1:#api_key = Rackspace API key (overrides `credentials')
#comment = Brief description of the domain. Maximum length of 160 characters
#credentials = File to find the Rackspace credentials in (ignored if `api_key' and `username' are provided)
#data = IP address for A/AAAA record, FQDN for CNAME/MX/NS, or text data for SRV/TXT
#domain = Domain name to create the record in. This is an invalid option when type=PTR
#env = Environment as configured in ~/.pyrax.cfg, see
#https = pyrax-
#loadbalancer = Load Balancer ID to create a PTR record for. Only used with type=PTR
#name = FQDN record name to create
#priority = Required for MX and SRV records, but forbidden for other record types. If specified, must be an integer from 0
#region = Region to create an instance in
#server = Server ID to create a PTR record for. Only used with type=PTR
#state = Indicate desired state of the resource
#ttl = Time to live of record in seconds
#type = DNS record type
#username = Rackspace username (overrides `credentials')
#verify_ssl = Whether or not to require SSL validation of API endpoints
}- name: ${2:Name for rax_dns_record module.}
${3:  become: ${4:yes}}
  rax_dns_record: ${5:api_key=${6: } }${7:comment=${8: } }${9:credentials=${10: } }${11:data=${12: } }${13:domain=${14: } }${15:env=${16: } }${17:https=${18: } }${19:loadbalancer=${20: } }${21:name=${22: } }${23:priority=${24: } }${25:region=${26: } }${27:server=${28: } }${29:state=${30: } }${31:ttl=${32: } }${33:type=${34: } }${35:username=${36: } }${37:verify_ssl=${38: } }
${39:  when: ${40: variable is defined}}
${41:  with_items: ${42: array}}
]]></content>
	<tabTrigger>rax_dns_record</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
