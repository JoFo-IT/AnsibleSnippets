<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# comment: Brief description of the domain. Maximum length 
# credentials: File to find the Rackspace credentials in. 
# data: (required) IP address for A/AAAA record, FQDN 
# domain: Domain name to create the record in. This is an 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# identity_type: Authentication mechanism to use, such as 
# loadbalancer: Load Balancer ID to create a PTR record for. 
# name: (required) FQDN record name to create 
# overwrite: Add new records if data doesn't match, instead 
# priority: Required for MX and SRV records, but forbidden 
# region: Region to create an instance in. 
# server: Server ID to create a PTR record for. Only used 
# state: Indicate desired state of the resource 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# ttl: Time to live of record in seconds 
# type: (required) DNS record type 
# username: Rackspace username, overrides `credentials'. 
# verify_ssl: Whether or not to require SSL validation of API 
}- name: ${2:Name for rax_dns_record module.}
  rax_dns_record:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:auth_endpoint}: ${8:"#"}}
${9:   ${10:comment}: ${11:"#"}}
${12:   ${13:credentials}: ${14:"#"}}
${15:   ${16:data}: ${17:"#"}}
${18:   ${19:domain}: ${20:"#"}}
${21:   ${22:env}: ${23:"#"}}
${24:   ${25:md}: ${26:"#"}}
${27:   ${28:identity_type}: ${29:"#"}}
${30:   ${31:loadbalancer}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:overwrite}: ${38:"#"}}
${39:   ${40:priority}: ${41:"#"}}
${42:   ${43:region}: ${44:"#"}}
${45:   ${46:server}: ${47:"#"}}
${48:   ${49:state}: ${50:"#"}}
${51:   ${52:tenant_id}: ${53:"#"}}
${54:   ${55:tenant_name}: ${56:"#"}}
${57:   ${58:ttl}: ${59:"#"}}
${60:   ${61:type}: ${62:"#"}}
${63:   ${64:username}: ${65:"#"}}
${66:   ${67:verify_ssl}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>rax_dns_record</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
