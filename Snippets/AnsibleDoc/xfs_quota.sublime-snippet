<snippet>
<content><![CDATA[
${1:# bhard: Hard blocks quota limit. This argument supports 
# bsoft: Soft blocks quota limit. This argument supports 
# ihard: Hard inodes quota limit. 
# isoft: Soft inodes quota limit. 
# mountpoint: (required) The mount point on which to apply the 
# name: The name of the user, group or project to apply 
# rtbhard: Hard realtime blocks quota limit. This argument 
# rtbsoft: Soft realtime blocks quota limit. This argument 
# state: Whether to apply the limits or remove them. When 
# type: (required) The XFS quota type. 
}- name: ${2:Name for xfs_quota module.}
  xfs_quota:
${3:   ${4:bhard}: ${5:"#"}}
${6:   ${7:bsoft}: ${8:"#"}}
${9:   ${10:ihard}: ${11:"#"}}
${12:   ${13:isoft}: ${14:"#"}}
${15:   ${16:mountpoint}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:rtbhard}: ${23:"#"}}
${24:   ${25:rtbsoft}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:   ${31:type}: ${32:"#"}}
${33:${34:   become: ${35:true}} 
${36:   become_method: ${37:su}} 
${38:   become_user: ${39:nobody}} 
${40:   become_flags: ${41:"-s /bin/sh"}}} 
${42:   when: ${43:variable is defined}} 
${44:   with_items: ${45:array}} 
]]></content>
	<tabTrigger>xfs_quota</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
