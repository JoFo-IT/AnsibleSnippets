<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#cidr_block = The CIDR of the VPC
#dhcp_opts_id = the id of the DHCP options to use for this vpc
#dns_hostnames = Whether to enable AWS hostname support.
#dns_support = Whether to enable AWS DNS support.
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#multi_ok = By default the module will not create another VPC if there is another VPC with the same name and CIDR block.
#name = The name to give your VPC. This is used in combination with the cidr_block paramater to determine if a VPC
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#state = The state of the VPC. Either absent or present.
#tags = The tags you want attached to the VPC. This is independent of the name value, note if you pass a 'Name' key it
#tenancy = Whether to be default or dedicated tenancy. This cannot be changed after the VPC has been created.
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
}- name: ${2:Name for ec2_vpc_net module.}
${3:  become: ${4:yes}}
  ec2_vpc_net: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:cidr_block=${10: } }${11:dhcp_opts_id=${12: } }${13:dns_hostnames=${14: } }${15:dns_support=${16: } }${17:ec2_url=${18: } }${19:multi_ok=${20: } }${21:name=${22: } }${23:profile=${24: } }${25:region=${26: } }${27:http=${28: } }${29:security_token=${30: } }${31:state=${32: } }${33:tags=${34: } }${35:tenancy=${36: } }${37:validate_certs=${38: } }
${39:  when: ${40: variable is defined}}
${41:  with_items: ${42: array}}
]]></content>
	<tabTrigger>ec2_vpc_net</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
