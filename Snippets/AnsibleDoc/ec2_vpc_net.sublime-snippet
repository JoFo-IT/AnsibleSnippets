<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# cidr_block: (required) The primary CIDR of the VPC. After 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# dhcp_opts_id: the id of the DHCP options to use for this vpc 
# dns_hostnames: Whether to enable AWS hostname support. 
# dns_support: Whether to enable AWS DNS support. 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# multi_ok: By default the module will not create another 
# name: (required) The name to give your VPC. This is 
# profile: Uses a boto profile. Only works with boto >= 
# purge_cidrs: Remove CIDRs that are associated with the VPC 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# security_token: AWS STS security token. If not set then the 
# state: The state of the VPC. Either absent or present. 
# tags: The tags you want attached to the VPC. This is 
# tenancy: Whether to be default or dedicated tenancy. This 
# validate_certs: When set to "no", SSL certificates will not be 
}- name: ${2:Name for ec2_vpc_net module.}
  ec2_vpc_net:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:cidr_block}: ${11:"#"}}
${12:   ${13:debug_botocore_endpoint_logs}: ${14:"#"}}
${15:   ${16:dhcp_opts_id}: ${17:"#"}}
${18:   ${19:dns_hostnames}: ${20:"#"}}
${21:   ${22:dns_support}: ${23:"#"}}
${24:   ${25:ec2_url}: ${26:"#"}}
${27:   ${28:multi_ok}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:profile}: ${35:"#"}}
${36:   ${37:purge_cidrs}: ${38:"#"}}
${39:   ${40:region}: ${41:"#"}}
${42:   ${43:}: ${44:"#"}}
${45:   ${46:security_token}: ${47:"#"}}
${48:   ${49:state}: ${50:"#"}}
${51:   ${52:tags}: ${53:"#"}}
${54:   ${55:tenancy}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>ec2_vpc_net</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
