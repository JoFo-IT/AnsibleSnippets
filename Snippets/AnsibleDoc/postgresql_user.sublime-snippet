<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# conn_limit: Specifies the user (role) connection limit. 
# db: Name of database to connect to and where user's 
# encrypted: Whether the password is stored hashed in the 
# expires: The date at which the user's password is to 
# fail_on_user: If `yes', fail when user (role) can't be 
# groups: The list of groups (roles) that need to be 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# name: (required) Name of the user (role) to add or 
# no_password_changes: If `yes', don't inspect database for password 
# password: Set the user's password, before 1.4 this was 
# port: Database port to connect to. 
# priv: Slash-separated PostgreSQL privileges string: 
# role_attr_flags: PostgreSQL user attributes string in the format: 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
# state: The user (role) state. 
}- name: ${2:Name for postgresql_user module.}
  postgresql_user:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:conn_limit}: ${8:"#"}}
${9:   ${10:db}: ${11:"#"}}
${12:   ${13:encrypted}: ${14:"#"}}
${15:   ${16:expires}: ${17:"#"}}
${18:   ${19:fail_on_user}: ${20:"#"}}
${21:   ${22:groups}: ${23:"#"}}
${24:   ${25:login_host}: ${26:"#"}}
${27:   ${28:login_password}: ${29:"#"}}
${30:   ${31:login_unix_socket}: ${32:"#"}}
${33:   ${34:login_user}: ${35:"#"}}
${36:   ${37:name}: ${38:"#"}}
${39:   ${40:no_password_changes}: ${41:"#"}}
${42:   ${43:password}: ${44:"#"}}
${45:   ${46:port}: ${47:"#"}}
${48:   ${49:priv}: ${50:"#"}}
${51:   ${52:role_attr_flags}: ${53:"#"}}
${54:   ${55:session_role}: ${56:"#"}}
${57:   ${58:ssl_mode}: ${59:"#"}}
${60:   ${61:state}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>postgresql_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
