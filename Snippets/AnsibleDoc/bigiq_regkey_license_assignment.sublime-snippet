<snippet>
<content><![CDATA[
${1:# device: When `managed' is `no', specifies the address, 
# device_password: The password of the `device_username'. When 
# device_port: Specifies the port of the remote device to 
# device_username: The username used to connect to the remote 
# key: (required) The registration key that you want to 
# managed: Whether the specified device is a managed or un- 
# pool: (required) The registration key pool to use. 
# provider: A dict object containing connection details. 
# state: When `present', ensures that the device is 
}- name: ${2:Name for bigiq_regkey_license_assignment module.}
  bigiq_regkey_license_assignment:
${3:   ${4:device}: ${5:"#"}}
${6:   ${7:device_password}: ${8:"#"}}
${9:   ${10:device_port}: ${11:"#"}}
${12:   ${13:device_username}: ${14:"#"}}
${15:   ${16:key}: ${17:"#"}}
${18:   ${19:managed}: ${20:"#"}}
${21:   ${22:pool}: ${23:"#"}}
${24:   ${25:provider}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>bigiq_regkey_license_assignment</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
