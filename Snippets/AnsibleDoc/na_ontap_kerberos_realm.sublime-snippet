<snippet>
<content><![CDATA[
${1:# admin_server_ip: IP address of the host where the Kerberos 
# admin_server_port: The TCP port on the Kerberos administration 
# clock_skew: The clock skew in minutes is the tolerance for 
# comment: Optional comment 
# hostname: (required) The hostname or IP address of the 
# http_port: Override the default port (80 or 443) with this 
# https: Enable and disable https 
# kdc_ip: IP address of the Key Distribution Centre (KDC) 
# kdc_port: TCP port on the KDC to be used for Kerberos 
# kdc_vendor: The vendor of the Key Distribution Centre (KDC) 
# ontapi: The ontap api version to use 
# password: (required) Password for the specified user. 
# pw_server_ip: IP address of the host where the Kerberos 
# pw_server_port: The TCP port on the Kerberos password-changing 
# realm: (required) Kerberos realm name 
# state: Whether the Kerberos realm is present or absent. 
# use_rest: REST API if supported by the target system for 
# username: (required) This can be a Cluster-scoped or SVM- 
# validate_certs: If set to `no', the SSL certificates will not be 
# vserver: (required) vserver/svm with kerberos realm 
}- name: ${2:Name for na_ontap_kerberos_realm module.}
  na_ontap_kerberos_realm:
${3:   ${4:admin_server_ip}: ${5:"#"}}
${6:   ${7:admin_server_port}: ${8:"#"}}
${9:   ${10:clock_skew}: ${11:"#"}}
${12:   ${13:comment}: ${14:"#"}}
${15:   ${16:hostname}: ${17:"#"}}
${18:   ${19:http_port}: ${20:"#"}}
${21:   ${22:https}: ${23:"#"}}
${24:   ${25:kdc_ip}: ${26:"#"}}
${27:   ${28:kdc_port}: ${29:"#"}}
${30:   ${31:kdc_vendor}: ${32:"#"}}
${33:   ${34:ontapi}: ${35:"#"}}
${36:   ${37:password}: ${38:"#"}}
${39:   ${40:pw_server_ip}: ${41:"#"}}
${42:   ${43:pw_server_port}: ${44:"#"}}
${45:   ${46:realm}: ${47:"#"}}
${48:   ${49:state}: ${50:"#"}}
${51:   ${52:use_rest}: ${53:"#"}}
${54:   ${55:username}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:   ${61:vserver}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>na_ontap_kerberos_realm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
