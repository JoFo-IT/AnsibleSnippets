<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to create HTTP/HTTPS connection to oVirt: 
# bond: Dictionary describing network bond: `name' - Bond name. `mode' - Bonding mode. `interfaces' - List of 
# check: If `true' verify connectivity between host and engine. Network configuration changes will be rolled back 
# fetch_nested: If `True' the module will fetch additional data from the API. It will fetch IDs of the VMs disks, 
# interface: Name of the network interface where logical network should be attached. 
# labels: List of names of the network label to be assigned to bond or interface. 
# name: (required) Name of the host to manage networks for. 
# nested_attributes: Specifies list of the attributes which should be fetched from the API. This parameter apply only when 
# networks: List of dictionary describing networks to be attached to interface or bond: `name' - Name of the logical 
# poll_interval: Number of the seconds the module waits until another poll request on entity status is sent. 
# save: If `true' network configuration will be persistent, by default they are temporary. 
# state: Should the host be present/absent. 
# timeout: The amount of time in seconds the module should wait for the instance to get into desired state. 
# wait: `True' if the module should wait for the entity to get into desired state. 
}- name: ${2:Name for ovirt_host_networks module.}
  ovirt_host_networks:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:bond}: ${8:"#"}}
${9:   ${10:check}: ${11:"#"}}
${12:   ${13:fetch_nested}: ${14:"#"}}
${15:   ${16:interface}: ${17:"#"}}
${18:   ${19:labels}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:nested_attributes}: ${26:"#"}}
${27:   ${28:networks}: ${29:"#"}}
${30:   ${31:poll_interval}: ${32:"#"}}
${33:   ${34:save}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:timeout}: ${41:"#"}}
${42:   ${43:wait}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>ovirt_host_networks</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
