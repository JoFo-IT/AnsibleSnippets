<snippet>
<content><![CDATA[
${1:# apdex_response_threshold: If a client receives an http response in less 
# apdex_response_tolerated_factor: Client tolerated response latency factor. Client 
# apdex_rtt_threshold: Satisfactory client to avi round trip time(rtt). 
# apdex_rtt_tolerated_factor: Tolerated client to avi round trip time(rtt) 
# apdex_rum_threshold: If a client is able to load a page in less than 
# apdex_rum_tolerated_factor: Virtual service threshold factor for tolerated 
# apdex_server_response_threshold: A server http response is considered satisfied 
# apdex_server_response_tolerated_factor: Server tolerated response latency factor. 
# apdex_server_rtt_threshold: Satisfactory client to avi round trip time(rtt). 
# apdex_server_rtt_tolerated_factor: Tolerated client to avi round trip time(rtt) 
# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_api_patch_op: Patch operation to use when using 
# avi_api_update_method: Default method for object update is HTTP PUT. 
# avi_credentials: Avi Credentials dictionary which can be used in 
# avi_disable_session_cache_as_fact: It disables avi session information to be cached 
# client_log_config: Configure which logs are sent to the avi 
# client_log_streaming_config: Configure to stream logs to an external server. 
# conn_lossy_ooo_threshold: A connection between client and avi is 
# conn_lossy_timeo_rexmt_threshold: A connection between client and avi is 
# conn_lossy_total_rexmt_threshold: A connection between client and avi is 
# conn_lossy_zero_win_size_event_threshold: A client connection is considered lossy when 
# conn_server_lossy_ooo_threshold: A connection between avi and server is 
# conn_server_lossy_timeo_rexmt_threshold: A connection between avi and server is 
# conn_server_lossy_total_rexmt_threshold: A connection between avi and server is 
# conn_server_lossy_zero_win_size_event_threshold: A server connection is considered lossy when 
# controller: IP address or hostname of the controller. The 
# description: User defined description for the object. 
# disable_ondemand_metrics: Virtual service (vs) metrics are processed only 
# disable_se_analytics: Disable node (service engine) level analytics 
# disable_server_analytics: Disable analytics on backend servers. This may 
# disable_vs_analytics: Disable virtualservice (frontend) analytics. 
# enable_advanced_analytics: Enables advanced analytics features like anomaly 
# exclude_client_close_before_request_as_error: Exclude client closed connection before an http 
# exclude_dns_policy_drop_as_significant: Exclude dns policy drops from the list of 
# exclude_gs_down_as_error: Exclude queries to gslb services that are 
# exclude_http_error_codes: List of http status codes to be excluded from 
# exclude_invalid_dns_domain_as_error: Exclude dns queries to domains outside the 
# exclude_invalid_dns_query_as_error: Exclude invalid dns queries from the list of 
# exclude_no_dns_record_as_error: Exclude queries to domains that did not have 
# exclude_no_valid_gs_member_as_error: Exclude queries to gslb services that have no 
# exclude_persistence_change_as_error: Exclude persistence server changed while load 
# exclude_server_dns_error_as_error: Exclude server dns error response from the list 
# exclude_server_tcp_reset_as_error: Exclude server tcp reset from errors. It is 
# exclude_sip_error_codes: List of sip status codes to be excluded from 
# exclude_syn_retransmit_as_error: Exclude 'server unanswered syns' from the list 
# exclude_tcp_reset_as_error: Exclude tcp resets by client from the list of 
# exclude_unsupported_dns_query_as_error: Exclude unsupported dns queries from the list of 
# healthscore_max_server_limit: Skips health score computation of pool servers 
# hs_event_throttle_window: Time window (in secs) within which only unique 
# hs_max_anomaly_penalty: Maximum penalty that may be deducted from health 
# hs_max_resources_penalty: Maximum penalty that may be deducted from health 
# hs_max_security_penalty: Maximum penalty that may be deducted from health 
# hs_min_dos_rate: Dos connection rate below which the dos security 
# hs_performance_boost: Adds free performance score credits to health 
# hs_pscore_traffic_threshold_l4_client: Threshold number of connections in 5min, below 
# hs_pscore_traffic_threshold_l4_server: Threshold number of connections in 5min, below 
# hs_security_certscore_expired: Score assigned when the certificate has expired. 
# hs_security_certscore_gt30d: Score assigned when the certificate expires in 
# hs_security_certscore_le07d: Score assigned when the certificate expires in 
# hs_security_certscore_le30d: Score assigned when the certificate expires in 
# hs_security_chain_invalidity_penalty: Penalty for allowing certificates with invalid 
# hs_security_cipherscore_eq000b: Score assigned when the minimum cipher strength 
# hs_security_cipherscore_ge128b: Score assigned when the minimum cipher strength 
# hs_security_cipherscore_lt128b: Score assigned when the minimum cipher strength 
# hs_security_encalgo_score_none: Score assigned when no algorithm is used for 
# hs_security_encalgo_score_rc4: Score assigned when rc4 algorithm is used for 
# hs_security_hsts_penalty: Penalty for not enabling hsts. Allowed values 
# hs_security_nonpfs_penalty: Penalty for allowing non-pfs handshakes. Allowed 
# hs_security_selfsignedcert_penalty: Deprecated. Allowed values are 0-5. Default 
# hs_security_ssl30_score: Score assigned when supporting ssl3.0 encryption 
# hs_security_tls10_score: Score assigned when supporting tls1.0 encryption 
# hs_security_tls11_score: Score assigned when supporting tls1.1 encryption 
# hs_security_tls12_score: Score assigned when supporting tls1.2 encryption 
# hs_security_weak_signature_algo_penalty: Penalty for allowing weak signature 
# name: (required) The name of the analytics profile. 
# ondemand_metrics_idle_timeout: This flag sets the time duration of no live data 
# password: Password of Avi user in Avi controller. The 
# ranges: List of http status code ranges to be excluded 
# resp_code_block: Block of http response codes to be excluded from 
# sensitive_log_profile: Rules applied to the http application log for 
# sip_log_depth: Maximum number of sip messages added in logs for 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The 
# uuid: Uuid of the analytics profile. 
}- name: ${2:Name for avi_analyticsprofile module.}
  avi_analyticsprofile:
${3:   ${4:apdex_response_threshold}: ${5:"#"}}
${6:   ${7:apdex_response_tolerated_factor}: ${8:"#"}}
${9:   ${10:apdex_rtt_threshold}: ${11:"#"}}
${12:   ${13:apdex_rtt_tolerated_factor}: ${14:"#"}}
${15:   ${16:apdex_rum_threshold}: ${17:"#"}}
${18:   ${19:apdex_rum_tolerated_factor}: ${20:"#"}}
${21:   ${22:apdex_server_response_threshold}: ${23:"#"}}
${24:   ${25:apdex_server_response_tolerated_factor}: ${26:"#"}}
${27:   ${28:apdex_server_rtt_threshold}: ${29:"#"}}
${30:   ${31:apdex_server_rtt_tolerated_factor}: ${32:"#"}}
${33:   ${34:api_context}: ${35:"#"}}
${36:   ${37:api_version}: ${38:"#"}}
${39:   ${40:avi_api_patch_op}: ${41:"#"}}
${42:   ${43:avi_api_update_method}: ${44:"#"}}
${45:   ${46:avi_credentials}: ${47:"#"}}
${48:   ${49:avi_disable_session_cache_as_fact}: ${50:"#"}}
${51:   ${52:client_log_config}: ${53:"#"}}
${54:   ${55:client_log_streaming_config}: ${56:"#"}}
${57:   ${58:conn_lossy_ooo_threshold}: ${59:"#"}}
${60:   ${61:conn_lossy_timeo_rexmt_threshold}: ${62:"#"}}
${63:   ${64:conn_lossy_total_rexmt_threshold}: ${65:"#"}}
${66:   ${67:conn_lossy_zero_win_size_event_threshold}: ${68:"#"}}
${69:   ${70:conn_server_lossy_ooo_threshold}: ${71:"#"}}
${72:   ${73:conn_server_lossy_timeo_rexmt_threshold}: ${74:"#"}}
${75:   ${76:conn_server_lossy_total_rexmt_threshold}: ${77:"#"}}
${78:   ${79:conn_server_lossy_zero_win_size_event_threshold}: ${80:"#"}}
${81:   ${82:controller}: ${83:"#"}}
${84:   ${85:description}: ${86:"#"}}
${87:   ${88:disable_ondemand_metrics}: ${89:"#"}}
${90:   ${91:disable_se_analytics}: ${92:"#"}}
${93:   ${94:disable_server_analytics}: ${95:"#"}}
${96:   ${97:disable_vs_analytics}: ${98:"#"}}
${99:   ${100:enable_advanced_analytics}: ${101:"#"}}
${102:   ${103:exclude_client_close_before_request_as_error}: ${104:"#"}}
${105:   ${106:exclude_dns_policy_drop_as_significant}: ${107:"#"}}
${108:   ${109:exclude_gs_down_as_error}: ${110:"#"}}
${111:   ${112:exclude_http_error_codes}: ${113:"#"}}
${114:   ${115:exclude_invalid_dns_domain_as_error}: ${116:"#"}}
${117:   ${118:exclude_invalid_dns_query_as_error}: ${119:"#"}}
${120:   ${121:exclude_no_dns_record_as_error}: ${122:"#"}}
${123:   ${124:exclude_no_valid_gs_member_as_error}: ${125:"#"}}
${126:   ${127:exclude_persistence_change_as_error}: ${128:"#"}}
${129:   ${130:exclude_server_dns_error_as_error}: ${131:"#"}}
${132:   ${133:exclude_server_tcp_reset_as_error}: ${134:"#"}}
${135:   ${136:exclude_sip_error_codes}: ${137:"#"}}
${138:   ${139:exclude_syn_retransmit_as_error}: ${140:"#"}}
${141:   ${142:exclude_tcp_reset_as_error}: ${143:"#"}}
${144:   ${145:exclude_unsupported_dns_query_as_error}: ${146:"#"}}
${147:   ${148:healthscore_max_server_limit}: ${149:"#"}}
${150:   ${151:hs_event_throttle_window}: ${152:"#"}}
${153:   ${154:hs_max_anomaly_penalty}: ${155:"#"}}
${156:   ${157:hs_max_resources_penalty}: ${158:"#"}}
${159:   ${160:hs_max_security_penalty}: ${161:"#"}}
${162:   ${163:hs_min_dos_rate}: ${164:"#"}}
${165:   ${166:hs_performance_boost}: ${167:"#"}}
${168:   ${169:hs_pscore_traffic_threshold_l4_client}: ${170:"#"}}
${171:   ${172:hs_pscore_traffic_threshold_l4_server}: ${173:"#"}}
${174:   ${175:hs_security_certscore_expired}: ${176:"#"}}
${177:   ${178:hs_security_certscore_gt30d}: ${179:"#"}}
${180:   ${181:hs_security_certscore_le07d}: ${182:"#"}}
${183:   ${184:hs_security_certscore_le30d}: ${185:"#"}}
${186:   ${187:hs_security_chain_invalidity_penalty}: ${188:"#"}}
${189:   ${190:hs_security_cipherscore_eq000b}: ${191:"#"}}
${192:   ${193:hs_security_cipherscore_ge128b}: ${194:"#"}}
${195:   ${196:hs_security_cipherscore_lt128b}: ${197:"#"}}
${198:   ${199:hs_security_encalgo_score_none}: ${200:"#"}}
${201:   ${202:hs_security_encalgo_score_rc4}: ${203:"#"}}
${204:   ${205:hs_security_hsts_penalty}: ${206:"#"}}
${207:   ${208:hs_security_nonpfs_penalty}: ${209:"#"}}
${210:   ${211:hs_security_selfsignedcert_penalty}: ${212:"#"}}
${213:   ${214:hs_security_ssl30_score}: ${215:"#"}}
${216:   ${217:hs_security_tls10_score}: ${218:"#"}}
${219:   ${220:hs_security_tls11_score}: ${221:"#"}}
${222:   ${223:hs_security_tls12_score}: ${224:"#"}}
${225:   ${226:hs_security_weak_signature_algo_penalty}: ${227:"#"}}
${228:   ${229:name}: ${230:"#"}}
${231:   ${232:ondemand_metrics_idle_timeout}: ${233:"#"}}
${234:   ${235:password}: ${236:"#"}}
${237:   ${238:ranges}: ${239:"#"}}
${240:   ${241:resp_code_block}: ${242:"#"}}
${243:   ${244:sensitive_log_profile}: ${245:"#"}}
${246:   ${247:sip_log_depth}: ${248:"#"}}
${249:   ${250:state}: ${251:"#"}}
${252:   ${253:tenant}: ${254:"#"}}
${255:   ${256:tenant_ref}: ${257:"#"}}
${258:   ${259:tenant_uuid}: ${260:"#"}}
${261:   ${262:url}: ${263:"#"}}
${264:   ${265:username}: ${266:"#"}}
${267:   ${268:uuid}: ${269:"#"}}
${270:${271:   become: ${272:true}} 
${273:   become_method: ${274:su}} 
${275:   become_user: ${276:nobody}} 
${277:   become_flags: ${278:"-s /bin/sh"}}} 
${279:   when: ${280:variable is defined}} 
${281:   with_items: ${282:array}} 
]]></content>
	<tabTrigger>avi_analyticsprofile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
