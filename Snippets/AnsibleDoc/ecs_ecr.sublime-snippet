<snippet>
<content><![CDATA[
${1:# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# delete_policy: if yes, remove the policy from the repository 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# force_set_policy: if no, prevents setting a policy that would 
# name: (required) the name of the repository 
# policy: JSON or dict that represents the new policy 
# profile: Uses a boto profile. Only works with boto >= 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# registry_id: AWS account id associated with the registry. If 
# security_token: AWS STS security token. If not set then the 
# state: create or destroy the repository 
# validate_certs: When set to "no", SSL certificates will not be 
}- name: ${2:Name for ecs_ecr module.}
  ecs_ecr:
${3:   ${4:aws_access_key}: ${5:"#"}}
${6:   ${7:aws_secret_key}: ${8:"#"}}
${9:   ${10:debug_botocore_endpoint_logs}: ${11:"#"}}
${12:   ${13:delete_policy}: ${14:"#"}}
${15:   ${16:ec2_url}: ${17:"#"}}
${18:   ${19:force_set_policy}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:policy}: ${26:"#"}}
${27:   ${28:profile}: ${29:"#"}}
${30:   ${31:region}: ${32:"#"}}
${33:   ${34:}: ${35:"#"}}
${36:   ${37:registry_id}: ${38:"#"}}
${39:   ${40:security_token}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:validate_certs}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>ecs_ecr</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
