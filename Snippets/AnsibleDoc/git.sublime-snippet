<snippet>
<content><![CDATA[
${1:# accept_hostkey: if `yes', ensure that "-o 
# archive: Specify archive file path with extension. If 
# archive_prefix: Specify a prefix to add to each file path in 
# bare: if `yes', repository will be created as a bare 
# clone: If `no', do not clone the repository even if it 
# depth: Create a shallow clone with a history truncated 
# dest: (required) The path of where the repository 
# executable: Path to git executable to use. If not supplied, 
# force: If `yes', any modified files in the working 
# gpg_whitelist: A list of trusted GPG fingerprints to compare to 
# key_file: Specify an optional private key file path, on 
# recursive: if `no', repository will be cloned without the 
# reference: Reference repository (see "git clone --reference 
# refspec: Add an additional refspec to be fetched. If 
# remote: Name of the remote. 
# repo: (required) git, SSH, or HTTP(S) protocol address 
# separate_git_dir: The path to place the cloned repository. If 
# ssh_opts: Creates a wrapper script and exports the path as 
# track_submodules: if `yes', submodules will track the latest 
# umask: The umask to set before doing any checkouts, or 
# update: If `no', do not retrieve new revisions from the 
# verify_commit: if `yes', when cloning or checking out a 
# version: What version of the repository to check out. 
}- name: ${2:Name for git module.}
  git:
${3:   ${4:accept_hostkey}: ${5:"#"}}
${6:   ${7:archive}: ${8:"#"}}
${9:   ${10:archive_prefix}: ${11:"#"}}
${12:   ${13:bare}: ${14:"#"}}
${15:   ${16:clone}: ${17:"#"}}
${18:   ${19:depth}: ${20:"#"}}
${21:   ${22:dest}: ${23:"#"}}
${24:   ${25:executable}: ${26:"#"}}
${27:   ${28:force}: ${29:"#"}}
${30:   ${31:gpg_whitelist}: ${32:"#"}}
${33:   ${34:key_file}: ${35:"#"}}
${36:   ${37:recursive}: ${38:"#"}}
${39:   ${40:reference}: ${41:"#"}}
${42:   ${43:refspec}: ${44:"#"}}
${45:   ${46:remote}: ${47:"#"}}
${48:   ${49:repo}: ${50:"#"}}
${51:   ${52:separate_git_dir}: ${53:"#"}}
${54:   ${55:ssh_opts}: ${56:"#"}}
${57:   ${58:track_submodules}: ${59:"#"}}
${60:   ${61:umask}: ${62:"#"}}
${63:   ${64:update}: ${65:"#"}}
${66:   ${67:verify_commit}: ${68:"#"}}
${69:   ${70:version}: ${71:"#"}}
${72:${73:   become: ${74:true}} 
${75:   become_method: ${76:su}} 
${77:   become_user: ${78:nobody}} 
${79:   become_flags: ${80:"-s /bin/sh"}}} 
${81:   when: ${82:variable is defined}} 
${83:   with_items: ${84:array}} 
]]></content>
	<tabTrigger>git</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
