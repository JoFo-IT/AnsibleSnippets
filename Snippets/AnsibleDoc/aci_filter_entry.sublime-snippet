<snippet>
<content><![CDATA[
${1:# arp_flag: The arp flag to use when the ether_type is arp. The APIC defaults new Filter Entries to `unspecified'. 
# description: Description for the Filter Entry. 
# dst_port: Used to set both destination start and end ports to the same value when ip_protocol is tcp or udp. The 
# dst_port_end: Used to set the destination end port when ip_protocol is tcp or udp. The APIC defaults new Filter 
# dst_port_start: Used to set the destination start port when ip_protocol is tcp or udp. The APIC defaults new Filter 
# entry: Then name of the Filter Entry. 
# ether_type: The Ethernet type. The APIC defaults new Filter Entries to `unspecified'. 
# filter: The name of Filter that the entry should belong to. 
# hostname: (required) IP Address or hostname of APIC resolvable by Ansible control host. 
# icmp6_msg_type: ICMPv6 message type; used when ip_protocol is icmpv6. The APIC defaults new Filter Entries to 
# icmp_msg_type: ICMPv4 message type; used when ip_protocol is icmp. The APIC defaults new Filter Entries to 
# ip_protocol: The IP Protocol type when ether_type is ip. The APIC defaults new Filter Entries to `unspecified'. 
# password: (required) The password to use for authentication. 
# state: present, absent, query 
# stateful: Determines the statefulness of the filter entry. 
# tenant: The name of the tenant. 
# timeout: The socket level timeout in seconds. 
# use_proxy: If `no', it will not use a proxy, even if one is defined in an environment variable on the target hosts. 
# use_ssl: If `no', an HTTP connection will be used instead of the default HTTPS connection. 
# username: (required) The username to use for authentication. 
# validate_certs: If `no', SSL certificates will not be validated. This should only set to `no' used on personally 
}- name: ${2:Name for aci_filter_entry module.}
  aci_filter_entry:
${3:   ${4:arp_flag}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:dst_port}: ${11:"#"}}
${12:   ${13:dst_port_end}: ${14:"#"}}
${15:   ${16:dst_port_start}: ${17:"#"}}
${18:   ${19:entry}: ${20:"#"}}
${21:   ${22:ether_type}: ${23:"#"}}
${24:   ${25:filter}: ${26:"#"}}
${27:   ${28:hostname}: ${29:"#"}}
${30:   ${31:icmp6_msg_type}: ${32:"#"}}
${33:   ${34:icmp_msg_type}: ${35:"#"}}
${36:   ${37:ip_protocol}: ${38:"#"}}
${39:   ${40:password}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:stateful}: ${47:"#"}}
${48:   ${49:tenant}: ${50:"#"}}
${51:   ${52:timeout}: ${53:"#"}}
${54:   ${55:use_proxy}: ${56:"#"}}
${57:   ${58:use_ssl}: ${59:"#"}}
${60:   ${61:username}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>aci_filter_entry</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
