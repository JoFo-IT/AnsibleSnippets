<snippet>
<content><![CDATA[
${1:# aggregate: The set of username objects to be configured on the remote Cisco Nexus device.  The list entries can 
# configured_password: The password to be configured on the network device. The password needs to be provided in cleartext and 
# host: (required) Specifies the DNS host name or address for connecting to the remote device over the specified 
# name: The username to be configured on the remote Cisco Nexus device.  This argument accepts a stringv value 
# password: Specifies the password to use to authenticate the connection to the remote device.  This is a common 
# port: Specifies the port to use when building the connection to the remote device.  This value applies to 
# provider: Convenience method that allows all `nxos' arguments to be passed as a dict object.  All constraints 
# purge: The `purge' argument instructs the module to consider the resource definition absolute.  It will remove 
# role: The `role' argument configures the role for the username in the device running configuration.  The 
# ssh_keyfile: Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only 
# sshkey: The `sshkey' argument defines the SSH public key to configure for the username.  This argument accepts a 
# state: The `state' argument configures the state of the username definition as it relates to the device 
# timeout: Specifies the timeout in seconds for communicating with the network device for either connecting or 
# transport: (required) Configures the transport connection to use when connecting to the remote device.  The 
# update_password: Since passwords are encrypted in the device running config, this argument will instruct the module when 
# use_ssl: Configures the `transport' to use SSL if set to true only when the `transport=nxapi', otherwise this 
# username: Configures the username to use to authenticate the connection to the remote device.  This value is used 
# validate_certs: If `no', SSL certificates will not be validated. This should only be used on personally controlled sites 
}- name: ${2:Name for nxos_user module.}
  nxos_user:
${3:   ${4:aggregate}: ${5:"#"}}
${6:   ${7:configured_password}: ${8:"#"}}
${9:   ${10:host}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:password}: ${17:"#"}}
${18:   ${19:port}: ${20:"#"}}
${21:   ${22:provider}: ${23:"#"}}
${24:   ${25:purge}: ${26:"#"}}
${27:   ${28:role}: ${29:"#"}}
${30:   ${31:ssh_keyfile}: ${32:"#"}}
${33:   ${34:sshkey}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:timeout}: ${41:"#"}}
${42:   ${43:transport}: ${44:"#"}}
${45:   ${46:update_password}: ${47:"#"}}
${48:   ${49:use_ssl}: ${50:"#"}}
${51:   ${52:username}: ${53:"#"}}
${54:   ${55:validate_certs}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>nxos_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
