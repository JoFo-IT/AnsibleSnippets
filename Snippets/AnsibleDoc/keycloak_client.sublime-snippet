<snippet>
<content><![CDATA[
${1:# admin_url: URL to the admin interface of the client This is 
# attributes: A dict of further attributes for this client. 
# auth_client_id: (required) OpenID Connect `client_id' to 
# auth_client_secret: Client Secret to use in conjunction with 
# auth_keycloak_url: (required) URL to the Keycloak instance. 
# auth_password: (required) Password to authenticate for API 
# auth_realm: (required) Keycloak realm name to authenticate 
# auth_username: (required) Username to authenticate for API 
# authorization_services_enabled: Are authorization services enabled for this 
# authorization_settings: a data structure defining the authorization 
# tml: _resourceserv 
# base_url: Default URL to use when the auth server needs to 
# bearer_only: The access type of this client is bearer-only. 
# client_authenticator_type: How do clients authenticate with the auth 
# client_id: Client id of client to be worked on. This is 
# client_template: Client template to use for this client. If it 
# consent_required: If enabled, users have to consent to client 
# default_roles: list of default roles for this client. If the 
# description: Description of the client in Keycloak 
# direct_access_grants_enabled: Are direct access grants enabled for this client 
# enabled: Is this client enabled or not? 
# frontchannel_logout: Is frontchannel logout enabled for this client 
# full_scope_allowed: Is the "Full Scope Allowed" feature set for this 
# id: Id of client to be worked on. This is usually an 
# implicit_flow_enabled: Enable implicit flow for this client or not 
# name: Name of the client (this is not the same as 
# node_re_registration_timeout: Cluster node re-registration timeout for this 
# not_before: Revoke any tokens issued before this date for 
# protocol: Type of client (either `openid-connect' or 
# protocol_mappers: a list of dicts defining protocol mappers for 
# public_client: Is the access type for this client public or 
# redirect_uris: Acceptable redirect URIs for this client. This 
# registered_nodes: dict of registered cluster nodes (with 
# registration_access_token: The registration access token provides access 
# root_url: Root URL appended to relative URLs for this 
# secret: When using `client_authenticator_type' `client- 
# service_accounts_enabled: Are service accounts enabled for this client or 
# standard_flow_enabled: Enable standard flow for this client or not 
# state: State of the client On `present', the client 
# surrogate_auth_required: Whether or not surrogate auth is required. This 
# use_template_config: Whether or not to use configuration from the 
# use_template_mappers: Whether or not to use mapper configuration from 
# use_template_scope: Whether or not to use scope configuration from 
# validate_certs: Verify TLS certificates (do not disable this in 
# web_origins: List of allowed CORS origins. This is 
}- name: ${2:Name for keycloak_client module.}
  keycloak_client:
${3:   ${4:admin_url}: ${5:"#"}}
${6:   ${7:attributes}: ${8:"#"}}
${9:   ${10:auth_client_id}: ${11:"#"}}
${12:   ${13:auth_client_secret}: ${14:"#"}}
${15:   ${16:auth_keycloak_url}: ${17:"#"}}
${18:   ${19:auth_password}: ${20:"#"}}
${21:   ${22:auth_realm}: ${23:"#"}}
${24:   ${25:auth_username}: ${26:"#"}}
${27:   ${28:authorization_services_enabled}: ${29:"#"}}
${30:   ${31:authorization_settings}: ${32:"#"}}
${33:   ${34:tml}: ${35:"#"}}
${36:   ${37:base_url}: ${38:"#"}}
${39:   ${40:bearer_only}: ${41:"#"}}
${42:   ${43:client_authenticator_type}: ${44:"#"}}
${45:   ${46:client_id}: ${47:"#"}}
${48:   ${49:client_template}: ${50:"#"}}
${51:   ${52:consent_required}: ${53:"#"}}
${54:   ${55:default_roles}: ${56:"#"}}
${57:   ${58:description}: ${59:"#"}}
${60:   ${61:direct_access_grants_enabled}: ${62:"#"}}
${63:   ${64:enabled}: ${65:"#"}}
${66:   ${67:frontchannel_logout}: ${68:"#"}}
${69:   ${70:full_scope_allowed}: ${71:"#"}}
${72:   ${73:id}: ${74:"#"}}
${75:   ${76:implicit_flow_enabled}: ${77:"#"}}
${78:   ${79:name}: ${80:"#"}}
${81:   ${82:node_re_registration_timeout}: ${83:"#"}}
${84:   ${85:not_before}: ${86:"#"}}
${87:   ${88:protocol}: ${89:"#"}}
${90:   ${91:protocol_mappers}: ${92:"#"}}
${93:   ${94:public_client}: ${95:"#"}}
${96:   ${97:redirect_uris}: ${98:"#"}}
${99:   ${100:registered_nodes}: ${101:"#"}}
${102:   ${103:registration_access_token}: ${104:"#"}}
${105:   ${106:root_url}: ${107:"#"}}
${108:   ${109:secret}: ${110:"#"}}
${111:   ${112:service_accounts_enabled}: ${113:"#"}}
${114:   ${115:standard_flow_enabled}: ${116:"#"}}
${117:   ${118:state}: ${119:"#"}}
${120:   ${121:surrogate_auth_required}: ${122:"#"}}
${123:   ${124:use_template_config}: ${125:"#"}}
${126:   ${127:use_template_mappers}: ${128:"#"}}
${129:   ${130:use_template_scope}: ${131:"#"}}
${132:   ${133:validate_certs}: ${134:"#"}}
${135:   ${136:web_origins}: ${137:"#"}}
${138:${139:   become: ${140:true}} 
${141:   become_method: ${142:su}} 
${143:   become_user: ${144:nobody}} 
${145:   become_flags: ${146:"-s /bin/sh"}}} 
${147:   when: ${148:variable is defined}} 
${149:   with_items: ${150:array}} 
]]></content>
	<tabTrigger>keycloak_client</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
