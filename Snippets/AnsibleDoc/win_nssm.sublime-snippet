<snippet>
<content><![CDATA[
${1:# app_parameters: Parameters to be passed to the application when it starts. Use either this or 
# app_parameters_free_form: Single string of parameters to be passed to the service. Use either this or `app_parameters', not both 
# application: The application binary to run as a service Specify this whenever the service may need to be installed 
# dependencies: Service dependencies that has to be started to trigger startup, separated by comma. 
# name: (required) Name of the service to operate on 
# password: Password to be used for service startup 
# start_mode: If `auto' is selected, the service will start at bootup. `manual' means that the service will start only 
# state: State of the service on the system Note that NSSM actions like "pause", "continue", "rotate" do not fit 
# stderr_file: Path to receive error output 
# stdout_file: Path to receive output 
# user: User to be used for service startup 
}- name: ${2:Name for win_nssm module.}
  win_nssm:
${3:   ${4:app_parameters}: ${5:"#"}}
${6:   ${7:app_parameters_free_form}: ${8:"#"}}
${9:   ${10:application}: ${11:"#"}}
${12:   ${13:dependencies}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:password}: ${20:"#"}}
${21:   ${22:start_mode}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:stderr_file}: ${29:"#"}}
${30:   ${31:stdout_file}: ${32:"#"}}
${33:   ${34:user}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>win_nssm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
