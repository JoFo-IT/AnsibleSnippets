<snippet>
<content><![CDATA[
${1:# backrefs: Used with `state=present'. If set, line can contain backreferences (both positional and named) that will 
# backup: Create a backup file including the timestamp information so you can get the original file back if you 
# create: Used with `state=present'. If specified, the file will be created if it does not already exist. By 
# encoding: Specifies the encoding of the source text file to operate on (and thus what the output encoding will 
# insertafter: Used with `state=present'. If specified, the line will be inserted after the last match of specified 
# insertbefore: Used with `state=present'. If specified, the line will be inserted before the last match of specified 
# line: Required for `state=present'. The line to insert/replace into the file. If `backrefs' is set, may 
# newline: Specifies the line separator style to use for the modified file. This defaults to the windows line 
# path: (required) The path of the file to modify. Note that the Windows path delimiter `\' must be escaped as 
# regexp: The regular expression to look for in every line of the file. For `state=present', the pattern to 
# state: Whether the line should be there or not. 
# validate: Validation to run before copying into place. Use %s in the command to indicate the current file to 
}- name: ${2:Name for win_lineinfile module.}
  win_lineinfile:
${3:   ${4:backrefs}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:create}: ${11:"#"}}
${12:   ${13:encoding}: ${14:"#"}}
${15:   ${16:insertafter}: ${17:"#"}}
${18:   ${19:insertbefore}: ${20:"#"}}
${21:   ${22:line}: ${23:"#"}}
${24:   ${25:newline}: ${26:"#"}}
${27:   ${28:path}: ${29:"#"}}
${30:   ${31:regexp}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:validate}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>win_lineinfile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
