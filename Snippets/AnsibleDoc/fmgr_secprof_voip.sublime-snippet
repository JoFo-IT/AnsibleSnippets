<snippet>
<content><![CDATA[
${1:# adom: The ADOM the configuration should belong to. 
# comment: Comment. 
# mode: Sets one of three modes for managing the object. 
# name: Profile name. 
# sccp: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# sccp_block_mcast: Enable/disable block multicast RTP connections. 
# sccp_log_call_summary: Enable/disable log summary of SCCP calls. choice 
# sccp_log_violations: Enable/disable logging of SCCP violations. 
# sccp_max_calls: Maximum calls per minute per SCCP client (max 
# sccp_status: Enable/disable SCCP. choice | disable | Disable 
# sccp_verify_header: Enable/disable verify SCCP header content. 
# sip: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# sip_ack_rate: ACK request rate limit (per second, per policy). 
# sip_block_ack: Enable/disable block ACK requests. choice | 
# sip_block_bye: Enable/disable block BYE requests. choice | 
# sip_block_cancel: Enable/disable block CANCEL requests. choice | 
# sip_block_geo_red_options: Enable/disable block OPTIONS requests, but 
# sip_block_info: Enable/disable block INFO requests. choice | 
# sip_block_invite: Enable/disable block INVITE requests. choice | 
# sip_block_long_lines: Enable/disable block requests with headers 
# sip_block_message: Enable/disable block MESSAGE requests. choice | 
# sip_block_notify: Enable/disable block NOTIFY requests. choice | 
# sip_block_options: Enable/disable block OPTIONS requests and no 
# sip_block_prack: Enable/disable block prack requests. choice | 
# sip_block_publish: Enable/disable block PUBLISH requests. choice | 
# sip_block_refer: Enable/disable block REFER requests. choice | 
# sip_block_register: Enable/disable block REGISTER requests. choice | 
# sip_block_subscribe: Enable/disable block SUBSCRIBE requests. choice 
# sip_block_unknown: Block unrecognized SIP requests (enabled by 
# sip_block_update: Enable/disable block UPDATE requests. choice | 
# sip_bye_rate: BYE request rate limit (per second, per policy). 
# sip_call_keepalive: Continue tracking calls with no RTP for this 
# sip_cancel_rate: CANCEL request rate limit (per second, per 
# sip_contact_fixup: Fixup contact anyway even if contact's IP|port 
# sip_hnt_restrict_source_ip: Enable/disable restrict RTP source IP to be the 
# sip_hosted_nat_traversal: Hosted NAT Traversal (HNT). choice | disable | 
# sip_info_rate: INFO request rate limit (per second, per 
# sip_invite_rate: INVITE request rate limit (per second, per 
# sip_ips_rtp: Enable/disable allow IPS on RTP. choice | 
# sip_log_call_summary: Enable/disable logging of SIP call summary. 
# sip_log_violations: Enable/disable logging of SIP violations. choice 
# sip_malformed_header_allow: Action for malformed Allow header. choice | pass 
# sip_malformed_header_call_id: Action for malformed Call-ID header. choice | 
# sip_malformed_header_contact: Action for malformed Contact header. choice | 
# sip_malformed_header_content_length: Action for malformed Content-Length header. 
# sip_malformed_header_content_type: Action for malformed Content-Type header. choice 
# sip_malformed_header_cseq: Action for malformed CSeq header. choice | pass 
# sip_malformed_header_expires: Action for malformed Expires header. choice | 
# sip_malformed_header_from: Action for malformed From header. choice | pass 
# sip_malformed_header_max_forwards: Action for malformed Max-Forwards header. choice 
# sip_malformed_header_p_asserted_identity: Action for malformed P-Asserted-Identity header. 
# sip_malformed_header_rack: Action for malformed RAck header. choice | pass 
# sip_malformed_header_record_route: Action for malformed Record-Route header. choice 
# sip_malformed_header_route: Action for malformed Route header. choice | pass 
# sip_malformed_header_rseq: Action for malformed RSeq header. choice | pass 
# sip_malformed_header_sdp_a: Action for malformed SDP a line. choice | pass | 
# sip_malformed_header_sdp_b: Action for malformed SDP b line. choice | pass | 
# sip_malformed_header_sdp_c: Action for malformed SDP c line. choice | pass | 
# sip_malformed_header_sdp_i: Action for malformed SDP i line. choice | pass | 
# sip_malformed_header_sdp_k: Action for malformed SDP k line. choice | pass | 
# sip_malformed_header_sdp_m: Action for malformed SDP m line. choice | pass | 
# sip_malformed_header_sdp_o: Action for malformed SDP o line. choice | pass | 
# sip_malformed_header_sdp_r: Action for malformed SDP r line. choice | pass | 
# sip_malformed_header_sdp_s: Action for malformed SDP s line. choice | pass | 
# sip_malformed_header_sdp_t: Action for malformed SDP t line. choice | pass | 
# sip_malformed_header_sdp_v: Action for malformed SDP v line. choice | pass | 
# sip_malformed_header_sdp_z: Action for malformed SDP z line. choice | pass | 
# sip_malformed_header_to: Action for malformed To header. choice | pass | 
# sip_malformed_header_via: Action for malformed VIA header. choice | pass | 
# sip_malformed_request_line: Action for malformed request line. choice | pass 
# sip_max_body_length: Maximum SIP message body length (0 meaning no 
# sip_max_dialogs: Maximum number of concurrent calls/dialogs (per 
# sip_max_idle_dialogs: Maximum number established but idle dialogs to 
# sip_max_line_length: Maximum SIP header line length (78-4096). 
# sip_message_rate: MESSAGE request rate limit (per second, per 
# sip_nat_trace: Enable/disable preservation of original IP in 
# sip_no_sdp_fixup: Enable/disable no SDP fix-up. choice | disable | 
# sip_notify_rate: NOTIFY request rate limit (per second, per 
# sip_open_contact_pinhole: Enable/disable open pinhole for non-REGISTER 
# sip_open_record_route_pinhole: Enable/disable open pinhole for Record-Route 
# sip_open_register_pinhole: Enable/disable open pinhole for REGISTER Contact 
# sip_open_via_pinhole: Enable/disable open pinhole for Via port. choice 
# sip_options_rate: OPTIONS request rate limit (per second, per 
# sip_prack_rate: PRACK request rate limit (per second, per 
# sip_preserve_override: Override i line to preserve original IPS 
# sip_provisional_invite_expiry_time: Expiry time for provisional INVITE (10 - 3600 
# sip_publish_rate: PUBLISH request rate limit (per second, per 
# sip_refer_rate: REFER request rate limit (per second, per 
# sip_register_contact_trace: Enable/disable trace original IP/port within the 
# sip_register_rate: REGISTER request rate limit (per second, per 
# sip_rfc2543_branch: Enable/disable support via branch compliant with 
# sip_rtp: Enable/disable create pinholes for RTP traffic 
# sip_ssl_algorithm: Relative strength of encryption algorithms 
# sip_ssl_auth_client: Require a client certificate and authenticate it 
# sip_ssl_auth_server: Authenticate the server's certificate with the 
# sip_ssl_client_certificate: Name of Certificate to offer to server if 
# sip_ssl_client_renegotiation: Allow/block client renegotiation by server. 
# sip_ssl_max_version: Highest SSL/TLS version to negotiate. choice | 
# sip_ssl_min_version: Lowest SSL/TLS version to negotiate. choice | 
# sip_ssl_mode: SSL/TLS mode for encryption &amp; decryption of 
# sip_ssl_pfs: SSL Perfect Forward Secrecy. choice | require | 
# sip_ssl_send_empty_frags: Send empty fragments to avoid attack on CBC IV 
# sip_ssl_server_certificate: Name of Certificate return to the client in 
# sip_status: Enable/disable SIP. choice | disable | Disable 
# sip_strict_register: Enable/disable only allow the registrar to 
# sip_subscribe_rate: SUBSCRIBE request rate limit (per second, per 
# sip_unknown_header: Action for unknown SIP header. choice | pass | 
# sip_update_rate: UPDATE request rate limit (per second, per 
}- name: ${2:Name for fmgr_secprof_voip module.}
  fmgr_secprof_voip:
${3:   ${4:adom}: ${5:"#"}}
${6:   ${7:comment}: ${8:"#"}}
${9:   ${10:mode}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:sccp}: ${17:"#"}}
${18:   ${19:sccp_block_mcast}: ${20:"#"}}
${21:   ${22:sccp_log_call_summary}: ${23:"#"}}
${24:   ${25:sccp_log_violations}: ${26:"#"}}
${27:   ${28:sccp_max_calls}: ${29:"#"}}
${30:   ${31:sccp_status}: ${32:"#"}}
${33:   ${34:sccp_verify_header}: ${35:"#"}}
${36:   ${37:sip}: ${38:"#"}}
${39:   ${40:sip_ack_rate}: ${41:"#"}}
${42:   ${43:sip_block_ack}: ${44:"#"}}
${45:   ${46:sip_block_bye}: ${47:"#"}}
${48:   ${49:sip_block_cancel}: ${50:"#"}}
${51:   ${52:sip_block_geo_red_options}: ${53:"#"}}
${54:   ${55:sip_block_info}: ${56:"#"}}
${57:   ${58:sip_block_invite}: ${59:"#"}}
${60:   ${61:sip_block_long_lines}: ${62:"#"}}
${63:   ${64:sip_block_message}: ${65:"#"}}
${66:   ${67:sip_block_notify}: ${68:"#"}}
${69:   ${70:sip_block_options}: ${71:"#"}}
${72:   ${73:sip_block_prack}: ${74:"#"}}
${75:   ${76:sip_block_publish}: ${77:"#"}}
${78:   ${79:sip_block_refer}: ${80:"#"}}
${81:   ${82:sip_block_register}: ${83:"#"}}
${84:   ${85:sip_block_subscribe}: ${86:"#"}}
${87:   ${88:sip_block_unknown}: ${89:"#"}}
${90:   ${91:sip_block_update}: ${92:"#"}}
${93:   ${94:sip_bye_rate}: ${95:"#"}}
${96:   ${97:sip_call_keepalive}: ${98:"#"}}
${99:   ${100:sip_cancel_rate}: ${101:"#"}}
${102:   ${103:sip_contact_fixup}: ${104:"#"}}
${105:   ${106:sip_hnt_restrict_source_ip}: ${107:"#"}}
${108:   ${109:sip_hosted_nat_traversal}: ${110:"#"}}
${111:   ${112:sip_info_rate}: ${113:"#"}}
${114:   ${115:sip_invite_rate}: ${116:"#"}}
${117:   ${118:sip_ips_rtp}: ${119:"#"}}
${120:   ${121:sip_log_call_summary}: ${122:"#"}}
${123:   ${124:sip_log_violations}: ${125:"#"}}
${126:   ${127:sip_malformed_header_allow}: ${128:"#"}}
${129:   ${130:sip_malformed_header_call_id}: ${131:"#"}}
${132:   ${133:sip_malformed_header_contact}: ${134:"#"}}
${135:   ${136:sip_malformed_header_content_length}: ${137:"#"}}
${138:   ${139:sip_malformed_header_content_type}: ${140:"#"}}
${141:   ${142:sip_malformed_header_cseq}: ${143:"#"}}
${144:   ${145:sip_malformed_header_expires}: ${146:"#"}}
${147:   ${148:sip_malformed_header_from}: ${149:"#"}}
${150:   ${151:sip_malformed_header_max_forwards}: ${152:"#"}}
${153:   ${154:sip_malformed_header_p_asserted_identity}: ${155:"#"}}
${156:   ${157:sip_malformed_header_rack}: ${158:"#"}}
${159:   ${160:sip_malformed_header_record_route}: ${161:"#"}}
${162:   ${163:sip_malformed_header_route}: ${164:"#"}}
${165:   ${166:sip_malformed_header_rseq}: ${167:"#"}}
${168:   ${169:sip_malformed_header_sdp_a}: ${170:"#"}}
${171:   ${172:sip_malformed_header_sdp_b}: ${173:"#"}}
${174:   ${175:sip_malformed_header_sdp_c}: ${176:"#"}}
${177:   ${178:sip_malformed_header_sdp_i}: ${179:"#"}}
${180:   ${181:sip_malformed_header_sdp_k}: ${182:"#"}}
${183:   ${184:sip_malformed_header_sdp_m}: ${185:"#"}}
${186:   ${187:sip_malformed_header_sdp_o}: ${188:"#"}}
${189:   ${190:sip_malformed_header_sdp_r}: ${191:"#"}}
${192:   ${193:sip_malformed_header_sdp_s}: ${194:"#"}}
${195:   ${196:sip_malformed_header_sdp_t}: ${197:"#"}}
${198:   ${199:sip_malformed_header_sdp_v}: ${200:"#"}}
${201:   ${202:sip_malformed_header_sdp_z}: ${203:"#"}}
${204:   ${205:sip_malformed_header_to}: ${206:"#"}}
${207:   ${208:sip_malformed_header_via}: ${209:"#"}}
${210:   ${211:sip_malformed_request_line}: ${212:"#"}}
${213:   ${214:sip_max_body_length}: ${215:"#"}}
${216:   ${217:sip_max_dialogs}: ${218:"#"}}
${219:   ${220:sip_max_idle_dialogs}: ${221:"#"}}
${222:   ${223:sip_max_line_length}: ${224:"#"}}
${225:   ${226:sip_message_rate}: ${227:"#"}}
${228:   ${229:sip_nat_trace}: ${230:"#"}}
${231:   ${232:sip_no_sdp_fixup}: ${233:"#"}}
${234:   ${235:sip_notify_rate}: ${236:"#"}}
${237:   ${238:sip_open_contact_pinhole}: ${239:"#"}}
${240:   ${241:sip_open_record_route_pinhole}: ${242:"#"}}
${243:   ${244:sip_open_register_pinhole}: ${245:"#"}}
${246:   ${247:sip_open_via_pinhole}: ${248:"#"}}
${249:   ${250:sip_options_rate}: ${251:"#"}}
${252:   ${253:sip_prack_rate}: ${254:"#"}}
${255:   ${256:sip_preserve_override}: ${257:"#"}}
${258:   ${259:sip_provisional_invite_expiry_time}: ${260:"#"}}
${261:   ${262:sip_publish_rate}: ${263:"#"}}
${264:   ${265:sip_refer_rate}: ${266:"#"}}
${267:   ${268:sip_register_contact_trace}: ${269:"#"}}
${270:   ${271:sip_register_rate}: ${272:"#"}}
${273:   ${274:sip_rfc2543_branch}: ${275:"#"}}
${276:   ${277:sip_rtp}: ${278:"#"}}
${279:   ${280:sip_ssl_algorithm}: ${281:"#"}}
${282:   ${283:sip_ssl_auth_client}: ${284:"#"}}
${285:   ${286:sip_ssl_auth_server}: ${287:"#"}}
${288:   ${289:sip_ssl_client_certificate}: ${290:"#"}}
${291:   ${292:sip_ssl_client_renegotiation}: ${293:"#"}}
${294:   ${295:sip_ssl_max_version}: ${296:"#"}}
${297:   ${298:sip_ssl_min_version}: ${299:"#"}}
${300:   ${301:sip_ssl_mode}: ${302:"#"}}
${303:   ${304:sip_ssl_pfs}: ${305:"#"}}
${306:   ${307:sip_ssl_send_empty_frags}: ${308:"#"}}
${309:   ${310:sip_ssl_server_certificate}: ${311:"#"}}
${312:   ${313:sip_status}: ${314:"#"}}
${315:   ${316:sip_strict_register}: ${317:"#"}}
${318:   ${319:sip_subscribe_rate}: ${320:"#"}}
${321:   ${322:sip_unknown_header}: ${323:"#"}}
${324:   ${325:sip_update_rate}: ${326:"#"}}
${327:${328:   become: ${329:true}} 
${330:   become_method: ${331:su}} 
${332:   become_user: ${333:nobody}} 
${334:   become_flags: ${335:"-s /bin/sh"}}} 
${336:   when: ${337:variable is defined}} 
${338:   with_items: ${339:array}} 
]]></content>
	<tabTrigger>fmgr_secprof_voip</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
