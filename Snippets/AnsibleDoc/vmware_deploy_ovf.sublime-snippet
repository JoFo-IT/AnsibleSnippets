<snippet>
<content><![CDATA[
${1:# allow_duplicates: Whether or not to allow duplicate VM names. ESXi 
# cluster: Cluster to deploy to. 
# datacenter: Datacenter to deploy to. 
# datastore: Datastore to deploy to. 
# deployment_option: The key of the chosen deployment option. 
# disk_provisioning: Disk provisioning type. 
# fail_on_spec_warnings: Cause the module to treat OVF Import Spec 
# folder: Absolute path of folder to place the virtual 
# hostname: The hostname or IP address of the vSphere 
# inject_ovf_env: Force the given properties to be inserted into 
# name: Name of the VM to work with. Virtual machine 
# networks: `key: value' mapping of OVF network name, to the 
# ovf: Path to OVF or OVA file to deploy. 
# password: The password of the vSphere vCenter or ESXi 
# port: The port number of the vSphere vCenter or ESXi 
# power_on: Whether or not to power on the virtual machine 
# properties: The assignment of values to the properties found 
# resource_pool: Resource Pool to deploy to. 
# username: The username of the vSphere vCenter or ESXi 
# validate_certs: Allows connection when SSL certificates are not 
# wait: Wait for the host to power on. 
# wait_for_ip_address: Wait until vCenter detects an IP address for the 
}- name: ${2:Name for vmware_deploy_ovf module.}
  vmware_deploy_ovf:
${3:   ${4:allow_duplicates}: ${5:"#"}}
${6:   ${7:cluster}: ${8:"#"}}
${9:   ${10:datacenter}: ${11:"#"}}
${12:   ${13:datastore}: ${14:"#"}}
${15:   ${16:deployment_option}: ${17:"#"}}
${18:   ${19:disk_provisioning}: ${20:"#"}}
${21:   ${22:fail_on_spec_warnings}: ${23:"#"}}
${24:   ${25:folder}: ${26:"#"}}
${27:   ${28:hostname}: ${29:"#"}}
${30:   ${31:inject_ovf_env}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:networks}: ${38:"#"}}
${39:   ${40:ovf}: ${41:"#"}}
${42:   ${43:password}: ${44:"#"}}
${45:   ${46:port}: ${47:"#"}}
${48:   ${49:power_on}: ${50:"#"}}
${51:   ${52:properties}: ${53:"#"}}
${54:   ${55:resource_pool}: ${56:"#"}}
${57:   ${58:username}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:   ${64:wait}: ${65:"#"}}
${66:   ${67:wait_for_ip_address}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>vmware_deploy_ovf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
