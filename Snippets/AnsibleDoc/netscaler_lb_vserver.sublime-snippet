<snippet>
<content><![CDATA[
${1:# appflowlog: Apply AppFlow logging to the virtual server. 
# authentication: Enable or disable user authentication. 
# authenticationhost: Fully qualified domain name (FQDN) of the 
# authn401: Enable or disable user authentication with HTTP 
# authnprofile: Name of the authentication profile to be used 
# authnvsname: Name of an authentication virtual server with 
# backuplbmethod: Backup load balancing method. Becomes 
# backuppersistencetimeout: Time period for which backup persistence is in 
# bypassaaaa: If this option is enabled while resolving DNS64 
# cacheable: Route cacheable requests to a cache redirection 
# clttimeout: Idle time, in seconds, after which a client 
# comment: Any comments that you might want to associate 
# connfailover: Mode in which the connection failover feature 
# cookiename: Use this parameter to specify the cookie name 
# datalength: Length of the token to be extracted from the 
# dataoffset: Offset to be considered when extracting a token 
# dbprofilename: Name of the DB profile whose settings are to be 
# dbslb: Enable database specific load balancing for 
# disabled: When set to `yes' the lb vserver will be 
# disableprimaryondown: If the primary virtual server goes down, do not 
# dns64: This argument is for enabling/disabling the 
# dnsprofilename: Name of the DNS profile to be associated with 
# downstateflush: Flush all active transactions associated with a 
# hashlength: Number of bytes to consider for the hash value 
# healththreshold: Threshold in percent of active services below 
# httpprofilename: Name of the HTTP profile whose settings are to 
# icmpvsrresponse: How the NetScaler appliance responds to ping 
# insertvserveripport: Insert an HTTP header, whose value is the IP 
# ipmask: IP mask, in dotted decimal notation, for the IP 
# ippattern: IP address pattern, in dotted decimal notation, 
# ipv46: IPv4 or IPv6 address to assign to the virtual 
# l2conn: Use Layer 2 parameters (channel number, MAC 
# lbmethod: Load balancing method. The available settings 
# listenpolicy: Default syntax expression identifying traffic 
# listenpriority: Integer specifying the priority of the listen 
# m: Redirection mode for load balancing. Available 
# macmoderetainvlan: This option is used to retain vlan information 
# maxautoscalemembers: Maximum number of members expected to be present 
# minautoscalemembers: Minimum number of members expected to be present 
# mssqlserverversion: For a load balancing virtual server of type 
# mysqlcharacterset: Character set that the virtual server advertises 
# mysqlprotocolversion: MySQL protocol version that the virtual server 
# mysqlservercapabilities: Server capabilities that the virtual server 
# mysqlserverversion: MySQL server version string that the virtual 
# name: Name for the virtual server. Must begin with an 
# : ', period `.', 
# netmask: IPv4 subnet mask to apply to the destination IP 
# netprofile: Name of the network profile to associate with 
# newservicerequest: Number of requests, or percentage of the load on 
# newservicerequestincrementinterval: Interval, in seconds, between successive 
# newservicerequestunit: Units in which to increment load at each 
# nitro_pass: (required) The password with which to 
# nitro_protocol: Which protocol to use when accessing the nitro 
# nitro_timeout: Time in seconds until a timeout error is thrown 
# nitro_user: (required) The username with which to 
# nsip: (required) The ip address of the netscaler 
# oracleserverversion: Oracle server version. 
# persistavpno: Persist AVP number for Diameter Persistency. In 
# persistencebackup: Backup persistence type for the virtual server. 
# persistencetype: Type of persistence for the virtual server. 
# persistmask: Persistence mask for IP based persistence types, 
# port: Port number for the virtual server. Range `1' - 
# processlocal: By turning on this option packets destined to a 
# push: Process traffic with the push virtual server 
# pushlabel: Expression for extracting a label from the 
# pushmulticlients: Allow multiple Web 2.0 connections from the same 
# pushvserver: Name of the load balancing virtual server, of 
# range: Number of IP addresses that the appliance must 
# recursionavailable: When set to YES, this option causes the DNS 
# redirectportrewrite: Rewrite the port and change the protocol to 
# redirurl: URL to which to redirect traffic if the virtual 
# resrule: Default syntax expression specifying which part 
# rhistate: Route Health Injection (RHI) functionality of 
# rtspnat: Use network address translation (NAT) for RTSP 
# save_config: If true the module will save the configuration 
# servicebindings: List of services along with the weights that are 
# servicegroupbindings: List of service groups along with the weights 
# servicetype: Protocol used by the service (also called the 
# sessionless: Perform load balancing on a per-packet basis, 
# skippersistency: This argument decides the behavior incase the 
# sobackupaction: Action to be performed if spillover is to take 
# somethod: Type of threshold that, when exceeded, triggers 
# sopersistence: If spillover occurs, maintain source IP address 
# sopersistencetimeout: Timeout for spillover persistence, in minutes. 
# sothreshold: Threshold at which spillover occurs. Specify an 
# ssl_certkey: The name of the ssl certificate that is bound to 
# state: The state of the resource being configured by 
# tcpprofilename: Name of the TCP profile whose settings are to be 
# td: Integer value that uniquely identifies the 
# timeout: Time period for which a persistence session is 
# tosid: TOS ID of the virtual server. Applicable only 
# v6netmasklen: Number of bits to consider in an IPv6 
# v6persistmasklen: Persistence mask for IP based persistence types, 
# validate_certs: If `no', SSL certificates will not be validated. 
# vipheader: Name for the inserted header. The default name 
}- name: ${2:Name for netscaler_lb_vserver module.}
  netscaler_lb_vserver:
${3:   ${4:appflowlog}: ${5:"#"}}
${6:   ${7:authentication}: ${8:"#"}}
${9:   ${10:authenticationhost}: ${11:"#"}}
${12:   ${13:authn401}: ${14:"#"}}
${15:   ${16:authnprofile}: ${17:"#"}}
${18:   ${19:authnvsname}: ${20:"#"}}
${21:   ${22:backuplbmethod}: ${23:"#"}}
${24:   ${25:backuppersistencetimeout}: ${26:"#"}}
${27:   ${28:bypassaaaa}: ${29:"#"}}
${30:   ${31:cacheable}: ${32:"#"}}
${33:   ${34:clttimeout}: ${35:"#"}}
${36:   ${37:comment}: ${38:"#"}}
${39:   ${40:connfailover}: ${41:"#"}}
${42:   ${43:cookiename}: ${44:"#"}}
${45:   ${46:datalength}: ${47:"#"}}
${48:   ${49:dataoffset}: ${50:"#"}}
${51:   ${52:dbprofilename}: ${53:"#"}}
${54:   ${55:dbslb}: ${56:"#"}}
${57:   ${58:disabled}: ${59:"#"}}
${60:   ${61:disableprimaryondown}: ${62:"#"}}
${63:   ${64:dns64}: ${65:"#"}}
${66:   ${67:dnsprofilename}: ${68:"#"}}
${69:   ${70:downstateflush}: ${71:"#"}}
${72:   ${73:hashlength}: ${74:"#"}}
${75:   ${76:healththreshold}: ${77:"#"}}
${78:   ${79:httpprofilename}: ${80:"#"}}
${81:   ${82:icmpvsrresponse}: ${83:"#"}}
${84:   ${85:insertvserveripport}: ${86:"#"}}
${87:   ${88:ipmask}: ${89:"#"}}
${90:   ${91:ippattern}: ${92:"#"}}
${93:   ${94:ipv46}: ${95:"#"}}
${96:   ${97:l2conn}: ${98:"#"}}
${99:   ${100:lbmethod}: ${101:"#"}}
${102:   ${103:listenpolicy}: ${104:"#"}}
${105:   ${106:listenpriority}: ${107:"#"}}
${108:   ${109:m}: ${110:"#"}}
${111:   ${112:macmoderetainvlan}: ${113:"#"}}
${114:   ${115:maxautoscalemembers}: ${116:"#"}}
${117:   ${118:minautoscalemembers}: ${119:"#"}}
${120:   ${121:mssqlserverversion}: ${122:"#"}}
${123:   ${124:mysqlcharacterset}: ${125:"#"}}
${126:   ${127:mysqlprotocolversion}: ${128:"#"}}
${129:   ${130:mysqlservercapabilities}: ${131:"#"}}
${132:   ${133:mysqlserverversion}: ${134:"#"}}
${135:   ${136:name}: ${137:"#"}}
${138:   ${139:}: ${140:"#"}}
${141:   ${142:netmask}: ${143:"#"}}
${144:   ${145:netprofile}: ${146:"#"}}
${147:   ${148:newservicerequest}: ${149:"#"}}
${150:   ${151:newservicerequestincrementinterval}: ${152:"#"}}
${153:   ${154:newservicerequestunit}: ${155:"#"}}
${156:   ${157:nitro_pass}: ${158:"#"}}
${159:   ${160:nitro_protocol}: ${161:"#"}}
${162:   ${163:nitro_timeout}: ${164:"#"}}
${165:   ${166:nitro_user}: ${167:"#"}}
${168:   ${169:nsip}: ${170:"#"}}
${171:   ${172:oracleserverversion}: ${173:"#"}}
${174:   ${175:persistavpno}: ${176:"#"}}
${177:   ${178:persistencebackup}: ${179:"#"}}
${180:   ${181:persistencetype}: ${182:"#"}}
${183:   ${184:persistmask}: ${185:"#"}}
${186:   ${187:port}: ${188:"#"}}
${189:   ${190:processlocal}: ${191:"#"}}
${192:   ${193:push}: ${194:"#"}}
${195:   ${196:pushlabel}: ${197:"#"}}
${198:   ${199:pushmulticlients}: ${200:"#"}}
${201:   ${202:pushvserver}: ${203:"#"}}
${204:   ${205:range}: ${206:"#"}}
${207:   ${208:recursionavailable}: ${209:"#"}}
${210:   ${211:redirectportrewrite}: ${212:"#"}}
${213:   ${214:redirurl}: ${215:"#"}}
${216:   ${217:resrule}: ${218:"#"}}
${219:   ${220:rhistate}: ${221:"#"}}
${222:   ${223:rtspnat}: ${224:"#"}}
${225:   ${226:save_config}: ${227:"#"}}
${228:   ${229:servicebindings}: ${230:"#"}}
${231:   ${232:servicegroupbindings}: ${233:"#"}}
${234:   ${235:servicetype}: ${236:"#"}}
${237:   ${238:sessionless}: ${239:"#"}}
${240:   ${241:skippersistency}: ${242:"#"}}
${243:   ${244:sobackupaction}: ${245:"#"}}
${246:   ${247:somethod}: ${248:"#"}}
${249:   ${250:sopersistence}: ${251:"#"}}
${252:   ${253:sopersistencetimeout}: ${254:"#"}}
${255:   ${256:sothreshold}: ${257:"#"}}
${258:   ${259:ssl_certkey}: ${260:"#"}}
${261:   ${262:state}: ${263:"#"}}
${264:   ${265:tcpprofilename}: ${266:"#"}}
${267:   ${268:td}: ${269:"#"}}
${270:   ${271:timeout}: ${272:"#"}}
${273:   ${274:tosid}: ${275:"#"}}
${276:   ${277:v6netmasklen}: ${278:"#"}}
${279:   ${280:v6persistmasklen}: ${281:"#"}}
${282:   ${283:validate_certs}: ${284:"#"}}
${285:   ${286:vipheader}: ${287:"#"}}
${288:${289:   become: ${290:true}} 
${291:   become_method: ${292:su}} 
${293:   become_user: ${294:nobody}} 
${295:   become_flags: ${296:"-s /bin/sh"}}} 
${297:   when: ${298:variable is defined}} 
${299:   with_items: ${300:array}} 
]]></content>
	<tabTrigger>netscaler_lb_vserver</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
