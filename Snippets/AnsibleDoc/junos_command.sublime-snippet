<snippet>
<content><![CDATA[
${1:# commands: The commands to send to the remote junos device over the configured provider.  The resulting output from 
# display: Encoding scheme to use when serializing output from the device. This handles how to properly understand 
# interval: Configures the interval in seconds to wait between retries of the command.  If the command does not pass 
# match: The `match' argument is used in conjunction with the `wait_for' argument to specify the match policy. 
# provider: A dict object containing connection details. 
# retries: Specifies the number of retries a command should be tried before it is considered failed.  The command 
# rpcs: The `rpcs' argument accepts a list of RPCs to be executed over a netconf session and the results from 
# wait_for: Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument 
}- name: ${2:Name for junos_command module.}
  junos_command:
${3:   ${4:commands}: ${5:"#"}}
${6:   ${7:display}: ${8:"#"}}
${9:   ${10:interval}: ${11:"#"}}
${12:   ${13:match}: ${14:"#"}}
${15:   ${16:provider}: ${17:"#"}}
${18:   ${19:retries}: ${20:"#"}}
${21:   ${22:rpcs}: ${23:"#"}}
${24:   ${25:wait_for}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>junos_command</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
