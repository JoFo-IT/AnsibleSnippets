<snippet>
<content><![CDATA[
${1:# command: If `import', will perform SCP import operations. 
# end_host_power_state: This option is applicable for `import' command. 
# export_format: Specify the output file format. This option is 
# export_use: Specify the type of server configuration profile 
# idrac_ip: (required) iDRAC IP Address. 
# idrac_password: (required) iDRAC user password. 
# idrac_port: iDRAC port. 
# idrac_user: (required) iDRAC username. 
# job_wait: (required) Whether to wait for job completion or 
# scp_components: If `ALL', this module will import all components 
# scp_file: Server Configuration Profile file name. This 
# share_name: (required) CIFS or NFS Network Share or a local 
# share_password: Network share user password. This option is 
# share_user: Network share user in the format 'user@domain' 
# shutdown_type: This option is applicable for `import' command. 
}- name: ${2:Name for idrac_server_config_profile module.}
  idrac_server_config_profile:
${3:   ${4:command}: ${5:"#"}}
${6:   ${7:end_host_power_state}: ${8:"#"}}
${9:   ${10:export_format}: ${11:"#"}}
${12:   ${13:export_use}: ${14:"#"}}
${15:   ${16:idrac_ip}: ${17:"#"}}
${18:   ${19:idrac_password}: ${20:"#"}}
${21:   ${22:idrac_port}: ${23:"#"}}
${24:   ${25:idrac_user}: ${26:"#"}}
${27:   ${28:job_wait}: ${29:"#"}}
${30:   ${31:scp_components}: ${32:"#"}}
${33:   ${34:scp_file}: ${35:"#"}}
${36:   ${37:share_name}: ${38:"#"}}
${39:   ${40:share_password}: ${41:"#"}}
${42:   ${43:share_user}: ${44:"#"}}
${45:   ${46:shutdown_type}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>idrac_server_config_profile</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
