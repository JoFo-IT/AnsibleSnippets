<snippet>
<content><![CDATA[
${1:# api_timeout: How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will 
# auth: Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default 
# auth_type: Name of the auth plugin to use. If the cloud uses something other than password authentication, the name 
# availability_zone: Ignored. Present for backwards compatibility 
# cacert: A path to a CA Cert bundle that can be used as part of verifying SSL API requests. 
# cert: A path to a client certificate to use as part of the SSL transaction. 
# cloud: Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is 
# direction: The direction in which the security group rule is applied. Not all providers support egress. 
# endpoint_type: Endpoint URL type to fetch from the service catalog. 
# ethertype: Must be IPv4 or IPv6, and addresses represented in CIDR must match the ingress or egress rules. Not all 
# key: A path to a client key to use as part of the SSL transaction. 
# port_range_max: Ending port 
# port_range_min: Starting port 
# protocol: IP protocols TCP UDP ICMP 112 (VRRP) 
# region_name: Name of the region. 
# remote_group: Name or ID of the Security group to link (exclusive with remote_ip_prefix) 
# remote_ip_prefix: Source IP address(es) in CIDR notation (exclusive with remote_group) 
# security_group: (required) Name or ID of the security group 
# state: Should the resource be present or absent. 
# timeout: How long should ansible wait for the requested resource. 
# validate_certs: Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True. 
# wait: Should ansible wait until the requested resource is complete. 
}- name: ${2:Name for os_security_group_rule module.}
  os_security_group_rule:
${3:   ${4:api_timeout}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:auth_type}: ${11:"#"}}
${12:   ${13:availability_zone}: ${14:"#"}}
${15:   ${16:cacert}: ${17:"#"}}
${18:   ${19:cert}: ${20:"#"}}
${21:   ${22:cloud}: ${23:"#"}}
${24:   ${25:direction}: ${26:"#"}}
${27:   ${28:endpoint_type}: ${29:"#"}}
${30:   ${31:ethertype}: ${32:"#"}}
${33:   ${34:key}: ${35:"#"}}
${36:   ${37:port_range_max}: ${38:"#"}}
${39:   ${40:port_range_min}: ${41:"#"}}
${42:   ${43:protocol}: ${44:"#"}}
${45:   ${46:region_name}: ${47:"#"}}
${48:   ${49:remote_group}: ${50:"#"}}
${51:   ${52:remote_ip_prefix}: ${53:"#"}}
${54:   ${55:security_group}: ${56:"#"}}
${57:   ${58:state}: ${59:"#"}}
${60:   ${61:timeout}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:   ${67:wait}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>os_security_group_rule</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
