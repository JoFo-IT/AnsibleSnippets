<snippet>
<content><![CDATA[
${1:# api_version: The version of the Docker API running on the Docker Host. Defaults to the latest version of the API 
# cacert_path: Use a CA certificate when performing server verification by providing the path to a CA certificate file. 
# cert_path: Path to the client's TLS certificate file. 
# data: String. The value of the secret. Required when state is `present'. 
# docker_host: The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the 
# force: Boolean. Use with state `present' to always remove and recreate an existing secret. If `true', an 
# key_path: Path to the client's TLS key file. 
# labels: A map of key:value meta data, where both the `key' and `value' are expected to be a string. If new meta 
# name: (required) The name of the secret. 
# ssl_version: Provide a valid SSL version number. Default value determined by docker-py, currently 1.0. 
# state: Set to `present', if the secret should exist, and `absent', if it should not. 
# timeout: The maximum amount of time in seconds to wait on a response from the API. 
# tls: Secure the connection to the API by using TLS without verifying the authenticity of the Docker host 
# tls_hostname: When verifying the authenticity of the Docker Host server, provide the expected name of the server. 
# tls_verify: Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server. 
}- name: ${2:Name for docker_secret module.}
  docker_secret:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:cacert_path}: ${8:"#"}}
${9:   ${10:cert_path}: ${11:"#"}}
${12:   ${13:data}: ${14:"#"}}
${15:   ${16:docker_host}: ${17:"#"}}
${18:   ${19:force}: ${20:"#"}}
${21:   ${22:key_path}: ${23:"#"}}
${24:   ${25:labels}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:ssl_version}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:timeout}: ${38:"#"}}
${39:   ${40:tls}: ${41:"#"}}
${42:   ${43:tls_hostname}: ${44:"#"}}
${45:   ${46:tls_verify}: ${47:"#"}}
${48:${49:   become: ${50:true}} 
${51:   become_method: ${52:su}} 
${53:   become_user: ${54:nobody}} 
${55:   become_flags: ${56:"-s /bin/sh"}}} 
${57:   when: ${58:variable is defined}} 
${59:   with_items: ${60:array}} 
]]></content>
	<tabTrigger>docker_secret</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
