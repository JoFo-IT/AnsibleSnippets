<snippet>
<content><![CDATA[
${1:# grafana_api_key: The Grafana API key. If set, `grafana_user' and 
# grafana_password: The Grafana API password. 
# grafana_url: (required) The Grafana URL. 
# grafana_user: The Grafana API user. 
# message: Set a commit message for the version history. 
# org_id: The Grafana Organisation ID where the dashboard 
# overwrite: Override existing dashboard when state is 
# path: The path to the json file containing the Grafana 
# slug: slug of the dashboard. It's the friendly url 
# state: (required) State of the dashboard. 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for grafana_dashboard module.}
  grafana_dashboard:
${3:   ${4:grafana_api_key}: ${5:"#"}}
${6:   ${7:grafana_password}: ${8:"#"}}
${9:   ${10:grafana_url}: ${11:"#"}}
${12:   ${13:grafana_user}: ${14:"#"}}
${15:   ${16:message}: ${17:"#"}}
${18:   ${19:org_id}: ${20:"#"}}
${21:   ${22:overwrite}: ${23:"#"}}
${24:   ${25:path}: ${26:"#"}}
${27:   ${28:slug}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>grafana_dashboard</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
