<snippet>
<content><![CDATA[
${1:# api_password: (required) The password to authenticate with the SANtricity WebServices Proxy or embedded REST API. 
# api_url: (required) The url to the SANtricity WebServices Proxy or embedded REST API. 
# api_username: (required) The username to authenticate with the SANtricity WebServices Proxy or embedded REST API. 
# cache_size_min: The minimum size (in size_units) of the ssd cache. The cache will be expanded if this exceeds the 
# disk_count: The minimum number of disks to use for building the cache. The cache will be expanded if this number 
# io_type: The type of workload to optimize the cache for. 
# name: (required) The name of the SSD cache to manage 
# size_unit: The unit to be applied to size arguments 
# ssid: (required) The ID of the array to manage (as configured on the web services proxy). 
# state: (required) Whether the specified SSD cache should exist or not. 
# validate_certs: Should https certificates be validated? 
}- name: ${2:Name for netapp_e_flashcache module.}
  netapp_e_flashcache:
${3:   ${4:api_password}: ${5:"#"}}
${6:   ${7:api_url}: ${8:"#"}}
${9:   ${10:api_username}: ${11:"#"}}
${12:   ${13:cache_size_min}: ${14:"#"}}
${15:   ${16:disk_count}: ${17:"#"}}
${18:   ${19:io_type}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:size_unit}: ${26:"#"}}
${27:   ${28:ssid}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>netapp_e_flashcache</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
