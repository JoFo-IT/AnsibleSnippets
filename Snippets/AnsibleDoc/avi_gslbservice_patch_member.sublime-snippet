<snippet>
<content><![CDATA[
${1:# api_context: Avi API context that includes current session ID 
# api_version: Avi API version of to use for Avi API and 
# avi_credentials: Avi Credentials dictionary which can be used in 
# controller: IP address or hostname of the controller. The 
# data: HTTP body of GSLB Service Member in YAML or JSON 
# name: (required) Name of the GSLB Service 
# params: Query parameters passed to the HTTP API. 
# password: Password of Avi user in Avi controller. The 
# state: The state that should be applied to the member. 
# tenant: Name of tenant used for all Avi API calls and 
# tenant_uuid: UUID of tenant used for all Avi API calls and 
# username: Username used for accessing Avi controller. The 
}- name: ${2:Name for avi_gslbservice_patch_member module.}
  avi_gslbservice_patch_member:
${3:   ${4:api_context}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:avi_credentials}: ${11:"#"}}
${12:   ${13:controller}: ${14:"#"}}
${15:   ${16:data}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:params}: ${23:"#"}}
${24:   ${25:password}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:   ${31:tenant}: ${32:"#"}}
${33:   ${34:tenant_uuid}: ${35:"#"}}
${36:   ${37:username}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>avi_gslbservice_patch_member</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
