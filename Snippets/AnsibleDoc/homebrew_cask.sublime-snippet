<snippet>
<content><![CDATA[
${1:# accept_external_apps: allow external apps 
# install_options: options flags to install a package 
# name: (required) name of cask to install/remove 
# path: ':' separated list of paths to search for 'brew' 
# state: state of the cask 
# update_homebrew: update homebrew itself first. Note that `brew 
# upgrade: upgrade all casks (mutually exclusive with 
# upgrade_all: upgrade all casks (mutually exclusive with 
}- name: ${2:Name for homebrew_cask module.}
  homebrew_cask:
${3:   ${4:accept_external_apps}: ${5:"#"}}
${6:   ${7:install_options}: ${8:"#"}}
${9:   ${10:name}: ${11:"#"}}
${12:   ${13:path}: ${14:"#"}}
${15:   ${16:state}: ${17:"#"}}
${18:   ${19:update_homebrew}: ${20:"#"}}
${21:   ${22:upgrade}: ${23:"#"}}
${24:   ${25:upgrade_all}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>homebrew_cask</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
