<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# db: Name of database to connect to and run queries 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# named_args: Dictionary of key-value arguments to pass to the 
# path_to_script: Path to SQL script on the remote host. Returns 
# port: Database port to connect to. 
# positional_args: List of values to be passed as positional 
# query: SQL query to run. Variables can be escaped with 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
}- name: ${2:Name for postgresql_query module.}
  postgresql_query:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:db}: ${8:"#"}}
${9:   ${10:login_host}: ${11:"#"}}
${12:   ${13:login_password}: ${14:"#"}}
${15:   ${16:login_unix_socket}: ${17:"#"}}
${18:   ${19:login_user}: ${20:"#"}}
${21:   ${22:named_args}: ${23:"#"}}
${24:   ${25:path_to_script}: ${26:"#"}}
${27:   ${28:port}: ${29:"#"}}
${30:   ${31:positional_args}: ${32:"#"}}
${33:   ${34:query}: ${35:"#"}}
${36:   ${37:session_role}: ${38:"#"}}
${39:   ${40:ssl_mode}: ${41:"#"}}
${42:${43:   become: ${44:true}} 
${45:   become_method: ${46:su}} 
${47:   become_user: ${48:nobody}} 
${49:   become_flags: ${50:"-s /bin/sh"}}} 
${51:   when: ${52:variable is defined}} 
${53:   with_items: ${54:array}} 
]]></content>
	<tabTrigger>postgresql_query</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
