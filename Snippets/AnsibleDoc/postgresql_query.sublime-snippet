<snippet>
<content><![CDATA[
${1:# autocommit: Execute in autocommit mode when the query can't 
# ca_cert: Specifies the name of a file containing SSL 
# db: Name of database to connect to and run queries 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# named_args: Dictionary of key-value arguments to pass to the 
# path_to_script: Path to SQL script on the remote host. Returns 
# port: Database port to connect to. 
# positional_args: List of values to be passed as positional 
# query: SQL query to run. Variables can be escaped with 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
}- name: ${2:Name for postgresql_query module.}
  postgresql_query:
${3:   ${4:autocommit}: ${5:"#"}}
${6:   ${7:ca_cert}: ${8:"#"}}
${9:   ${10:db}: ${11:"#"}}
${12:   ${13:login_host}: ${14:"#"}}
${15:   ${16:login_password}: ${17:"#"}}
${18:   ${19:login_unix_socket}: ${20:"#"}}
${21:   ${22:login_user}: ${23:"#"}}
${24:   ${25:named_args}: ${26:"#"}}
${27:   ${28:path_to_script}: ${29:"#"}}
${30:   ${31:port}: ${32:"#"}}
${33:   ${34:positional_args}: ${35:"#"}}
${36:   ${37:query}: ${38:"#"}}
${39:   ${40:session_role}: ${41:"#"}}
${42:   ${43:ssl_mode}: ${44:"#"}}
${45:${46:   become: ${47:true}} 
${48:   become_method: ${49:su}} 
${50:   become_user: ${51:nobody}} 
${52:   become_flags: ${53:"-s /bin/sh"}}} 
${54:   when: ${55:variable is defined}} 
${56:   with_items: ${57:array}} 
]]></content>
	<tabTrigger>postgresql_query</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
