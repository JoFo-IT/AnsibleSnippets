<snippet>
<content><![CDATA[
${1:# configure_priv: Regular expression to restrict configure actions 
# force: Deletes and recreates the user. 
# node: erlang node name of the rabbit we wish to 
# password: Password of user to add. To change the password 
# permissions: a list of dicts, each dict contains vhost, 
# read_priv: Regular expression to restrict configure actions 
# state: Specify if user is to be added or removed 
# tags: User tags specified as comma delimited 
# update_password: `on_create' will only set the password for newly 
# user: (required) Name of user to add 
# vhost: vhost to apply access privileges. This option 
# write_priv: Regular expression to restrict configure actions 
}- name: ${2:Name for rabbitmq_user module.}
  rabbitmq_user:
${3:   ${4:configure_priv}: ${5:"#"}}
${6:   ${7:force}: ${8:"#"}}
${9:   ${10:node}: ${11:"#"}}
${12:   ${13:password}: ${14:"#"}}
${15:   ${16:permissions}: ${17:"#"}}
${18:   ${19:read_priv}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:tags}: ${26:"#"}}
${27:   ${28:update_password}: ${29:"#"}}
${30:   ${31:user}: ${32:"#"}}
${33:   ${34:vhost}: ${35:"#"}}
${36:   ${37:write_priv}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>rabbitmq_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
