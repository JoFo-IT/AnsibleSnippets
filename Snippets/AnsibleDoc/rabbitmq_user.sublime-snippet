<snippet>
<content><![CDATA[
${1:# configure_priv: Regular expression to restrict configure actions on a resource for the specified vhost. By default all 
# force: Deletes and recreates the user. 
# node: erlang node name of the rabbit we wish to configure 
# password: Password of user to add. To change the password of an existing user, you must also specify `force=yes'. 
# permissions: a list of dicts, each dict contains vhost, configure_priv, write_priv, and read_priv, and represents a 
# read_priv: Regular expression to restrict configure actions on a resource for the specified vhost. By default all 
# state: Specify if user is to be added or removed 
# tags: User tags specified as comma delimited 
# user: (required) Name of user to add 
# vhost: vhost to apply access privileges. This option will be ignored when permissions option is used. 
# write_priv: Regular expression to restrict configure actions on a resource for the specified vhost. By default all 
}- name: ${2:Name for rabbitmq_user module.}
  rabbitmq_user:
${3:   ${4:configure_priv}: ${5:"#"}}
${6:   ${7:force}: ${8:"#"}}
${9:   ${10:node}: ${11:"#"}}
${12:   ${13:password}: ${14:"#"}}
${15:   ${16:permissions}: ${17:"#"}}
${18:   ${19:read_priv}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:tags}: ${26:"#"}}
${27:   ${28:user}: ${29:"#"}}
${30:   ${31:vhost}: ${32:"#"}}
${33:   ${34:write_priv}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>rabbitmq_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
