<snippet>
<content><![CDATA[
${1:# api_password: Password of the user to login into OpenNebula 
# api_url: URL of the OpenNebula OneFlow API server. It is 
# api_username: Name of the user to login into the OpenNebula 
# cardinality: Number of VMs for the specified role 
# custom_attrs: Dictionary of key/value custom attributes which 
# force: Force the new cardinality even if it is outside 
# group_id: ID of the group which will be set as the group 
# mode: Set permission mode of a service instance in 
# owner_id: ID of the user which will be set as the owner of 
# role: Name of the role whose cardinality should be 
# service_id: ID of a service instance that you would like to 
# service_name: Name of a service instance that you would like 
# state: `present' - instantiate a service from a 
# template_id: ID of a service template to use to create a new 
# template_name: Name of service template to use to create a new 
# unique: Setting `unique=yes' will make sure that there 
# wait: Wait for the instance to reach RUNNING state 
# wait_timeout: How long before wait gives up, in seconds 
}- name: ${2:Name for one_service module.}
  one_service:
${3:   ${4:api_password}: ${5:"#"}}
${6:   ${7:api_url}: ${8:"#"}}
${9:   ${10:api_username}: ${11:"#"}}
${12:   ${13:cardinality}: ${14:"#"}}
${15:   ${16:custom_attrs}: ${17:"#"}}
${18:   ${19:force}: ${20:"#"}}
${21:   ${22:group_id}: ${23:"#"}}
${24:   ${25:mode}: ${26:"#"}}
${27:   ${28:owner_id}: ${29:"#"}}
${30:   ${31:role}: ${32:"#"}}
${33:   ${34:service_id}: ${35:"#"}}
${36:   ${37:service_name}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:template_id}: ${44:"#"}}
${45:   ${46:template_name}: ${47:"#"}}
${48:   ${49:unique}: ${50:"#"}}
${51:   ${52:wait}: ${53:"#"}}
${54:   ${55:wait_timeout}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>one_service</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
