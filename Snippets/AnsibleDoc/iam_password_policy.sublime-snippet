<snippet>
<content><![CDATA[
${1:# allow_pw_change: Allow users to change their password. 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# min_pw_length: Minimum password length. 
# profile: Uses a boto profile. Only works with boto >= 
# pw_expire: Prevents users from change an expired password. 
# pw_max_age: Maximum age for a password in days. 
# pw_reuse_prevent: Prevent re-use of passwords. 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# require_lowercase: Require lowercase letters in password. 
# require_numbers: Require numbers in password. 
# require_symbols: Require symbols in password. 
# require_uppercase: Require uppercase letters in password. 
# security_token: AWS STS security token. If not set then the 
# state: (required) Specifies the overall state of the 
# validate_certs: When set to "no", SSL certificates will not be 
}- name: ${2:Name for iam_password_policy module.}
  iam_password_policy:
${3:   ${4:allow_pw_change}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_secret_key}: ${11:"#"}}
${12:   ${13:debug_botocore_endpoint_logs}: ${14:"#"}}
${15:   ${16:ec2_url}: ${17:"#"}}
${18:   ${19:min_pw_length}: ${20:"#"}}
${21:   ${22:profile}: ${23:"#"}}
${24:   ${25:pw_expire}: ${26:"#"}}
${27:   ${28:pw_max_age}: ${29:"#"}}
${30:   ${31:pw_reuse_prevent}: ${32:"#"}}
${33:   ${34:region}: ${35:"#"}}
${36:   ${37:}: ${38:"#"}}
${39:   ${40:require_lowercase}: ${41:"#"}}
${42:   ${43:require_numbers}: ${44:"#"}}
${45:   ${46:require_symbols}: ${47:"#"}}
${48:   ${49:require_uppercase}: ${50:"#"}}
${51:   ${52:security_token}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>iam_password_policy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
