<snippet>
<content><![CDATA[
${1:# admin_state: Administrative state of the VRF. 
# aggregate: List of VRFs definitions. 
# associated_interfaces: This is a intent option and checks the 
# delay: Time in seconds to wait before checking for the 
# description: Description of the VRF or keyword 'default'. 
# interfaces: List of interfaces to check the VRF has been 
# name: (required) Name of VRF to be managed. 
# provider: *Deprecated* Starting with Ansible 2.5 we 
# purge: Purge VRFs not defined in the `aggregate' 
# rd: VPN Route Distinguisher (RD). Valid values are a 
# state: Manages desired state of the resource. 
# vni: Specify virtual network identifier. Valid values 
}- name: ${2:Name for nxos_vrf module.}
  nxos_vrf:
${3:   ${4:admin_state}: ${5:"#"}}
${6:   ${7:aggregate}: ${8:"#"}}
${9:   ${10:associated_interfaces}: ${11:"#"}}
${12:   ${13:delay}: ${14:"#"}}
${15:   ${16:description}: ${17:"#"}}
${18:   ${19:interfaces}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:provider}: ${26:"#"}}
${27:   ${28:purge}: ${29:"#"}}
${30:   ${31:rd}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:vni}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>nxos_vrf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
