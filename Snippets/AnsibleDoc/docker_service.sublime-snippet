<snippet>
<content><![CDATA[
${1:# api_version: The version of the Docker API running on the 
# build: Use with state `present' to always build images 
# cacert_path: Use a CA certificate when performing server 
# cert_path: Path to the client's TLS certificate file. If 
# debug: Debug mode 
# definition: Provide docker-compose yaml describing one or 
# dependencies: When `state' is `present' specify whether or not 
# docker_host: The URL or Unix socket path used to connect to 
# files: List of file names relative to `project_src'. 
# hostname_check: Whether or not to check the Docker daemon's 
# key_path: Path to the client's TLS key file. If the value 
# nocache: Use with the build option to ignore the cache 
# project_name: Provide a project name. If not provided, the 
# project_src: Path to a directory containing a docker- 
# pull: Use with state `present' to always pull images 
# recreate: By default containers will be recreated when 
# remove_images: Use with state `absent' to remove the all images 
# remove_orphans: Remove containers for services not defined in 
# remove_volumes: Use with state `absent' to remove data volumes. 
# restarted: Use with state `present' to restart all 
# scale: When `state' is `present' scale services. 
# services: When `state' is `present' run `docker-compose 
# ssl_version: Provide a valid SSL version number. Default 
# state: Desired state of the project. Specifying 
# stopped: Use with state `present' to leave the containers 
# timeout: timeout in seconds for container shutdown when 
# tls: Secure the connection to the API by using TLS 
# tls_hostname: When verifying the authenticity of the Docker 
# tls_verify: Secure the connection to the API by using TLS 
}- name: ${2:Name for docker_service module.}
  docker_service:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:build}: ${8:"#"}}
${9:   ${10:cacert_path}: ${11:"#"}}
${12:   ${13:cert_path}: ${14:"#"}}
${15:   ${16:debug}: ${17:"#"}}
${18:   ${19:definition}: ${20:"#"}}
${21:   ${22:dependencies}: ${23:"#"}}
${24:   ${25:docker_host}: ${26:"#"}}
${27:   ${28:files}: ${29:"#"}}
${30:   ${31:hostname_check}: ${32:"#"}}
${33:   ${34:key_path}: ${35:"#"}}
${36:   ${37:nocache}: ${38:"#"}}
${39:   ${40:project_name}: ${41:"#"}}
${42:   ${43:project_src}: ${44:"#"}}
${45:   ${46:pull}: ${47:"#"}}
${48:   ${49:recreate}: ${50:"#"}}
${51:   ${52:remove_images}: ${53:"#"}}
${54:   ${55:remove_orphans}: ${56:"#"}}
${57:   ${58:remove_volumes}: ${59:"#"}}
${60:   ${61:restarted}: ${62:"#"}}
${63:   ${64:scale}: ${65:"#"}}
${66:   ${67:services}: ${68:"#"}}
${69:   ${70:ssl_version}: ${71:"#"}}
${72:   ${73:state}: ${74:"#"}}
${75:   ${76:stopped}: ${77:"#"}}
${78:   ${79:timeout}: ${80:"#"}}
${81:   ${82:tls}: ${83:"#"}}
${84:   ${85:tls_hostname}: ${86:"#"}}
${87:   ${88:tls_verify}: ${89:"#"}}
${90:${91:   become: ${92:true}} 
${93:   become_method: ${94:su}} 
${95:   become_user: ${96:nobody}} 
${97:   become_flags: ${98:"-s /bin/sh"}}} 
${99:   when: ${100:variable is defined}} 
${101:   with_items: ${102:array}} 
]]></content>
	<tabTrigger>docker_service</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
