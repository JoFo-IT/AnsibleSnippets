<snippet>
<content><![CDATA[
${1:# account_key_content: Content of the ACME account RSA or Elliptic 
# account_key_src: Path to a file containing the ACME account RSA 
# account_uri: If specified, assumes that the account URI is as 
# acme_directory: The ACME directory to use. This is the entry 
# acme_version: The ACME version of the endpoint. Must be 1 for 
# content: An encoded JSON object which will be sent as the 
# fail_on_acme_error: If `method' is `post' or `get', make the module 
# method: The method to use to access the given URL on the 
# select_crypto_backend: Determines which crypto backend to use. The 
# url: The URL to send the request to. Must be 
# validate_certs: Whether calls to the ACME directory will 
}- name: ${2:Name for acme_inspect module.}
  acme_inspect:
${3:   ${4:account_key_content}: ${5:"#"}}
${6:   ${7:account_key_src}: ${8:"#"}}
${9:   ${10:account_uri}: ${11:"#"}}
${12:   ${13:acme_directory}: ${14:"#"}}
${15:   ${16:acme_version}: ${17:"#"}}
${18:   ${19:content}: ${20:"#"}}
${21:   ${22:fail_on_acme_error}: ${23:"#"}}
${24:   ${25:method}: ${26:"#"}}
${27:   ${28:select_crypto_backend}: ${29:"#"}}
${30:   ${31:url}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>acme_inspect</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
