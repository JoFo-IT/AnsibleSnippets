<snippet>
<content><![CDATA[
${1:# access: The access mode for this datasource. 
# aws_access_key: AWS access key for CloudWatch datasource type 
# aws_assume_role_arn: AWS IAM role arn to assume for CloudWatch 
# aws_auth_type: Type for AWS authentication for CloudWatch 
# aws_credentials_profile: Profile for AWS credentials for CloudWatch 
# aws_custom_metrics_namespaces: Namespaces of Custom Metrics for CloudWatch 
# aws_default_region: AWS default region for CloudWatch datasource 
# aws_secret_key: AWS secret key for CloudWatch datasource type 
# basic_auth_password: The datasource basic auth password, when `basic 
# basic_auth_user: The datasource basic auth user. Setting this 
# client_cert: TLS certificate path used by ansible to query 
# client_key: TLS private key path used by ansible to query 
# database: Name of the database for the datasource. This 
# ds_type: (required) The type of the datasource. 
# es_version: Elasticsearch version (for `ds_type = 
# grafana_api_key: The Grafana API key. If set, `grafana_user' and 
# grafana_url: (required) The Grafana URL. 
# interval: For elasticsearch `ds_type', this is the index 
# is_default: Make this datasource the default one. 
# max_concurrent_shard_requests: Starting with elasticsearch 5.6, you can specify 
# name: (required) The name of the datasource. 
# org_id: Grafana Organisation ID in which the datasource 
# password: The datasource password 
# sslmode: SSL mode for `postgres' datasoure type. 
# state: Status of the datasource 
# time_field: Name of the time field in elasticsearch ds. For 
# time_interval: Minimum group by interval for `influxdb' or 
# tls_ca_cert: The TLS CA certificate for self signed 
# tls_client_cert: The client TLS certificate. If `tls_client_cert' 
# tls_client_key: The client TLS private key Starts with ----- 
# tls_skip_verify: Skip the TLS datasource certificate 
# trends: Use trends or not for zabbix datasource type 
# tsdb_resolution: The opentsdb time resolution. 
# tsdb_version: The opentsdb version. Use `1' for <=2.1, `2' for 
# url: (required) The URL of the datasource. 
# url_password: The Grafana API password. 
# url_username: The Grafana API user. 
# use_proxy: Boolean of whether or not to use proxy. 
# user: The datasource login user for influxdb 
# validate_certs: Whether to validate the Grafana certificate. 
# with_credentials: Whether credentials such as cookies or auth 
}- name: ${2:Name for grafana_datasource module.}
  grafana_datasource:
${3:   ${4:access}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_assume_role_arn}: ${11:"#"}}
${12:   ${13:aws_auth_type}: ${14:"#"}}
${15:   ${16:aws_credentials_profile}: ${17:"#"}}
${18:   ${19:aws_custom_metrics_namespaces}: ${20:"#"}}
${21:   ${22:aws_default_region}: ${23:"#"}}
${24:   ${25:aws_secret_key}: ${26:"#"}}
${27:   ${28:basic_auth_password}: ${29:"#"}}
${30:   ${31:basic_auth_user}: ${32:"#"}}
${33:   ${34:client_cert}: ${35:"#"}}
${36:   ${37:client_key}: ${38:"#"}}
${39:   ${40:database}: ${41:"#"}}
${42:   ${43:ds_type}: ${44:"#"}}
${45:   ${46:es_version}: ${47:"#"}}
${48:   ${49:grafana_api_key}: ${50:"#"}}
${51:   ${52:grafana_url}: ${53:"#"}}
${54:   ${55:interval}: ${56:"#"}}
${57:   ${58:is_default}: ${59:"#"}}
${60:   ${61:max_concurrent_shard_requests}: ${62:"#"}}
${63:   ${64:name}: ${65:"#"}}
${66:   ${67:org_id}: ${68:"#"}}
${69:   ${70:password}: ${71:"#"}}
${72:   ${73:sslmode}: ${74:"#"}}
${75:   ${76:state}: ${77:"#"}}
${78:   ${79:time_field}: ${80:"#"}}
${81:   ${82:time_interval}: ${83:"#"}}
${84:   ${85:tls_ca_cert}: ${86:"#"}}
${87:   ${88:tls_client_cert}: ${89:"#"}}
${90:   ${91:tls_client_key}: ${92:"#"}}
${93:   ${94:tls_skip_verify}: ${95:"#"}}
${96:   ${97:trends}: ${98:"#"}}
${99:   ${100:tsdb_resolution}: ${101:"#"}}
${102:   ${103:tsdb_version}: ${104:"#"}}
${105:   ${106:url}: ${107:"#"}}
${108:   ${109:url_password}: ${110:"#"}}
${111:   ${112:url_username}: ${113:"#"}}
${114:   ${115:use_proxy}: ${116:"#"}}
${117:   ${118:user}: ${119:"#"}}
${120:   ${121:validate_certs}: ${122:"#"}}
${123:   ${124:with_credentials}: ${125:"#"}}
${126:${127:   become: ${128:true}} 
${129:   become_method: ${130:su}} 
${131:   become_user: ${132:nobody}} 
${133:   become_flags: ${134:"-s /bin/sh"}}} 
${135:   when: ${136:variable is defined}} 
${137:   with_items: ${138:array}} 
]]></content>
	<tabTrigger>grafana_datasource</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
