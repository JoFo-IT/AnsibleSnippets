<snippet>
<content><![CDATA[
${1:#backup = Create a backup file (if `yes'), including the timestamp information so you can get the original file back if
#delimiter = A delimiter to separate the file contents.
#dest = A file to create using the concatenation of all of the source files.
#follow = This flag indicates that filesystem links, if they exist, should be followed.
#group = name of the group that should own the file/directory, as would be fed to `chown'
#ignore_hidden = A boolean that controls if files that start with a '.' will be included or not.
#mode = mode the file or directory should be. For those used to `/usr/bin/chmod' remember that modes are actually octal
#owner = name of the user that should own the file/directory, as would be fed to `chown'
#regexp = Assemble files only if `regex' matches the filename. If not set, all files are assembled. All "\" (backslash)
#remote_src = If False, it will search for src at originating/master machine, if True it will go to the remote/target machine
#selevel = level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range'.
#serole = role part of SELinux file context, `_default' feature works as for `seuser'.
#setype = type part of SELinux file context, `_default' feature works as for `seuser'.
#seuser = user part of SELinux file context. Will default to system policy, if applicable. If set to `_default', it will
#src = An already existing directory full of source files.
#validate = The validation command to run before copying into place.  The path to the file to validate is passed in via '%s'
}- name: ${2:Name for assemble module.}
${3:  become: ${4:yes}}
  assemble: ${5:backup=${6: } }${7:delimiter=${8: } }${9:dest=${10: } }${11:follow=${12: } }${13:group=${14: } }${15:ignore_hidden=${16: } }${17:mode=${18: } }${19:owner=${20: } }${21:regexp=${22: } }${23:remote_src=${24: } }${25:selevel=${26: } }${27:serole=${28: } }${29:setype=${30: } }${31:seuser=${32: } }${33:src=${34: } }${35:validate=${36: } }
${37:  when: ${38: variable is defined}}
${39:  with_items: ${40: array}}
]]></content>
	<tabTrigger>assemble</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
