<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To 
# backup: Create a backup file (if `yes'), including the 
# decrypt: This option controls the autodecryption of 
# delimiter: A delimiter to separate the file contents. 
# dest: (required) A file to create using the 
# group: Name of the group that should own the 
# ignore_hidden: A boolean that controls if files that start with 
# mode: Mode the file or directory should be. For those 
# owner: Name of the user that should own the 
# regexp: Assemble files only if `regex' matches the 
# remote_src: If False, it will search for src at 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# src: (required) An already existing directory full of 
# unsafe_writes: By default this module uses atomic operations to 
# validate: The validation command to run before copying 
}- name: ${2:Name for assemble module.}
  assemble:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:decrypt}: ${11:"#"}}
${12:   ${13:delimiter}: ${14:"#"}}
${15:   ${16:dest}: ${17:"#"}}
${18:   ${19:group}: ${20:"#"}}
${21:   ${22:ignore_hidden}: ${23:"#"}}
${24:   ${25:mode}: ${26:"#"}}
${27:   ${28:owner}: ${29:"#"}}
${30:   ${31:regexp}: ${32:"#"}}
${33:   ${34:remote_src}: ${35:"#"}}
${36:   ${37:selevel}: ${38:"#"}}
${39:   ${40:serole}: ${41:"#"}}
${42:   ${43:setype}: ${44:"#"}}
${45:   ${46:seuser}: ${47:"#"}}
${48:   ${49:src}: ${50:"#"}}
${51:   ${52:unsafe_writes}: ${53:"#"}}
${54:   ${55:validate}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>assemble</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
