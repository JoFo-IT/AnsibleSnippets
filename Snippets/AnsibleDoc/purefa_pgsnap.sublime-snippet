<snippet>
<content><![CDATA[
${1:# api_token: (required) FlashArray API token for admin 
# eradicate: Define whether to eradicate the snapshot on 
# fa_url: (required) FlashArray management IPv4 address or 
# name: (required) The name of the source protection 
# overwrite: Define whether to overwrite the target volume if 
# restore: Restore a specific volume from a protection 
# state: Define whether the protection group snapshot 
# suffix: Suffix of snapshot name. 
# target: Volume to restore a specified volume to. If not 
}- name: ${2:Name for purefa_pgsnap module.}
  purefa_pgsnap:
${3:   ${4:api_token}: ${5:"#"}}
${6:   ${7:eradicate}: ${8:"#"}}
${9:   ${10:fa_url}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:overwrite}: ${17:"#"}}
${18:   ${19:restore}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:suffix}: ${26:"#"}}
${27:   ${28:target}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>purefa_pgsnap</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
