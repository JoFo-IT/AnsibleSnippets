<snippet>
<content><![CDATA[
${1:# api_token: (required) FlashArray API token for admin 
# apply_retention: Apply retention schedule settings to the 
# eradicate: Define whether to eradicate the snapshot on 
# fa_url: (required) FlashArray management IPv4 address or 
# name: (required) The name of the source protection 
# now: Whether to initiate a snapshot of the protection 
# overwrite: Define whether to overwrite the target volume if 
# remote: Force immeadiate snapshot to remote targets 
# restore: Restore a specific volume from a protection 
# state: Define whether the protection group snapshot 
# suffix: Suffix of snapshot name. 
# target: Volume to restore a specified volume to. If not 
}- name: ${2:Name for purefa_pgsnap module.}
  purefa_pgsnap:
${3:   ${4:api_token}: ${5:"#"}}
${6:   ${7:apply_retention}: ${8:"#"}}
${9:   ${10:eradicate}: ${11:"#"}}
${12:   ${13:fa_url}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:now}: ${20:"#"}}
${21:   ${22:overwrite}: ${23:"#"}}
${24:   ${25:remote}: ${26:"#"}}
${27:   ${28:restore}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:suffix}: ${35:"#"}}
${36:   ${37:target}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>purefa_pgsnap</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
