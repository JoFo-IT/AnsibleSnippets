<snippet>
<content><![CDATA[
${1:# auth_pass: Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' 
# authorize: Instructs the module to enter privileged mode on the remote device before sending any commands.  If not 
# domain_name: Configure the IP domain name on the remote device to the provided value. Value should be in the dotted 
# domain_search: Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. 
# hostname: Configure the device hostname parameter. This option takes an ASCII string value. 
# lookup_source: Provides one or more source interfaces to use for performing DNS lookups.  The interface provided in 
# name_servers: List of DNS name servers by IP address to use to perform name resolution lookups.  This argument accepts 
# provider: A dict object containing connection details. 
# state: State of the configuration values in the device's current active configuration.  When set to `present', 
}- name: ${2:Name for eos_system module.}
  eos_system:
${3:   ${4:auth_pass}: ${5:"#"}}
${6:   ${7:authorize}: ${8:"#"}}
${9:   ${10:domain_name}: ${11:"#"}}
${12:   ${13:domain_search}: ${14:"#"}}
${15:   ${16:hostname}: ${17:"#"}}
${18:   ${19:lookup_source}: ${20:"#"}}
${21:   ${22:name_servers}: ${23:"#"}}
${24:   ${25:provider}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>eos_system</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
