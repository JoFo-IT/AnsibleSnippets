<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# clear_meta: Optionally clear existing metadata when applying metadata to existing containers. Selecting this option 
# container: (required) The container to use for container or metadata operations. 
# credentials: File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided. 
# env: Environment as configured in `~/.pyrax.cfg', see 
# : pyrax-configuration. 
# meta: A hash of items to set as metadata values on a container 
# private: Used to set a container as private, removing it from the CDN.  *Warning!* Private containers, if 
# public: Used to set a container as public, available via the Cloud Files CDN 
# region: Region to create an instance in 
# state: Indicate desired state of the resource 
# ttl: In seconds, set a container-wide TTL for all objects cached on CDN edge nodes. Setting a TTL is only 
# type: Type of object to do work on, i.e. metadata object or a container object 
# username: Rackspace username, overrides `credentials'. 
# verify_ssl: Whether or not to require SSL validation of API endpoints. 
# web_error: Sets an object to be presented as the HTTP error page when accessed by the CDN URL 
# web_index: Sets an object to be presented as the HTTP index page when accessed by the CDN URL 
}- name: ${2:Name for rax_files module.}
  rax_files:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:clear_meta}: ${8:"#"}}
${9:   ${10:container}: ${11:"#"}}
${12:   ${13:credentials}: ${14:"#"}}
${15:   ${16:env}: ${17:"#"}}
${18:   ${19:}: ${20:"#"}}
${21:   ${22:meta}: ${23:"#"}}
${24:   ${25:private}: ${26:"#"}}
${27:   ${28:public}: ${29:"#"}}
${30:   ${31:region}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:ttl}: ${38:"#"}}
${39:   ${40:type}: ${41:"#"}}
${42:   ${43:username}: ${44:"#"}}
${45:   ${46:verify_ssl}: ${47:"#"}}
${48:   ${49:web_error}: ${50:"#"}}
${51:   ${52:web_index}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>rax_files</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
