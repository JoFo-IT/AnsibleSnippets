<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# clear_meta: Optionally clear existing metadata when applying 
# container: (required) The container to use for container or 
# credentials: File to find the Rackspace credentials in. 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# identity_type: Authentication mechanism to use, such as 
# meta: A hash of items to set as metadata values on a 
# private: Used to set a container as private, removing it 
# public: Used to set a container as public, available via 
# region: Region to create an instance in 
# state: Indicate desired state of the resource 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# ttl: In seconds, set a container-wide TTL for all 
# type: Type of object to do work on, i.e. metadata 
# username: Rackspace username, overrides `credentials'. 
# validate_certs: Whether or not to require SSL validation of API 
# web_error: Sets an object to be presented as the HTTP error 
# web_index: Sets an object to be presented as the HTTP index 
}- name: ${2:Name for rax_files module.}
  rax_files:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:auth_endpoint}: ${8:"#"}}
${9:   ${10:clear_meta}: ${11:"#"}}
${12:   ${13:container}: ${14:"#"}}
${15:   ${16:credentials}: ${17:"#"}}
${18:   ${19:env}: ${20:"#"}}
${21:   ${22:md}: ${23:"#"}}
${24:   ${25:identity_type}: ${26:"#"}}
${27:   ${28:meta}: ${29:"#"}}
${30:   ${31:private}: ${32:"#"}}
${33:   ${34:public}: ${35:"#"}}
${36:   ${37:region}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:tenant_id}: ${44:"#"}}
${45:   ${46:tenant_name}: ${47:"#"}}
${48:   ${49:ttl}: ${50:"#"}}
${51:   ${52:type}: ${53:"#"}}
${54:   ${55:username}: ${56:"#"}}
${57:   ${58:validate_certs}: ${59:"#"}}
${60:   ${61:web_error}: ${62:"#"}}
${63:   ${64:web_index}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>rax_files</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
