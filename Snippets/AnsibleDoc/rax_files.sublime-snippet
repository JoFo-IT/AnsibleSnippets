<snippet>
<content><![CDATA[
${1:#api_key = Rackspace API key (overrides `credentials')
#clear_meta = Optionally clear existing metadata when applying metadata to existing containers. Selecting this option is only
#container = The container to use for container or metadata operations.
#credentials = File to find the Rackspace credentials in (ignored if `api_key' and `username' are provided)
#env = Environment as configured in ~/.pyrax.cfg, see
#https = pyrax-
#meta = A hash of items to set as metadata values on a container
#private = Used to set a container as private, removing it from the CDN.  *Warning!* Private containers, if previously made
#public = Used to set a container as public, available via the Cloud Files CDN
#region = Region to create an instance in
#state = Indicate desired state of the resource
#ttl = In seconds, set a container-wide TTL for all objects cached on CDN edge nodes. Setting a TTL is only appropriate
#type = Type of object to do work on, i.e. metadata object or a container object
#username = Rackspace username (overrides `credentials')
#verify_ssl = Whether or not to require SSL validation of API endpoints
#web_error = Sets an object to be presented as the HTTP error page when accessed by the CDN URL
#web_index = Sets an object to be presented as the HTTP index page when accessed by the CDN URL
}- name: ${2:Name for rax_files module.}
${3:  become: ${4:yes}}
  rax_files: ${5:api_key=${6: } }${7:clear_meta=${8: } }${9:container=${10: } }${11:credentials=${12: } }${13:env=${14: } }${15:https=${16: } }${17:meta=${18: } }${19:private=${20: } }${21:public=${22: } }${23:region=${24: } }${25:state=${26: } }${27:ttl=${28: } }${29:type=${30: } }${31:username=${32: } }${33:verify_ssl=${34: } }${35:web_error=${36: } }${37:web_index=${38: } }
${39:  when: ${40: variable is defined}}
${41:  with_items: ${42: array}}
]]></content>
	<tabTrigger>rax_files</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
