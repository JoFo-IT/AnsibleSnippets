<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#cache_engine_version = The version number of the cache engine
#cache_parameter_group = The name of the cache parameter group to associate with this cache cluster. If this argument is omitted, the
#cache_port = The port number on which each of the cache nodes will accept connections
#cache_security_groups = A list of cache security group names to associate with this cache cluster. Must be an empty list if inside a vpc
#cache_subnet_group = The subnet group name to associate with. Only use if inside a vpc. Required if inside a vpc
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#engine = Name of the cache engine to be used (memcached or redis)
#hard_modify = Whether to destroy and recreate an existing cache cluster if necessary in order to modify its state
#name = The cache cluster identifier
#node_type = The compute and memory capacity of the nodes in the cache cluster
#num_nodes = The initial number of cache nodes that the cache cluster will have. Required when state=present.
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_group_ids = A list of vpc security group names to associate with this cache cluster. Only use if inside a vpc
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#state = `absent' or `present' are idempotent actions that will create or destroy a cache cluster as needed. `rebooted'
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#wait = Wait for cache cluster result before returning
#zone = The EC2 Availability Zone in which the cache cluster will be created
}- name: ${2:Name for elasticache module.}
${3:  become: ${4:yes}}
  elasticache: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:cache_engine_version=${10: } }${11:cache_parameter_group=${12: } }${13:cache_port=${14: } }${15:cache_security_groups=${16: } }${17:cache_subnet_group=${18: } }${19:ec2_url=${20: } }${21:engine=${22: } }${23:hard_modify=${24: } }${25:name=${26: } }${27:node_type=${28: } }${29:num_nodes=${30: } }${31:profile=${32: } }${33:region=${34: } }${35:http=${36: } }${37:security_group_ids=${38: } }${39:security_token=${40: } }${41:state=${42: } }${43:validate_certs=${44: } }${45:wait=${46: } }${47:zone=${48: } }
${49:  when: ${50: variable is defined}}
${51:  with_items: ${52: array}}
]]></content>
	<tabTrigger>elasticache</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
