<snippet>
<content><![CDATA[
${1:# acpi: Specify if ACPI should be enabled/disabled. 
# agent: Specify if the QEMU Guest Agent should be 
# api_host: (required) Specify the target host of the 
# api_password: Specify the password to authenticate with. You 
# api_user: (required) Specify the user to authenticate 
# args: Pass arbitrary arguments to kvm. This option is 
# autostart: Specify if the VM should be automatically 
# balloon: Specify the amount of RAM for the VM in MB. 
# bios: Specify the BIOS implementation. 
# boot: Specify the boot order -> boot on floppy `a', 
# bootdisk: Enable booting from specified disk. 
# clone: Name of VM to be cloned. If `vmid' is setted, 
# cores: Specify number of cores per socket. 
# cpu: Specify emulated CPU type. 
# cpulimit: Specify if CPU usage will be limited. Value 0 
# cpuunits: Specify CPU weight for a VM. You can disable 
# delete: Specify a list of settings you want to delete. 
# description: Specify the description for the VM. Only used on 
# digest: Specify if to prevent changes if current 
# force: Allow to force stop VM. Can be used only with 
# format: Target drive's backing file's data format. Used 
# freeze: Specify if PVE should freeze CPU at startup (use 
# full: Create a full copy of all disk. This is always 
# hostpci: Specify a hash/dictionary of map host pci 
# hotplug: Selectively enable hotplug features. This is a 
# hugepages: Enable/disable hugepages memory. 
# ide: A hash/dictionary of volume used as IDE hard 
# keyboard: Sets the keyboard layout for VNC server. 
# kvm: Enable/disable KVM hardware virtualization. 
# localtime: Sets the real time clock to local time. This is 
# lock: Lock/unlock the VM. 
# machine: Specifies the Qemu machine type. type => `(pc|pc 
# memory: Memory size in MB for instance. 
# migrate_downtime: Sets maximum tolerated downtime (in seconds) for 
# migrate_speed: Sets maximum speed (in MB/s) for migrations. A 
# name: Specifies the VM name. Only used on the 
# net: A hash/dictionary of network interfaces for the 
# newid: VMID for the clone. Used only with clone. If 
# node: Proxmox VE node, where the new VM will be 
# numa: A hash/dictionaries of NUMA topology. 
# onboot: Specifies whether a VM will be started during 
# ostype: Specifies guest operating system. This is used 
# parallel: A hash/dictionary of map host parallel devices. 
# pool: Add the new VM to the specified pool. 
# protection: Enable/disable the protection flag of the VM. 
# reboot: Allow reboot. If set to `yes', the VM exit on 
# revert: Revert a pending change. 
# sata: A hash/dictionary of volume used as sata hard 
# scsi: A hash/dictionary of volume used as SCSI hard 
# scsihw: Specifies the SCSI controller model. 
# serial: A hash/dictionary of serial device to create 
# shares: Rets amount of memory shares for auto- 
# skiplock: Ignore locks Only root is allowed to use this 
# smbios: Specifies SMBIOS type 1 fields. 
# snapname: The name of the snapshot. Used only with clone. 
# sockets: Sets the number of CPU sockets. (1 - N). 
# startdate: Sets the initial date of the real time clock. 
# startup: Startup and shutdown behavior. `[[order=]\d+] 
# state: Indicates desired state of the instance. If 
# storage: Target storage for full clone. 
# tablet: Enables/disables the USB tablet device. 
# target: Target node. Only allowed if the original VM is 
# tdf: Enables/disables time drift fix. 
# template: Enables/disables the template. 
# timeout: Timeout for operations. 
# update: If `yes', the VM will be update with new value. 
# validate_certs: If `no', SSL certificates will not be validated. 
# vcpus: Sets number of hotplugged vcpus. 
# vga: Select VGA type. If you want to use high 
# virtio: A hash/dictionary of volume used as VIRTIO hard 
# vmid: Specifies the VM ID. Instead use `name' 
# watchdog: Creates a virtual hardware watchdog device. 
}- name: ${2:Name for proxmox_kvm module.}
  proxmox_kvm:
${3:   ${4:acpi}: ${5:"#"}}
${6:   ${7:agent}: ${8:"#"}}
${9:   ${10:api_host}: ${11:"#"}}
${12:   ${13:api_password}: ${14:"#"}}
${15:   ${16:api_user}: ${17:"#"}}
${18:   ${19:args}: ${20:"#"}}
${21:   ${22:autostart}: ${23:"#"}}
${24:   ${25:balloon}: ${26:"#"}}
${27:   ${28:bios}: ${29:"#"}}
${30:   ${31:boot}: ${32:"#"}}
${33:   ${34:bootdisk}: ${35:"#"}}
${36:   ${37:clone}: ${38:"#"}}
${39:   ${40:cores}: ${41:"#"}}
${42:   ${43:cpu}: ${44:"#"}}
${45:   ${46:cpulimit}: ${47:"#"}}
${48:   ${49:cpuunits}: ${50:"#"}}
${51:   ${52:delete}: ${53:"#"}}
${54:   ${55:description}: ${56:"#"}}
${57:   ${58:digest}: ${59:"#"}}
${60:   ${61:force}: ${62:"#"}}
${63:   ${64:format}: ${65:"#"}}
${66:   ${67:freeze}: ${68:"#"}}
${69:   ${70:full}: ${71:"#"}}
${72:   ${73:hostpci}: ${74:"#"}}
${75:   ${76:hotplug}: ${77:"#"}}
${78:   ${79:hugepages}: ${80:"#"}}
${81:   ${82:ide}: ${83:"#"}}
${84:   ${85:keyboard}: ${86:"#"}}
${87:   ${88:kvm}: ${89:"#"}}
${90:   ${91:localtime}: ${92:"#"}}
${93:   ${94:lock}: ${95:"#"}}
${96:   ${97:machine}: ${98:"#"}}
${99:   ${100:memory}: ${101:"#"}}
${102:   ${103:migrate_downtime}: ${104:"#"}}
${105:   ${106:migrate_speed}: ${107:"#"}}
${108:   ${109:name}: ${110:"#"}}
${111:   ${112:net}: ${113:"#"}}
${114:   ${115:newid}: ${116:"#"}}
${117:   ${118:node}: ${119:"#"}}
${120:   ${121:numa}: ${122:"#"}}
${123:   ${124:onboot}: ${125:"#"}}
${126:   ${127:ostype}: ${128:"#"}}
${129:   ${130:parallel}: ${131:"#"}}
${132:   ${133:pool}: ${134:"#"}}
${135:   ${136:protection}: ${137:"#"}}
${138:   ${139:reboot}: ${140:"#"}}
${141:   ${142:revert}: ${143:"#"}}
${144:   ${145:sata}: ${146:"#"}}
${147:   ${148:scsi}: ${149:"#"}}
${150:   ${151:scsihw}: ${152:"#"}}
${153:   ${154:serial}: ${155:"#"}}
${156:   ${157:shares}: ${158:"#"}}
${159:   ${160:skiplock}: ${161:"#"}}
${162:   ${163:smbios}: ${164:"#"}}
${165:   ${166:snapname}: ${167:"#"}}
${168:   ${169:sockets}: ${170:"#"}}
${171:   ${172:startdate}: ${173:"#"}}
${174:   ${175:startup}: ${176:"#"}}
${177:   ${178:state}: ${179:"#"}}
${180:   ${181:storage}: ${182:"#"}}
${183:   ${184:tablet}: ${185:"#"}}
${186:   ${187:target}: ${188:"#"}}
${189:   ${190:tdf}: ${191:"#"}}
${192:   ${193:template}: ${194:"#"}}
${195:   ${196:timeout}: ${197:"#"}}
${198:   ${199:update}: ${200:"#"}}
${201:   ${202:validate_certs}: ${203:"#"}}
${204:   ${205:vcpus}: ${206:"#"}}
${207:   ${208:vga}: ${209:"#"}}
${210:   ${211:virtio}: ${212:"#"}}
${213:   ${214:vmid}: ${215:"#"}}
${216:   ${217:watchdog}: ${218:"#"}}
${219:${220:   become: ${221:true}} 
${222:   become_method: ${223:su}} 
${224:   become_user: ${225:nobody}} 
${226:   become_flags: ${227:"-s /bin/sh"}}} 
${228:   when: ${229:variable is defined}} 
${230:   with_items: ${231:array}} 
]]></content>
	<tabTrigger>proxmox_kvm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
