<snippet>
<content><![CDATA[
${1:#checksum = If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is
#dest = absolute path of where to download the file to. If `dest' is a directory, either the server provided filename
#force = If `yes' and `dest' is not a directory, will download the file every time and replace the file if the contents
#force_basic_auth = httplib2, the library used by the uri module only sends authentication information when a webservice responds to
#headers = Add custom HTTP headers to a request in the format "key:value,key:value"
#others = all arguments accepted by the [file] module also work here
#sha256sum = If a SHA-256 checksum is passed to this parameter, the digest of the destination file will be calculated after
#timeout = Timeout for URL request
#url = HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path
#url_password = The password for use in HTTP basic authentication. If the `url_username' parameter is not specified, the
#url_username = The username for use in HTTP basic authentication. This parameter can be used without `url_password' for sites
#use_proxy = if `no', it will not use a proxy, even if one is defined in an environment variable on the target hosts.
#validate_certs = If `no', SSL certificates will not be validated. This should only be used on personally controlled sites using
}- name: ${2:Name for get_url module.}
${3:  become: ${4:yes}}
  get_url: ${5:checksum=${6: } }${7:dest=${8: } }${9:force=${10: } }${11:force_basic_auth=${12: } }${13:headers=${14: } }${15:others=${16: } }${17:sha256sum=${18: } }${19:timeout=${20: } }${21:url=${22: } }${23:url_password=${24: } }${25:url_username=${26: } }${27:use_proxy=${28: } }${29:validate_certs=${30: } }
${31:  when: ${32: variable is defined}}
${33:  with_items: ${34: array}}
]]></content>
	<tabTrigger>get_url</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
