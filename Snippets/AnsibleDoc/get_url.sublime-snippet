<snippet>
<content><![CDATA[
${1:# attributes: The attributes the resulting file or directory 
# backup: Create a backup file including the timestamp 
# checksum: If a checksum is passed to this parameter, the 
# client_cert: PEM formatted certificate chain file to be used 
# client_key: PEM formatted file that contains your private 
# dest: (required) Absolute path of where to download 
# force: If `yes' and `dest' is not a directory, will 
# force_basic_auth: Force the sending of the Basic authentication 
# group: Name of the group that should own the 
# headers: Add custom HTTP headers to a request in 
# http_agent: Header to identify as, generally appears in web 
# mode: The permissions the resulting file or directory 
# owner: Name of the user that should own the 
# selevel: The level part of the SELinux file context. This 
# serole: The role part of the SELinux file context. When 
# setype: The type part of the SELinux file context. When 
# seuser: The user part of the SELinux file context. By 
# sha256sum: If a SHA-256 checksum is passed to this 
# timeout: Timeout in seconds for URL request. 
# tmp_dest: Absolute path of where temporary file is 
# tml: tempfile.temp 
# unsafe_writes: Influence when to use atomic operation to 
# url: (required) HTTP, HTTPS, or FTP URL in the form ( 
# url_password: The password for use in HTTP basic 
# url_username: The username for use in HTTP basic 
# use_proxy: if `no', it will not use a proxy, even if one is 
# validate_certs: If `no', SSL certificates will not be validated. 
}- name: ${2:Name for get_url module.}
  get_url:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:checksum}: ${11:"#"}}
${12:   ${13:client_cert}: ${14:"#"}}
${15:   ${16:client_key}: ${17:"#"}}
${18:   ${19:dest}: ${20:"#"}}
${21:   ${22:force}: ${23:"#"}}
${24:   ${25:force_basic_auth}: ${26:"#"}}
${27:   ${28:group}: ${29:"#"}}
${30:   ${31:headers}: ${32:"#"}}
${33:   ${34:http_agent}: ${35:"#"}}
${36:   ${37:mode}: ${38:"#"}}
${39:   ${40:owner}: ${41:"#"}}
${42:   ${43:selevel}: ${44:"#"}}
${45:   ${46:serole}: ${47:"#"}}
${48:   ${49:setype}: ${50:"#"}}
${51:   ${52:seuser}: ${53:"#"}}
${54:   ${55:sha256sum}: ${56:"#"}}
${57:   ${58:timeout}: ${59:"#"}}
${60:   ${61:tmp_dest}: ${62:"#"}}
${63:   ${64:tml}: ${65:"#"}}
${66:   ${67:unsafe_writes}: ${68:"#"}}
${69:   ${70:url}: ${71:"#"}}
${72:   ${73:url_password}: ${74:"#"}}
${75:   ${76:url_username}: ${77:"#"}}
${78:   ${79:use_proxy}: ${80:"#"}}
${81:   ${82:validate_certs}: ${83:"#"}}
${84:${85:   become: ${86:true}} 
${87:   become_method: ${88:su}} 
${89:   become_user: ${90:nobody}} 
${91:   become_flags: ${92:"-s /bin/sh"}}} 
${93:   when: ${94:variable is defined}} 
${95:   with_items: ${96:array}} 
]]></content>
	<tabTrigger>get_url</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
