<snippet>
<content><![CDATA[
${1:# acl: Access controls on the bucket. 
# auth_kind: (required) The type of credential used. 
# cors: The bucket's Cross-Origin Resource Sharing 
# default_object_acl: Default access controls to apply to new objects 
# lifecycle: The bucket's lifecycle configuration. See https: 
# location: The location of the bucket. Object data for 
# logging: The bucket's logging configuration, which 
# metageneration: The metadata generation of this bucket. 
# name: The name of the bucket. 
# owner: The owner of the bucket. This is always the 
# predefined_default_object_acl: Apply a predefined set of default object access 
# project: A valid API project identifier. 
# scopes: Array of scopes to be used. 
# service_account_contents: A string representing the contents of a Service 
# service_account_email: An optional service account email address if 
# service_account_file: The path of a Service Account JSON file if 
# state: Whether the given object should exist in GCP 
# storage_class: The bucket's default storage class, used 
# versioning: The bucket's versioning configuration. 
# website: The bucket's website configuration, controlling 
}- name: ${2:Name for gcp_storage_bucket module.}
  gcp_storage_bucket:
${3:   ${4:acl}: ${5:"#"}}
${6:   ${7:auth_kind}: ${8:"#"}}
${9:   ${10:cors}: ${11:"#"}}
${12:   ${13:default_object_acl}: ${14:"#"}}
${15:   ${16:lifecycle}: ${17:"#"}}
${18:   ${19:location}: ${20:"#"}}
${21:   ${22:logging}: ${23:"#"}}
${24:   ${25:metageneration}: ${26:"#"}}
${27:   ${28:name}: ${29:"#"}}
${30:   ${31:owner}: ${32:"#"}}
${33:   ${34:predefined_default_object_acl}: ${35:"#"}}
${36:   ${37:project}: ${38:"#"}}
${39:   ${40:scopes}: ${41:"#"}}
${42:   ${43:service_account_contents}: ${44:"#"}}
${45:   ${46:service_account_email}: ${47:"#"}}
${48:   ${49:service_account_file}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:storage_class}: ${56:"#"}}
${57:   ${58:versioning}: ${59:"#"}}
${60:   ${61:website}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>gcp_storage_bucket</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
