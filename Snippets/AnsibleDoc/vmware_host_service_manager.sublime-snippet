<snippet>
<content><![CDATA[
${1:# cluster_name: Name of the cluster. Service settings are 
# esxi_hostname: ESXi hostname. Service settings are applied to 
# hostname: The hostname or IP address of the vSphere 
# password: The password of the vSphere vCenter or ESXi 
# port: The port number of the vSphere vCenter or ESXi 
# proxy_host: Address of a proxy that will receive all HTTPS 
# proxy_port: Port of the HTTP proxy that will receive all 
# service_name: (required) Name of Service to be managed. This 
# service_policy: Set of valid service policy strings. If set 
# state: Desired state of service. State value 'start' 
# username: The username of the vSphere vCenter or ESXi 
# validate_certs: Allows connection when SSL certificates are not 
}- name: ${2:Name for vmware_host_service_manager module.}
  vmware_host_service_manager:
${3:   ${4:cluster_name}: ${5:"#"}}
${6:   ${7:esxi_hostname}: ${8:"#"}}
${9:   ${10:hostname}: ${11:"#"}}
${12:   ${13:password}: ${14:"#"}}
${15:   ${16:port}: ${17:"#"}}
${18:   ${19:proxy_host}: ${20:"#"}}
${21:   ${22:proxy_port}: ${23:"#"}}
${24:   ${25:service_name}: ${26:"#"}}
${27:   ${28:service_policy}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:username}: ${35:"#"}}
${36:   ${37:validate_certs}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>vmware_host_service_manager</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
