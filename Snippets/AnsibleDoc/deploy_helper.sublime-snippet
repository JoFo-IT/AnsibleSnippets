<snippet>
<content><![CDATA[
${1:# clean: Whether to run the clean procedure in case of 
# current_path: the name of the symlink that is created when the 
# keep_releases: the number of old releases to keep when 
# path: (required) the root path of the project. Alias 
# release: the release version that is being deployed. 
# releases_path: the name of the folder that will hold the 
# shared_path: the name of the folder that will hold the shared 
# state: the state of the project. `query' will only 
# unfinished_filename: the name of the file that indicates a deploy has 
}- name: ${2:Name for deploy_helper module.}
  deploy_helper:
${3:   ${4:clean}: ${5:"#"}}
${6:   ${7:current_path}: ${8:"#"}}
${9:   ${10:keep_releases}: ${11:"#"}}
${12:   ${13:path}: ${14:"#"}}
${15:   ${16:release}: ${17:"#"}}
${18:   ${19:releases_path}: ${20:"#"}}
${21:   ${22:shared_path}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:unfinished_filename}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>deploy_helper</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
