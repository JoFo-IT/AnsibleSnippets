<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# credentials: File to find the Rackspace credentials in. 
# description: Description to give the volume being created 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# identity_type: Authentication mechanism to use, such as 
# image: image to use for bootable volumes. Can be an 
# meta: A hash of metadata to associate with the volume 
# name: (required) Name to give the volume being created 
# region: Region to create an instance in. 
# size: (required) Size of the volume to create in 
# snapshot_id: The id of the snapshot to create the volume from 
# state: (required) Indicate desired state of the 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# username: Rackspace username, overrides `credentials'. 
# validate_certs: Whether or not to require SSL validation of API 
# volume_type: (required) Type of the volume being created 
# wait: wait for the volume to be in state 'available' 
# wait_timeout: how long before wait gives up, in seconds 
}- name: ${2:Name for rax_cbs module.}
  rax_cbs:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:auth_endpoint}: ${8:"#"}}
${9:   ${10:credentials}: ${11:"#"}}
${12:   ${13:description}: ${14:"#"}}
${15:   ${16:env}: ${17:"#"}}
${18:   ${19:md}: ${20:"#"}}
${21:   ${22:identity_type}: ${23:"#"}}
${24:   ${25:image}: ${26:"#"}}
${27:   ${28:meta}: ${29:"#"}}
${30:   ${31:name}: ${32:"#"}}
${33:   ${34:region}: ${35:"#"}}
${36:   ${37:size}: ${38:"#"}}
${39:   ${40:snapshot_id}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:tenant_id}: ${47:"#"}}
${48:   ${49:tenant_name}: ${50:"#"}}
${51:   ${52:username}: ${53:"#"}}
${54:   ${55:validate_certs}: ${56:"#"}}
${57:   ${58:volume_type}: ${59:"#"}}
${60:   ${61:wait}: ${62:"#"}}
${63:   ${64:wait_timeout}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>rax_cbs</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
