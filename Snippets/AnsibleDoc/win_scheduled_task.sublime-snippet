<snippet>
<content><![CDATA[
${1:# actions: A list of action to configure for the task. See 
# allow_demand_start: Whether the task can be started by using either 
# allow_hard_terminate: Whether the task can be terminated by using 
# author: The author of the task. 
# compatibility: The integer value with indicates which version 
# date: The date when the task was registered. 
# delete_expired_task_after: The amount of time that the Task Scheduler will 
# description: The description of the task. 
# disallow_start_if_on_batteries: Whether the task will not be started if the 
# display_name: The name of the user/group that is displayed in 
# enabled: Whether the task is enabled, the task can only 
# execution_time_limit: The amount of time allowed to complete the task. 
# group: The group that will run the task. `group' and 
# hidden: Whether the task will be hidden in the UI. 
# logon_type: The logon method that the task will run with. 
# multiple_instances: An integer that indicates the behaviour when 
# name: (required) The name of the scheduled task 
# password: The password for the user account to run the 
# path: Task folder in which this task will be stored. 
# priority: The priority level (0-10) of the task. When 
# restart_count: The number of times that the Task Scheduler will 
# restart_interval: How long the Task Scheduler will attempt to 
# run_level: The level of user rights used to run the task. 
# run_only_if_idle: Whether the task will run the task only if the 
# run_only_if_network_available: Whether the task will run only when a network is 
# source: The source of the task. 
# start_when_available: Whether the task can start at any time after its 
# state: When `state=present' will ensure the task 
# stop_if_going_on_batteries: Whether the task will be stopped if the computer 
# triggers: A list of triggers to configure for the task. 
# update_password: Whether to update the password even when not 
# username: The user to run the scheduled task as. Will 
# version: The version number of the task. 
# wake_to_run: Whether the task will wake the computer when it 
}- name: ${2:Name for win_scheduled_task module.}
  win_scheduled_task:
${3:   ${4:actions}: ${5:"#"}}
${6:   ${7:allow_demand_start}: ${8:"#"}}
${9:   ${10:allow_hard_terminate}: ${11:"#"}}
${12:   ${13:author}: ${14:"#"}}
${15:   ${16:compatibility}: ${17:"#"}}
${18:   ${19:date}: ${20:"#"}}
${21:   ${22:delete_expired_task_after}: ${23:"#"}}
${24:   ${25:description}: ${26:"#"}}
${27:   ${28:disallow_start_if_on_batteries}: ${29:"#"}}
${30:   ${31:display_name}: ${32:"#"}}
${33:   ${34:enabled}: ${35:"#"}}
${36:   ${37:execution_time_limit}: ${38:"#"}}
${39:   ${40:group}: ${41:"#"}}
${42:   ${43:hidden}: ${44:"#"}}
${45:   ${46:logon_type}: ${47:"#"}}
${48:   ${49:multiple_instances}: ${50:"#"}}
${51:   ${52:name}: ${53:"#"}}
${54:   ${55:password}: ${56:"#"}}
${57:   ${58:path}: ${59:"#"}}
${60:   ${61:priority}: ${62:"#"}}
${63:   ${64:restart_count}: ${65:"#"}}
${66:   ${67:restart_interval}: ${68:"#"}}
${69:   ${70:run_level}: ${71:"#"}}
${72:   ${73:run_only_if_idle}: ${74:"#"}}
${75:   ${76:run_only_if_network_available}: ${77:"#"}}
${78:   ${79:source}: ${80:"#"}}
${81:   ${82:start_when_available}: ${83:"#"}}
${84:   ${85:state}: ${86:"#"}}
${87:   ${88:stop_if_going_on_batteries}: ${89:"#"}}
${90:   ${91:triggers}: ${92:"#"}}
${93:   ${94:update_password}: ${95:"#"}}
${96:   ${97:username}: ${98:"#"}}
${99:   ${100:version}: ${101:"#"}}
${102:   ${103:wake_to_run}: ${104:"#"}}
${105:${106:   become: ${107:true}} 
${108:   become_method: ${109:su}} 
${110:   become_user: ${111:nobody}} 
${112:   become_flags: ${113:"-s /bin/sh"}}} 
${114:   when: ${115:variable is defined}} 
${116:   with_items: ${117:array}} 
]]></content>
	<tabTrigger>win_scheduled_task</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
