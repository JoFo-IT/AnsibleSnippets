<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# db: Name of database to connect. 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# name: (required) Name of PostgreSQL server parameter. 
# port: Database port to connect to. 
# reset: Restore parameter to initial state (boot_val). 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
# value: (required) Parameter value to set. To remove 
}- name: ${2:Name for postgresql_set module.}
  postgresql_set:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:db}: ${8:"#"}}
${9:   ${10:login_host}: ${11:"#"}}
${12:   ${13:login_password}: ${14:"#"}}
${15:   ${16:login_unix_socket}: ${17:"#"}}
${18:   ${19:login_user}: ${20:"#"}}
${21:   ${22:name}: ${23:"#"}}
${24:   ${25:port}: ${26:"#"}}
${27:   ${28:reset}: ${29:"#"}}
${30:   ${31:session_role}: ${32:"#"}}
${33:   ${34:ssl_mode}: ${35:"#"}}
${36:   ${37:value}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>postgresql_set</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
