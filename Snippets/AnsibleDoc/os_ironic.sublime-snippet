<snippet>
<content><![CDATA[
${1:#api_timeout = How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be
#auth = Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password'
#auth_type = Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the
#availability_zone = Name of the availability zone.
#cacert = A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
#cert = A path to a client certificate to use as part of the SSL transaction
#chassis_uuid = Associate the node with a pre-defined chassis.
#cloud = Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is not needed
#driver = The name of the Ironic Driver to use with this node.
#driver_info = Information for this server's driver. Will vary based on which driver is in use. Any sub-field which is
#endpoint_type = Endpoint URL type to fetch from the service catalog.
#ironic_url = If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API.  Use with "auth"
#key = A path to a client key to use as part of the SSL transaction
#name = unique name identifier to be given to the resource.
#nics = A list of network interface cards, eg, " - mac: aa:bb:cc:aa:bb:cc"
#properties = Definition of the physical characteristics of this server, used for scheduling purposes
#region_name = Name of the region.
#skip_update_of_driver_password = Allows the code that would assert changes to nodes to skip the update if the change is a single line consisting
#state = Indicates desired state of the resource
#timeout = How long should ansible wait for the requested resource.
#uuid = globally unique identifier (UUID) to be given to the resource. Will be auto-generated if not specified, and name
#validate_certs = Whether or not SSL API requests should be verified.
#wait = Should ansible wait until the requested resource is complete.
}- name: ${2:Name for os_ironic module.}
${3:  become: ${4:yes}}
  os_ironic: ${5:api_timeout=${6: } }${7:auth=${8: } }${9:auth_type=${10: } }${11:availability_zone=${12: } }${13:cacert=${14: } }${15:cert=${16: } }${17:chassis_uuid=${18: } }${19:cloud=${20: } }${21:driver=${22: } }${23:driver_info=${24: } }${25:endpoint_type=${26: } }${27:ironic_url=${28: } }${29:key=${30: } }${31:name=${32: } }${33:nics=${34: } }${35:properties=${36: } }${37:region_name=${38: } }${39:skip_update_of_driver_password=${40: } }${41:state=${42: } }${43:timeout=${44: } }${45:uuid=${46: } }${47:validate_certs=${48: } }${49:wait=${50: } }
${51:  when: ${52: variable is defined}}
${53:  with_items: ${54: array}}
]]></content>
	<tabTrigger>os_ironic</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
