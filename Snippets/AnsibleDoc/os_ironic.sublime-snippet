<snippet>
<content><![CDATA[
${1:# api_timeout: How long should the socket layer wait before 
# auth: Dictionary containing auth information as needed 
# auth_type: Name of the auth plugin to use. If the cloud 
# availability_zone: Ignored. Present for backwards compatibility 
# ca_cert: A path to a CA Cert bundle that can be used as 
# chassis_uuid: Associate the node with a pre-defined chassis. 
# client_cert: A path to a client certificate to use as part of 
# client_key: A path to a client key to use as part of the SSL 
# cloud: Named cloud or cloud config to operate against. 
# driver: (required) The name of the Ironic Driver to use 
# driver_info: Information for this server's driver. Will vary 
# interface: Endpoint URL type to fetch from the service 
# ironic_url: If noauth mode is utilized, this is required to 
# name: unique name identifier to be given to the 
# nics: (required) A list of network interface cards, 
# properties: Definition of the physical characteristics of 
# region_name: Name of the region. 
# skip_update_of_driver_password: Allows the code that would assert changes to 
# state: Indicates desired state of the resource 
# timeout: How long should ansible wait for the requested 
# uuid: globally unique identifier (UUID) to be given to 
# validate_certs: Whether or not SSL API requests should be 
# wait: Should ansible wait until the requested resource 
}- name: ${2:Name for os_ironic module.}
  os_ironic:
${3:   ${4:api_timeout}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:auth_type}: ${11:"#"}}
${12:   ${13:availability_zone}: ${14:"#"}}
${15:   ${16:ca_cert}: ${17:"#"}}
${18:   ${19:chassis_uuid}: ${20:"#"}}
${21:   ${22:client_cert}: ${23:"#"}}
${24:   ${25:client_key}: ${26:"#"}}
${27:   ${28:cloud}: ${29:"#"}}
${30:   ${31:driver}: ${32:"#"}}
${33:   ${34:driver_info}: ${35:"#"}}
${36:   ${37:interface}: ${38:"#"}}
${39:   ${40:ironic_url}: ${41:"#"}}
${42:   ${43:name}: ${44:"#"}}
${45:   ${46:nics}: ${47:"#"}}
${48:   ${49:properties}: ${50:"#"}}
${51:   ${52:region_name}: ${53:"#"}}
${54:   ${55:skip_update_of_driver_password}: ${56:"#"}}
${57:   ${58:state}: ${59:"#"}}
${60:   ${61:timeout}: ${62:"#"}}
${63:   ${64:uuid}: ${65:"#"}}
${66:   ${67:validate_certs}: ${68:"#"}}
${69:   ${70:wait}: ${71:"#"}}
${72:${73:   become: ${74:true}} 
${75:   become_method: ${76:su}} 
${77:   become_user: ${78:nobody}} 
${79:   become_flags: ${80:"-s /bin/sh"}}} 
${81:   when: ${82:variable is defined}} 
${83:   with_items: ${84:array}} 
]]></content>
	<tabTrigger>os_ironic</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
