<snippet>
<content><![CDATA[
${1:#assign_public_ip = Used for Auto Scaling groups that launch instances into an Amazon Virtual Private Cloud. Specifies whether to
#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#classic_link_vpc_id = Id of ClassicLink enabled VPC
#classic_link_vpc_security_groups = A list of security group id's with which to associate the ClassicLink VPC instances.
#ebs_optimized = Specifies whether the instance is optimized for EBS I/O (true) or not (false).
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#image_id = The AMI unique identifier to be used for the group
#instance_monitoring = whether instances in group are launched with detailed monitoring.
#instance_profile_name = The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the
#instance_type = instance type to use for the instance
#kernel_id = Kernel id for the EC2 instance
#key_name = The SSH key name to be used for access to managed instances
#name = Unique name for configuration
#profile = uses a boto profile. Only works with boto >= 2.24.0
#ramdisk_id = A RAM disk id for the instances.
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_groups = A list of security groups into which instances should be found
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#spot_price = The spot price you are bidding. Only applies for an autoscaling group with spot instances.
#state = register or deregister the instance
#user_data = opaque blob of data which is made available to the ec2 instance
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#volumes = a list of volume dicts, each containing device name and optionally ephemeral id or snapshot id. Size and type
}- name: ${2:Name for ec2_lc module.}
${3:  become: ${4:yes}}
  ec2_lc: ${5:assign_public_ip=${6: } }${7:aws_access_key=${8: } }${9:aws_secret_key=${10: } }${11:classic_link_vpc_id=${12: } }${13:classic_link_vpc_security_groups=${14: } }${15:ebs_optimized=${16: } }${17:ec2_url=${18: } }${19:image_id=${20: } }${21:instance_monitoring=${22: } }${23:instance_profile_name=${24: } }${25:instance_type=${26: } }${27:kernel_id=${28: } }${29:key_name=${30: } }${31:name=${32: } }${33:profile=${34: } }${35:ramdisk_id=${36: } }${37:region=${38: } }${39:http=${40: } }${41:security_groups=${42: } }${43:security_token=${44: } }${45:spot_price=${46: } }${47:state=${48: } }${49:user_data=${50: } }${51:validate_certs=${52: } }${53:volumes=${54: } }
${55:  when: ${56: variable is defined}}
${57:  with_items: ${58: array}}
]]></content>
	<tabTrigger>ec2_lc</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
