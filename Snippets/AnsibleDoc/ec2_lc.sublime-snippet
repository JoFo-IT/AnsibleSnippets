<snippet>
<content><![CDATA[
${1:# assign_public_ip: Used for Auto Scaling groups that launch 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# classic_link_vpc_id: Id of ClassicLink enabled VPC 
# classic_link_vpc_security_groups: A list of security group IDs with which to 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# ebs_optimized: Specifies whether the instance is optimized for 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# image_id: The AMI unique identifier to be used for the 
# instance_id: The Id of a running instance to use as a basis 
# instance_monitoring: Specifies whether instances are launched with 
# instance_profile_name: The name or the Amazon Resource Name (ARN) of 
# instance_type: (required) Instance type to use for the instance 
# kernel_id: Kernel id for the EC2 instance 
# key_name: The SSH key name to be used for access to 
# name: (required) Unique name for configuration 
# placement_tenancy: Determines whether the instance runs on single- 
# profile: Uses a boto profile. Only works with boto >= 
# ramdisk_id: A RAM disk id for the instances. 
# region: The AWS region to use. If not specified then the 
# : ec2_region 
# security_groups: A list of security groups to apply to the 
# security_token: AWS STS security token. If not set then the 
# spot_price: The spot price you are bidding. Only applies for 
# state: Register or deregister the instance 
# user_data: Opaque blob of data which is made available to 
# user_data_path: Path to the file that contains userdata for the 
# validate_certs: When set to "no", SSL certificates will not be 
# volumes: A list of volume dicts, each containing device 
# vpc_id: VPC ID, used when resolving security group names 
}- name: ${2:Name for ec2_lc module.}
  ec2_lc:
${3:   ${4:assign_public_ip}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_secret_key}: ${11:"#"}}
${12:   ${13:classic_link_vpc_id}: ${14:"#"}}
${15:   ${16:classic_link_vpc_security_groups}: ${17:"#"}}
${18:   ${19:debug_botocore_endpoint_logs}: ${20:"#"}}
${21:   ${22:ebs_optimized}: ${23:"#"}}
${24:   ${25:ec2_url}: ${26:"#"}}
${27:   ${28:image_id}: ${29:"#"}}
${30:   ${31:instance_id}: ${32:"#"}}
${33:   ${34:instance_monitoring}: ${35:"#"}}
${36:   ${37:instance_profile_name}: ${38:"#"}}
${39:   ${40:instance_type}: ${41:"#"}}
${42:   ${43:kernel_id}: ${44:"#"}}
${45:   ${46:key_name}: ${47:"#"}}
${48:   ${49:name}: ${50:"#"}}
${51:   ${52:placement_tenancy}: ${53:"#"}}
${54:   ${55:profile}: ${56:"#"}}
${57:   ${58:ramdisk_id}: ${59:"#"}}
${60:   ${61:region}: ${62:"#"}}
${63:   ${64:}: ${65:"#"}}
${66:   ${67:security_groups}: ${68:"#"}}
${69:   ${70:security_token}: ${71:"#"}}
${72:   ${73:spot_price}: ${74:"#"}}
${75:   ${76:state}: ${77:"#"}}
${78:   ${79:user_data}: ${80:"#"}}
${81:   ${82:user_data_path}: ${83:"#"}}
${84:   ${85:validate_certs}: ${86:"#"}}
${87:   ${88:volumes}: ${89:"#"}}
${90:   ${91:vpc_id}: ${92:"#"}}
${93:${94:   become: ${95:true}} 
${96:   become_method: ${97:su}} 
${98:   become_user: ${99:nobody}} 
${100:   become_flags: ${101:"-s /bin/sh"}}} 
${102:   when: ${103:variable is defined}} 
${104:   with_items: ${105:array}} 
]]></content>
	<tabTrigger>ec2_lc</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
