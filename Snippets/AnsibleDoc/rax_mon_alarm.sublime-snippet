<snippet>
<content><![CDATA[
${1:#api_key = Rackspace API key (overrides `credentials')
#auth_endpoint = The URI of the authentication service
#check_id = ID of the check that should be alerted on. May be acquired by registering the value of a rax_mon_check task.
#credentials = File to find the Rackspace credentials in (ignored if `api_key' and `username' are provided)
#criteria = Alarm DSL that describes alerting conditions and their output states. Must be between 1 and 16384 characters
#disabled = If yes, create this alarm, but leave it in an inactive state. Defaults to no.
#entity_id = ID of the entity this alarm is attached to. May be acquired by registering the value of a rax_mon_entity task.
#env = Environment as configured in ~/.pyrax.cfg, see
#https = pyrax-
#identity_type = Authentication machanism to use, such as rackspace or keystone
#label = Friendly name for this alarm, used to achieve idempotence. Must be a String between 1 and 255 characters long.
#metadata = Arbitrary key/value pairs to accompany the alarm. Must be a hash of String keys and values between 1 and 255
#notification_plan_id = ID of the notification plan to trigger if this alarm fires. May be acquired by registering the value of a
#region = Region to create an instance in
#state = Ensure that the alarm with this `label' exists or does not exist.
#tenant_id = The tenant ID used for authentication
#tenant_name = The tenant name used for authentication
#username = Rackspace username (overrides `credentials')
#verify_ssl = Whether or not to require SSL validation of API endpoints
}- name: ${2:Name for rax_mon_alarm module.}
${3:  become: ${4:yes}}
  rax_mon_alarm: ${5:api_key=${6: } }${7:auth_endpoint=${8: } }${9:check_id=${10: } }${11:credentials=${12: } }${13:criteria=${14: } }${15:disabled=${16: } }${17:entity_id=${18: } }${19:env=${20: } }${21:https=${22: } }${23:identity_type=${24: } }${25:label=${26: } }${27:metadata=${28: } }${29:notification_plan_id=${30: } }${31:region=${32: } }${33:state=${34: } }${35:tenant_id=${36: } }${37:tenant_name=${38: } }${39:username=${40: } }${41:verify_ssl=${42: } }
${43:  when: ${44: variable is defined}}
${45:  with_items: ${46: array}}
]]></content>
	<tabTrigger>rax_mon_alarm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
