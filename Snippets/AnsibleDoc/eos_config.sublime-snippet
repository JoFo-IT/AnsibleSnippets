<snippet>
<content><![CDATA[
${1:# after: The ordered set of commands to append to the end of the command stack if a change needs to be made. 
# auth_pass: Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' 
# authorize: Instructs the module to enter privileged mode on the remote device before sending any commands.  If not 
# backup: This argument will cause the module to create a full backup of the current `running-config' from the 
# before: The ordered set of commands to push on to the command stack if a change needs to be made.  This allows 
# defaults: The `defaults' argument will influence how the running-config is collected from the device.  When the 
# diff_against: When using the `ansible-playbook --diff' command line argument the module can generate diffs against 
# diff_ignore_lines: Use this argument to specify one or more lines that should be ignored during the diff.  This is used for 
# force: The force argument instructs the module to not consider the current devices running-config.  When set to 
# intended_config: The `intended_config' provides the master configuration that the node should conform to and is used to 
# lines: The ordered set of commands that should be configured in the section.  The commands must be the exact 
# match: Instructs the module on the way to perform the matching of the set of commands against the current 
# parents: The ordered set of parents that uniquely identify the section the commands should be checked against. 
# provider: A dict object containing connection details. 
# replace: Instructs the module on the way to perform the configuration on the device.  If the replace argument is 
# running_config: The module, by default, will connect to the remote device and retrieve the current running-config to use 
# save: The `save' argument instructs the module to save the running-config to startup-config.  This operation 
# save_when: When changes are made to the device running-configuration, the changes are not copied to non-volatile 
# src: The `src' argument provides a path to the configuration file to load into the remote system.  The path 
}- name: ${2:Name for eos_config module.}
  eos_config:
${3:   ${4:after}: ${5:"#"}}
${6:   ${7:auth_pass}: ${8:"#"}}
${9:   ${10:authorize}: ${11:"#"}}
${12:   ${13:backup}: ${14:"#"}}
${15:   ${16:before}: ${17:"#"}}
${18:   ${19:defaults}: ${20:"#"}}
${21:   ${22:diff_against}: ${23:"#"}}
${24:   ${25:diff_ignore_lines}: ${26:"#"}}
${27:   ${28:force}: ${29:"#"}}
${30:   ${31:intended_config}: ${32:"#"}}
${33:   ${34:lines}: ${35:"#"}}
${36:   ${37:match}: ${38:"#"}}
${39:   ${40:parents}: ${41:"#"}}
${42:   ${43:provider}: ${44:"#"}}
${45:   ${46:replace}: ${47:"#"}}
${48:   ${49:running_config}: ${50:"#"}}
${51:   ${52:save}: ${53:"#"}}
${54:   ${55:save_when}: ${56:"#"}}
${57:   ${58:src}: ${59:"#"}}
${60:${61:   become: ${62:true}} 
${63:   become_method: ${64:su}} 
${65:   become_user: ${66:nobody}} 
${67:   become_flags: ${68:"-s /bin/sh"}}} 
${69:   when: ${70:variable is defined}} 
${71:   with_items: ${72:array}} 
]]></content>
	<tabTrigger>eos_config</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
