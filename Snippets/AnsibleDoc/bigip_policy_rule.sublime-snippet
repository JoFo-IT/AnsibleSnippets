<snippet>
<content><![CDATA[
${1:# actions: The actions that you want the policy rule to 
# conditions: A list of attributes that describe the 
# description: Description of the policy rule. 
# name: (required) The name of the rule. 
# partition: Device partition to manage resources on. 
# policy: (required) The name of the policy that you want 
# provider: A dict object containing connection details. 
# state: When `present', ensures that the key is uploaded 
}- name: ${2:Name for bigip_policy_rule module.}
  bigip_policy_rule:
${3:   ${4:actions}: ${5:"#"}}
${6:   ${7:conditions}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:partition}: ${17:"#"}}
${18:   ${19:policy}: ${20:"#"}}
${21:   ${22:provider}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>bigip_policy_rule</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
