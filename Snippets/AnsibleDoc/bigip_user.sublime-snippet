<snippet>
<content><![CDATA[
${1:# full_name: Full name of the user. 
# partition: Device partition to manage resources on. 
# partition_access: Specifies the administrative partition to which 
# password_credential: Set the users password to this unencrypted 
# provider: A dict object containing connection details. 
# shell: Optionally set the users shell. 
# state: Whether the account should exist or not, taking 
# update_password: `always' will allow to update passwords if the 
# username_credential: (required) Name of the user to create, remove or 
}- name: ${2:Name for bigip_user module.}
  bigip_user:
${3:   ${4:full_name}: ${5:"#"}}
${6:   ${7:partition}: ${8:"#"}}
${9:   ${10:partition_access}: ${11:"#"}}
${12:   ${13:password_credential}: ${14:"#"}}
${15:   ${16:provider}: ${17:"#"}}
${18:   ${19:shell}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:update_password}: ${26:"#"}}
${27:   ${28:username_credential}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>bigip_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
