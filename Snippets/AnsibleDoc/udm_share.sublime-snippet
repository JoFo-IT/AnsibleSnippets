<snippet>
<content><![CDATA[
${1:# directorymode: Permissions for the share's root directory. 
# group: Directory owner group of the share's root directory. 
# host: Host FQDN (server which provides the share), e.g. `{{ ansible_fqdn }}'. Required if `state=present'. 
# name: (required) Name 
# nfs_custom_settings: Option name in exports file. 
# nfs_hosts: Only allow access for this host, IP address or network. 
# ou: (required) Organisational unit, inside the LDAP Base DN. 
# owner: Directory owner of the share's root directory. 
# path: Directory on the providing server, e.g. `/home'. Required if `state=present'. 
# root_squash: Modify user ID for root user (root squashing). 
# samba_block_size: Blocking size. 
# samba_blocking_locks: Blocking locks. 
# samba_browseable: Show in Windows network environment. 
# samba_create_mode: File mode. 
# samba_csc_policy: Client-side caching policy. 
# samba_custom_settings: Option name in smb.conf and its value. 
# samba_directory_mode: Directory mode. 
# samba_directory_security_mode: Directory security mode. 
# samba_dos_filemode: Users with write access may modify permissions. 
# samba_fake_oplocks: Fake oplocks. 
# samba_force_create_mode: Force file mode. 
# samba_force_directory_mode: Force directory mode. 
# samba_force_directory_security_mode: Force directory security mode. 
# samba_force_group: Force group. 
# samba_force_security_mode: Force security mode. 
# samba_force_user: Force user. 
# samba_hide_files: Hide files. 
# samba_hide_unreadable: Hide unreadable files/directories. 
# samba_hosts_allow: Allowed host/network. 
# samba_hosts_deny: Denied host/network. 
# samba_inherit_acls: Inherit ACLs. 
# samba_inherit_owner: Create files/directories with the owner of the parent directory. 
# samba_inherit_permissions: Create files/directories with permissions of the parent directory. 
# samba_invalid_users: Invalid users or groups. 
# samba_level_2_oplocks: Level 2 oplocks. 
# samba_locking: Locking. 
# samba_msdfs_root: MSDFS root. 
# samba_name: Windows name. Required if `state=present'. 
# samba_nt_acl_support: NT ACL support. 
# samba_oplocks: Oplocks. 
# samba_postexec: Postexec script. 
# samba_preexec: Preexec script. 
# samba_public: Allow anonymous read-only access with a guest user. 
# samba_security_mode: Security mode. 
# samba_strict_locking: Strict locking. 
# samba_valid_users: Valid users or groups. 
# samba_vfs_objects: VFS objects. 
# samba_write_list: Restrict write access to these users/groups. 
# samba_writeable: Samba write access. 
# state: Whether the share is present or not. 
# subtree_checking: Subtree checking. 
# sync: NFS synchronisation. 
# writeable: NFS write access. 
}- name: ${2:Name for udm_share module.}
  udm_share:
${3:   ${4:directorymode}: ${5:"#"}}
${6:   ${7:group}: ${8:"#"}}
${9:   ${10:host}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:nfs_custom_settings}: ${17:"#"}}
${18:   ${19:nfs_hosts}: ${20:"#"}}
${21:   ${22:ou}: ${23:"#"}}
${24:   ${25:owner}: ${26:"#"}}
${27:   ${28:path}: ${29:"#"}}
${30:   ${31:root_squash}: ${32:"#"}}
${33:   ${34:samba_block_size}: ${35:"#"}}
${36:   ${37:samba_blocking_locks}: ${38:"#"}}
${39:   ${40:samba_browseable}: ${41:"#"}}
${42:   ${43:samba_create_mode}: ${44:"#"}}
${45:   ${46:samba_csc_policy}: ${47:"#"}}
${48:   ${49:samba_custom_settings}: ${50:"#"}}
${51:   ${52:samba_directory_mode}: ${53:"#"}}
${54:   ${55:samba_directory_security_mode}: ${56:"#"}}
${57:   ${58:samba_dos_filemode}: ${59:"#"}}
${60:   ${61:samba_fake_oplocks}: ${62:"#"}}
${63:   ${64:samba_force_create_mode}: ${65:"#"}}
${66:   ${67:samba_force_directory_mode}: ${68:"#"}}
${69:   ${70:samba_force_directory_security_mode}: ${71:"#"}}
${72:   ${73:samba_force_group}: ${74:"#"}}
${75:   ${76:samba_force_security_mode}: ${77:"#"}}
${78:   ${79:samba_force_user}: ${80:"#"}}
${81:   ${82:samba_hide_files}: ${83:"#"}}
${84:   ${85:samba_hide_unreadable}: ${86:"#"}}
${87:   ${88:samba_hosts_allow}: ${89:"#"}}
${90:   ${91:samba_hosts_deny}: ${92:"#"}}
${93:   ${94:samba_inherit_acls}: ${95:"#"}}
${96:   ${97:samba_inherit_owner}: ${98:"#"}}
${99:   ${100:samba_inherit_permissions}: ${101:"#"}}
${102:   ${103:samba_invalid_users}: ${104:"#"}}
${105:   ${106:samba_level_2_oplocks}: ${107:"#"}}
${108:   ${109:samba_locking}: ${110:"#"}}
${111:   ${112:samba_msdfs_root}: ${113:"#"}}
${114:   ${115:samba_name}: ${116:"#"}}
${117:   ${118:samba_nt_acl_support}: ${119:"#"}}
${120:   ${121:samba_oplocks}: ${122:"#"}}
${123:   ${124:samba_postexec}: ${125:"#"}}
${126:   ${127:samba_preexec}: ${128:"#"}}
${129:   ${130:samba_public}: ${131:"#"}}
${132:   ${133:samba_security_mode}: ${134:"#"}}
${135:   ${136:samba_strict_locking}: ${137:"#"}}
${138:   ${139:samba_valid_users}: ${140:"#"}}
${141:   ${142:samba_vfs_objects}: ${143:"#"}}
${144:   ${145:samba_write_list}: ${146:"#"}}
${147:   ${148:samba_writeable}: ${149:"#"}}
${150:   ${151:state}: ${152:"#"}}
${153:   ${154:subtree_checking}: ${155:"#"}}
${156:   ${157:sync}: ${158:"#"}}
${159:   ${160:writeable}: ${161:"#"}}
${162:${163:   become: ${164:true}} 
${165:   become_method: ${166:su}} 
${167:   become_user: ${168:nobody}} 
${169:   become_flags: ${170:"-s /bin/sh"}}} 
${171:   when: ${172:variable is defined}} 
${173:   with_items: ${174:array}} 
]]></content>
	<tabTrigger>udm_share</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
