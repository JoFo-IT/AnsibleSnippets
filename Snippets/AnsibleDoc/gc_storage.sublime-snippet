<snippet>
<content><![CDATA[
${1:# bucket: (required) Bucket name. 
# dest: The destination file path when downloading an object/key with a GET operation. 
# expiration: Time limit (in seconds) for the URL generated and returned by GCA when performing a mode=put or 
# force: Forces an overwrite either locally on the filesystem or remotely with the object/key. Used with PUT and 
# gs_access_key: (required) GS access key. If not set then the value of the GS_ACCESS_KEY_ID environment variable is 
# gs_secret_key: (required) GS secret key. If not set then the value of the GS_SECRET_ACCESS_KEY environment variable is 
# headers: Headers to attach to object. 
# mode: (required) Switches the module behaviour between upload, download, get_url (return download url) , 
# object: Keyname of the object inside the bucket. Can be also be used to create "virtual directories" (see 
# permission: This option let's the user set the canned permissions on the object/bucket that are created. The 
# region: The gs region to use. If not defined then the value 'US' will be used. See 
# src: The source file path when performing a PUT operation. 
# versioning: Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be 
}- name: ${2:Name for gc_storage module.}
  gc_storage:
${3:   ${4:bucket}: ${5:"#"}}
${6:   ${7:dest}: ${8:"#"}}
${9:   ${10:expiration}: ${11:"#"}}
${12:   ${13:force}: ${14:"#"}}
${15:   ${16:gs_access_key}: ${17:"#"}}
${18:   ${19:gs_secret_key}: ${20:"#"}}
${21:   ${22:headers}: ${23:"#"}}
${24:   ${25:mode}: ${26:"#"}}
${27:   ${28:object}: ${29:"#"}}
${30:   ${31:permission}: ${32:"#"}}
${33:   ${34:region}: ${35:"#"}}
${36:   ${37:src}: ${38:"#"}}
${39:   ${40:versioning}: ${41:"#"}}
${42:${43:   become: ${44:true}} 
${45:   become_method: ${46:su}} 
${47:   become_user: ${48:nobody}} 
${49:   become_flags: ${50:"-s /bin/sh"}}} 
${51:   when: ${52:variable is defined}} 
${53:   with_items: ${54:array}} 
]]></content>
	<tabTrigger>gc_storage</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
