<snippet>
<content><![CDATA[
${1:# allow_downgrade: Specify if the named package and version is 
# autoremove: If `yes', removes all "leaf" packages from the 
# bugfix: If set to `yes', and `state=latest' then only 
# conf_file: The remote yum configuration file to use for the 
# disable_excludes: Disable the excludes defined in YUM config 
# disable_gpg_check: Whether to disable the GPG checking of 
# disable_plugin: `Plugin' name to disable for the install/update 
# disablerepo: `Repoid' of repositories to disable for the 
# download_dir: Specifies an alternate directory to store 
# download_only: Only download the packages, do not install them. 
# enable_plugin: `Plugin' name to enable for the install/update 
# enablerepo: `Repoid' of repositories to enable for the 
# exclude: Package name(s) to exclude when state=present, 
# install_repoquery: If repoquery is not available, install yum- 
# install_weak_deps: Will also install all packages linked by a weak 
# installroot: Specifies an alternative installroot, relative 
# list: Package name to run the equivalent of yum list 
# lock_timeout: Amount of time to wait for the yum lockfile to 
# name: A package name or package specifier with 
# releasever: Specifies an alternative release from which all 
# security: If set to `yes', and `state=latest' then only 
# skip_broken: Skip packages with broken dependencies(devsolve) 
# state: Whether to install (`present' or `installed', 
# update_cache: Force yum to check if cache is out of date and 
# update_only: When using latest, only update installed 
# use_backend: This module supports `yum' (as it always has), 
# validate_certs: This only applies if using a https url as the 
}- name: ${2:Name for yum module.}
  yum:
${3:   ${4:allow_downgrade}: ${5:"#"}}
${6:   ${7:autoremove}: ${8:"#"}}
${9:   ${10:bugfix}: ${11:"#"}}
${12:   ${13:conf_file}: ${14:"#"}}
${15:   ${16:disable_excludes}: ${17:"#"}}
${18:   ${19:disable_gpg_check}: ${20:"#"}}
${21:   ${22:disable_plugin}: ${23:"#"}}
${24:   ${25:disablerepo}: ${26:"#"}}
${27:   ${28:download_dir}: ${29:"#"}}
${30:   ${31:download_only}: ${32:"#"}}
${33:   ${34:enable_plugin}: ${35:"#"}}
${36:   ${37:enablerepo}: ${38:"#"}}
${39:   ${40:exclude}: ${41:"#"}}
${42:   ${43:install_repoquery}: ${44:"#"}}
${45:   ${46:install_weak_deps}: ${47:"#"}}
${48:   ${49:installroot}: ${50:"#"}}
${51:   ${52:list}: ${53:"#"}}
${54:   ${55:lock_timeout}: ${56:"#"}}
${57:   ${58:name}: ${59:"#"}}
${60:   ${61:releasever}: ${62:"#"}}
${63:   ${64:security}: ${65:"#"}}
${66:   ${67:skip_broken}: ${68:"#"}}
${69:   ${70:state}: ${71:"#"}}
${72:   ${73:update_cache}: ${74:"#"}}
${75:   ${76:update_only}: ${77:"#"}}
${78:   ${79:use_backend}: ${80:"#"}}
${81:   ${82:validate_certs}: ${83:"#"}}
${84:${85:   become: ${86:true}} 
${87:   become_method: ${88:su}} 
${89:   become_user: ${90:nobody}} 
${91:   become_flags: ${92:"-s /bin/sh"}}} 
${93:   when: ${94:variable is defined}} 
${95:   with_items: ${96:array}} 
]]></content>
	<tabTrigger>yum</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
