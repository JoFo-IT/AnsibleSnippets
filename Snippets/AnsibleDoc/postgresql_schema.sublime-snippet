<snippet>
<content><![CDATA[
${1:# database: Name of the database to connect to. 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# name: (required) Name of the schema to add or remove. 
# owner: Name of the role to set as owner of the schema. 
# port: Database port to connect to. 
# state: The schema state. 
}- name: ${2:Name for postgresql_schema module.}
  postgresql_schema:
${3:   ${4:database}: ${5:"#"}}
${6:   ${7:login_host}: ${8:"#"}}
${9:   ${10:login_password}: ${11:"#"}}
${12:   ${13:login_unix_socket}: ${14:"#"}}
${15:   ${16:login_user}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:owner}: ${23:"#"}}
${24:   ${25:port}: ${26:"#"}}
${27:   ${28:state}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>postgresql_schema</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
