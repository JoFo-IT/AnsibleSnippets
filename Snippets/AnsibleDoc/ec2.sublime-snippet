<snippet>
<content><![CDATA[
${1:# assign_public_ip: When provisioning within vpc, assign a public IP 
# aws_access_key: AWS access key. If not set then the value of the 
# aws_secret_key: AWS secret key. If not set then the value of the 
# count: Number of instances to launch. 
# count_tag: Used with 'exact_count' to determine how many 
# debug_botocore_endpoint_logs: Use a botocore.endpoint logger to parse the 
# ebs_optimized: whether instance is using optimized EBS volumes, 
# ec2_url: Url to use to connect to EC2 or your Eucalyptus 
# exact_count: An integer value which indicates how many 
# group: Security group (or list of groups) to use with 
# group_id: Security group id (or list of ids) to use with 
# id: Identifier for this instance or set of 
# image: (required) `ami' ID to use for the instance. 
# instance_ids: list of instance ids, currently used for states: 
# instance_initiated_shutdown_behavior: Set whether AWS will Stop or Terminate an 
# instance_profile_name: Name of the IAM instance profile (i.e. what the 
# instance_tags: A hash/dictionary of tags to add to the new 
# instance_type: (required) Instance type to use for the 
# kernel: Kernel `eki' to use for the instance. 
# key_name: key pair to use on the instance. The SSH key 
# monitoring: Enable detailed monitoring (CloudWatch) for 
# network_interfaces: A list of existing network interfaces to attach 
# placement_group: Placement group for the instance when using EC2 
# private_ip: The private ip address to assign the instance 
# profile: Uses a boto profile. Only works with boto >= 
# ramdisk: Ramdisk `eri' to use for the instance. 
# region: The AWS region to use.  Must be specified if 
# l: ec2_region. 
# security_token: AWS STS security token. If not set then the 
# source_dest_check: Enable or Disable the Source/Destination checks 
# spot_launch_group: Launch group for spot request, see https://docs. 
# work: spot- 
# spot_price: Maximum spot price to bid. If not set, a regular 
# spot_type: Type of spot request; one of "one-time" or 
# spot_wait_timeout: How long to wait for the spot instance request 
# state: Create, terminate, start, stop or restart 
# tenancy: An instance with a tenancy of "dedicated" runs 
# termination_protection: Enable or Disable the Termination Protection. 
# user_data: Opaque blob of data which is made available to 
# validate_certs: When set to "no", SSL certificates will not be 
# volumes: a list of hash/dictionaries of volumes to add to 
# vpc_subnet_id: the subnet ID in which to launch the instance 
# wait: Wait for the instance to reach its desired state 
# wait_timeout: How long before wait gives up, in seconds. 
# zone: AWS availability zone in which to launch the 
}- name: ${2:Name for ec2 module.}
  ec2:
${3:   ${4:assign_public_ip}: ${5:"#"}}
${6:   ${7:aws_access_key}: ${8:"#"}}
${9:   ${10:aws_secret_key}: ${11:"#"}}
${12:   ${13:count}: ${14:"#"}}
${15:   ${16:count_tag}: ${17:"#"}}
${18:   ${19:debug_botocore_endpoint_logs}: ${20:"#"}}
${21:   ${22:ebs_optimized}: ${23:"#"}}
${24:   ${25:ec2_url}: ${26:"#"}}
${27:   ${28:exact_count}: ${29:"#"}}
${30:   ${31:group}: ${32:"#"}}
${33:   ${34:group_id}: ${35:"#"}}
${36:   ${37:id}: ${38:"#"}}
${39:   ${40:image}: ${41:"#"}}
${42:   ${43:instance_ids}: ${44:"#"}}
${45:   ${46:instance_initiated_shutdown_behavior}: ${47:"#"}}
${48:   ${49:instance_profile_name}: ${50:"#"}}
${51:   ${52:instance_tags}: ${53:"#"}}
${54:   ${55:instance_type}: ${56:"#"}}
${57:   ${58:kernel}: ${59:"#"}}
${60:   ${61:key_name}: ${62:"#"}}
${63:   ${64:monitoring}: ${65:"#"}}
${66:   ${67:network_interfaces}: ${68:"#"}}
${69:   ${70:placement_group}: ${71:"#"}}
${72:   ${73:private_ip}: ${74:"#"}}
${75:   ${76:profile}: ${77:"#"}}
${78:   ${79:ramdisk}: ${80:"#"}}
${81:   ${82:region}: ${83:"#"}}
${84:   ${85:l}: ${86:"#"}}
${87:   ${88:security_token}: ${89:"#"}}
${90:   ${91:source_dest_check}: ${92:"#"}}
${93:   ${94:spot_launch_group}: ${95:"#"}}
${96:   ${97:work}: ${98:"#"}}
${99:   ${100:spot_price}: ${101:"#"}}
${102:   ${103:spot_type}: ${104:"#"}}
${105:   ${106:spot_wait_timeout}: ${107:"#"}}
${108:   ${109:state}: ${110:"#"}}
${111:   ${112:tenancy}: ${113:"#"}}
${114:   ${115:termination_protection}: ${116:"#"}}
${117:   ${118:user_data}: ${119:"#"}}
${120:   ${121:validate_certs}: ${122:"#"}}
${123:   ${124:volumes}: ${125:"#"}}
${126:   ${127:vpc_subnet_id}: ${128:"#"}}
${129:   ${130:wait}: ${131:"#"}}
${132:   ${133:wait_timeout}: ${134:"#"}}
${135:   ${136:zone}: ${137:"#"}}
${138:${139:   become: ${140:true}} 
${141:   become_method: ${142:su}} 
${143:   become_user: ${144:nobody}} 
${145:   become_flags: ${146:"-s /bin/sh"}}} 
${147:   when: ${148:variable is defined}} 
${149:   with_items: ${150:array}} 
]]></content>
	<tabTrigger>ec2</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
