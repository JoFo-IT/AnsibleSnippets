<snippet>
<content><![CDATA[
${1:# delete_data_group_file: When `yes', will ensure that the remote data 
# description: The description of the data group. 
# external_file_name: When creating a new data group, this specifies 
# internal: The type of this data group. You should only 
# name: (required) Specifies the name of the data group. 
# partition: Device partition to manage resources on. 
# provider: A dict object containing connection details. 
# records: Specifies the records that you want to add to a 
# records_src: Path to a file with records in it. The file 
# separator: When specifying `records_content', this is the 
# state: When `state' is `present', ensures the data 
# type: The type of records in this data group. This 
}- name: ${2:Name for bigip_data_group module.}
  bigip_data_group:
${3:   ${4:delete_data_group_file}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:external_file_name}: ${11:"#"}}
${12:   ${13:internal}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:partition}: ${20:"#"}}
${21:   ${22:provider}: ${23:"#"}}
${24:   ${25:records}: ${26:"#"}}
${27:   ${28:records_src}: ${29:"#"}}
${30:   ${31:separator}: ${32:"#"}}
${33:   ${34:state}: ${35:"#"}}
${36:   ${37:type}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>bigip_data_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
