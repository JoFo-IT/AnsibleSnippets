<snippet>
<content><![CDATA[
${1:# advertise_addr: Externally reachable address advertised to other 
# api_version: The version of the Docker API running on the 
# autolock_managers: If set, generate a key and use it to lock data 
# ca_force_rotate: An integer whose purpose is to force swarm to 
# cacert_path: Use a CA certificate when performing server 
# cert_path: Path to the client's TLS certificate file. If 
# debug: Debug mode 
# dispatcher_heartbeat_period: The delay for an agent to send a heartbeat to 
# docker_host: The URL or Unix socket path used to connect to 
# election_tick: Amount of ticks (in seconds) needed without a 
# force: Use with state `present' to force creating a new 
# heartbeat_tick: Amount of ticks (in seconds) between each 
# join_token: Swarm token used to join a swarm cluster. Used 
# keep_old_snapshots: Number of snapshots to keep beyond the current 
# key_path: Path to the client's TLS key file. If the value 
# labels: User-defined key/value metadata. Label 
# listen_addr: Listen address used for inter-manager 
# log_entries_for_slow_followers: Number of log entries to keep around to sync up 
# name: The name of the swarm. 
# node_cert_expiry: Automatic expiry for nodes certificates. Docker 
# node_id: Swarm id of the node to remove. Used with 
# remote_addrs: Remote address of one or more manager nodes of 
# rotate_manager_token: Rotate the manager join token. 
# rotate_worker_token: Rotate the worker join token. 
# signing_ca_cert: The desired signing CA certificate for all swarm 
# signing_ca_key: The desired signing CA key for all swarm node 
# snapshot_interval: Number of logs entries between snapshot. Docker 
# ssl_version: Provide a valid SSL version number. Default 
# state: (required) Set to `present', to create/update a 
# task_history_retention_limit: Maximum number of tasks history stored. Docker 
# timeout: The maximum amount of time in seconds to wait on 
# tls: Secure the connection to the API by using TLS 
# tls_hostname: When verifying the authenticity of the Docker 
# tls_verify: Secure the connection to the API by using TLS 
}- name: ${2:Name for docker_swarm module.}
  docker_swarm:
${3:   ${4:advertise_addr}: ${5:"#"}}
${6:   ${7:api_version}: ${8:"#"}}
${9:   ${10:autolock_managers}: ${11:"#"}}
${12:   ${13:ca_force_rotate}: ${14:"#"}}
${15:   ${16:cacert_path}: ${17:"#"}}
${18:   ${19:cert_path}: ${20:"#"}}
${21:   ${22:debug}: ${23:"#"}}
${24:   ${25:dispatcher_heartbeat_period}: ${26:"#"}}
${27:   ${28:docker_host}: ${29:"#"}}
${30:   ${31:election_tick}: ${32:"#"}}
${33:   ${34:force}: ${35:"#"}}
${36:   ${37:heartbeat_tick}: ${38:"#"}}
${39:   ${40:join_token}: ${41:"#"}}
${42:   ${43:keep_old_snapshots}: ${44:"#"}}
${45:   ${46:key_path}: ${47:"#"}}
${48:   ${49:labels}: ${50:"#"}}
${51:   ${52:listen_addr}: ${53:"#"}}
${54:   ${55:log_entries_for_slow_followers}: ${56:"#"}}
${57:   ${58:name}: ${59:"#"}}
${60:   ${61:node_cert_expiry}: ${62:"#"}}
${63:   ${64:node_id}: ${65:"#"}}
${66:   ${67:remote_addrs}: ${68:"#"}}
${69:   ${70:rotate_manager_token}: ${71:"#"}}
${72:   ${73:rotate_worker_token}: ${74:"#"}}
${75:   ${76:signing_ca_cert}: ${77:"#"}}
${78:   ${79:signing_ca_key}: ${80:"#"}}
${81:   ${82:snapshot_interval}: ${83:"#"}}
${84:   ${85:ssl_version}: ${86:"#"}}
${87:   ${88:state}: ${89:"#"}}
${90:   ${91:task_history_retention_limit}: ${92:"#"}}
${93:   ${94:timeout}: ${95:"#"}}
${96:   ${97:tls}: ${98:"#"}}
${99:   ${100:tls_hostname}: ${101:"#"}}
${102:   ${103:tls_verify}: ${104:"#"}}
${105:${106:   become: ${107:true}} 
${108:   become_method: ${109:su}} 
${110:   become_user: ${111:nobody}} 
${112:   become_flags: ${113:"-s /bin/sh"}}} 
${114:   when: ${115:variable is defined}} 
${116:   with_items: ${117:array}} 
]]></content>
	<tabTrigger>docker_swarm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
