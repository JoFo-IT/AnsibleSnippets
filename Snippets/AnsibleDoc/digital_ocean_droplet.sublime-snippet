<snippet>
<content><![CDATA[
${1:# backups: indicates whether automated backups should be 
# id: Numeric, the droplet id you want to operate on. 
# image: This is the slug of the image you would like the 
# ipv6: enable IPv6 for your droplet. 
# monitoring: indicates whether to install the DigitalOcean 
# name: String, this is the name of the droplet - must 
# oauth_token: (required) DigitalOcean OAuth token. Can be 
# private_networking: add an additional, private network interface to 
# region: This is the slug of the region you would like 
# size: This is the slug of the size you would like the 
# ssh_keys: array of SSH key (numeric) ID that you would 
# state: Indicate desired state of the target. 
# tags: List, A list of tag names as strings to apply to 
# unique_name: require unique hostnames.  By default, 
# user_data: opaque blob of data which is made available to 
# volumes: List, A list including the unique string 
# wait: Wait for the droplet to be active before 
# wait_timeout: How long before wait gives up, in seconds, when 
}- name: ${2:Name for digital_ocean_droplet module.}
  digital_ocean_droplet:
${3:   ${4:backups}: ${5:"#"}}
${6:   ${7:id}: ${8:"#"}}
${9:   ${10:image}: ${11:"#"}}
${12:   ${13:ipv6}: ${14:"#"}}
${15:   ${16:monitoring}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:oauth_token}: ${23:"#"}}
${24:   ${25:private_networking}: ${26:"#"}}
${27:   ${28:region}: ${29:"#"}}
${30:   ${31:size}: ${32:"#"}}
${33:   ${34:ssh_keys}: ${35:"#"}}
${36:   ${37:state}: ${38:"#"}}
${39:   ${40:tags}: ${41:"#"}}
${42:   ${43:unique_name}: ${44:"#"}}
${45:   ${46:user_data}: ${47:"#"}}
${48:   ${49:volumes}: ${50:"#"}}
${51:   ${52:wait}: ${53:"#"}}
${54:   ${55:wait_timeout}: ${56:"#"}}
${57:${58:   become: ${59:true}} 
${60:   become_method: ${61:su}} 
${62:   become_user: ${63:nobody}} 
${64:   become_flags: ${65:"-s /bin/sh"}}} 
${66:   when: ${67:variable is defined}} 
${68:   with_items: ${69:array}} 
]]></content>
	<tabTrigger>digital_ocean_droplet</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
