<snippet>
<content><![CDATA[
${1:#backup = If set, create a backup of the crontab before it is modified. The location of the backup is returned in the
#cron_file = If specified, uses this file in cron.d instead of an individual user's crontab. To use the `cron_file' parameter
#day = Day of the month the job should run ( 1-31, *, */2, etc )
#disabled = If the job should be disabled (commented out) in the crontab. Only has effect if state=present
#hour = Hour when the job should run ( 0-23, *, */2, etc )
#job = The command to execute. Required if state=present.
#minute = Minute when the job should run ( 0-59, *, */2, etc )
#month = Month of the year the job should run ( 1-12, *, */2, etc )
#name = Description of a crontab entry.
#reboot = If the job should be run at reboot. This option is deprecated. Users should use special_time.
#special_time = Special time specification nickname.
#state = Whether to ensure the job is present or absent.
#user = The specific user whose crontab should be modified.
#weekday = Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )
}- name: ${2:Name for cron module.}
${3:  become: ${4:yes}}
  cron: ${5:backup=${6: } }${7:cron_file=${8: } }${9:day=${10: } }${11:disabled=${12: } }${13:hour=${14: } }${15:job=${16: } }${17:minute=${18: } }${19:month=${20: } }${21:name=${22: } }${23:reboot=${24: } }${25:special_time=${26: } }${27:state=${28: } }${29:user=${30: } }${31:weekday=${32: } }
${33:  when: ${34: variable is defined}}
${35:  with_items: ${36: array}}
]]></content>
	<tabTrigger>cron</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
