<snippet>
<content><![CDATA[
${1:# api_version: Avi API version of to use for Avi API and objects. 
# availability_zone: Availability_zone of serviceengine. 
# cloud_ref: It is a reference to an object of type cloud. 
# container_mode: Boolean flag to set container_mode. Default value when not specified in API or module is interpreted by 
# container_type: Enum options - container_type_bridge, container_type_host, container_type_host_dpdk. Default value when 
# controller: IP address or hostname of the controller. The default value is the environment variable 
# controller_created: Boolean flag to set controller_created. Default value when not specified in API or module is interpreted 
# controller_ip: Controller_ip of serviceengine. 
# data_vnics: List of vnic. 
# enable_state: Inorder to disable se set this field appropriately. Enum options - SE_STATE_ENABLED, 
# flavor: Flavor of serviceengine. 
# host_ref: It is a reference to an object of type vimgrhostruntime. 
# hypervisor: Enum options - default, vmware_esx, kvm, vmware_vsan, xen. 
# mgmt_vnic: Vnic settings for serviceengine. 
# name: Name of the object. Default value when not specified in API or module is interpreted by Avi Controller 
# password: Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'. 
# resources: Seresources settings for serviceengine. 
# se_group_ref: It is a reference to an object of type serviceenginegroup. 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and context of object. 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and context of object. 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The default value is the environment variable 
# uuid: Unique object identifier of the object. 
}- name: ${2:Name for avi_serviceengine module.}
  avi_serviceengine:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:availability_zone}: ${8:"#"}}
${9:   ${10:cloud_ref}: ${11:"#"}}
${12:   ${13:container_mode}: ${14:"#"}}
${15:   ${16:container_type}: ${17:"#"}}
${18:   ${19:controller}: ${20:"#"}}
${21:   ${22:controller_created}: ${23:"#"}}
${24:   ${25:controller_ip}: ${26:"#"}}
${27:   ${28:data_vnics}: ${29:"#"}}
${30:   ${31:enable_state}: ${32:"#"}}
${33:   ${34:flavor}: ${35:"#"}}
${36:   ${37:host_ref}: ${38:"#"}}
${39:   ${40:hypervisor}: ${41:"#"}}
${42:   ${43:mgmt_vnic}: ${44:"#"}}
${45:   ${46:name}: ${47:"#"}}
${48:   ${49:password}: ${50:"#"}}
${51:   ${52:resources}: ${53:"#"}}
${54:   ${55:se_group_ref}: ${56:"#"}}
${57:   ${58:state}: ${59:"#"}}
${60:   ${61:tenant}: ${62:"#"}}
${63:   ${64:tenant_ref}: ${65:"#"}}
${66:   ${67:tenant_uuid}: ${68:"#"}}
${69:   ${70:url}: ${71:"#"}}
${72:   ${73:username}: ${74:"#"}}
${75:   ${76:uuid}: ${77:"#"}}
${78:${79:   become: ${80:true}} 
${81:   become_method: ${82:su}} 
${83:   become_user: ${84:nobody}} 
${85:   become_flags: ${86:"-s /bin/sh"}}} 
${87:   when: ${88:variable is defined}} 
${89:   with_items: ${90:array}} 
]]></content>
	<tabTrigger>avi_serviceengine</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
