<snippet>
<content><![CDATA[
${1:# api_timeout: How long should the socket layer wait before 
# auth: Dictionary containing auth information as needed 
# auth_type: Name of the auth plugin to use. If the cloud 
# availability_zone: Ignored. Present for backwards compatibility 
# ca_cert: A path to a CA Cert bundle that can be used as 
# client_cert: A path to a client certificate to use as part of 
# client_key: A path to a client key to use as part of the SSL 
# cloud: Named cloud or cloud config to operate against. 
# config_drive: A configdrive file or HTTP(S) URL that will be 
# deploy: Indicates if the resource should be deployed. 
# instance_info: Definition of the instance information which is 
# interface: Endpoint URL type to fetch from the service 
# ironic_url: If noauth mode is utilized, this is required to 
# maintenance: A setting to allow the direct control if a node 
# maintenance_reason: A string expression regarding the reason a node 
# power: A setting to allow power state to be asserted 
# region_name: Name of the region. 
# state: Indicates desired state of the resource 
# timeout: An integer value representing the number of 
# uuid: globally unique identifier (UUID) to be given to 
# validate_certs: Whether or not SSL API requests should be 
# wait: A boolean value instructing the module to wait 
}- name: ${2:Name for os_ironic_node module.}
  os_ironic_node:
${3:   ${4:api_timeout}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:auth_type}: ${11:"#"}}
${12:   ${13:availability_zone}: ${14:"#"}}
${15:   ${16:ca_cert}: ${17:"#"}}
${18:   ${19:client_cert}: ${20:"#"}}
${21:   ${22:client_key}: ${23:"#"}}
${24:   ${25:cloud}: ${26:"#"}}
${27:   ${28:config_drive}: ${29:"#"}}
${30:   ${31:deploy}: ${32:"#"}}
${33:   ${34:instance_info}: ${35:"#"}}
${36:   ${37:interface}: ${38:"#"}}
${39:   ${40:ironic_url}: ${41:"#"}}
${42:   ${43:maintenance}: ${44:"#"}}
${45:   ${46:maintenance_reason}: ${47:"#"}}
${48:   ${49:power}: ${50:"#"}}
${51:   ${52:region_name}: ${53:"#"}}
${54:   ${55:state}: ${56:"#"}}
${57:   ${58:timeout}: ${59:"#"}}
${60:   ${61:uuid}: ${62:"#"}}
${63:   ${64:validate_certs}: ${65:"#"}}
${66:   ${67:wait}: ${68:"#"}}
${69:${70:   become: ${71:true}} 
${72:   become_method: ${73:su}} 
${74:   become_user: ${75:nobody}} 
${76:   become_flags: ${77:"-s /bin/sh"}}} 
${78:   when: ${79:variable is defined}} 
${80:   with_items: ${81:array}} 
]]></content>
	<tabTrigger>os_ironic_node</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
