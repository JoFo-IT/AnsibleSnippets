<snippet>
<content><![CDATA[
${1:# checkout: If no, do not check out the repository if it does not exist locally 
# dest: (required) Absolute path where the repository should be deployed. 
# executable: Path to svn executable to use. If not supplied, the normal mechanism for resolving binary paths will be 
# export: If `yes', do export instead of checkout/update. 
# force: If `yes', modified files will be discarded. If `no', module will fail if it encounters modified files. 
# password: --password parameter passed to svn. 
# repo: (required) The subversion URL to the repository. 
# revision: Specific revision to checkout. 
# switch: If `no', do not call svn switch before update. 
# update: If no, do not retrieve new revisions from the origin repository 
# username: --username parameter passed to svn. 
}- name: ${2:Name for subversion module.}
  subversion:
${3:   ${4:checkout}: ${5:"#"}}
${6:   ${7:dest}: ${8:"#"}}
${9:   ${10:executable}: ${11:"#"}}
${12:   ${13:export}: ${14:"#"}}
${15:   ${16:force}: ${17:"#"}}
${18:   ${19:password}: ${20:"#"}}
${21:   ${22:repo}: ${23:"#"}}
${24:   ${25:revision}: ${26:"#"}}
${27:   ${28:switch}: ${29:"#"}}
${30:   ${31:update}: ${32:"#"}}
${33:   ${34:username}: ${35:"#"}}
${36:${37:   become: ${38:true}} 
${39:   become_method: ${40:su}} 
${41:   become_user: ${42:nobody}} 
${43:   become_flags: ${44:"-s /bin/sh"}}} 
${45:   when: ${46:variable is defined}} 
${47:   with_items: ${48:array}} 
]]></content>
	<tabTrigger>subversion</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
