<snippet>
<content><![CDATA[
${1:# authorize: Instructs the module to enter privileged mode on the remote device before sending any commands.  If not 
# commands: (required) List of commands to send to the remote device over the configured provider. The resulting 
# context: Specifies which context to target if you are running in the ASA in multiple context mode. Defaults to 
# interval: Configures the interval in seconds to wait between retries of the command. If the command does not pass 
# match: The `match' argument is used in conjunction with the `wait_for' argument to specify the match policy. 
# provider: A dict object containing connection details. 
# retries: Specifies the number of retries a command should by tried before it is considered failed. The command is 
# wait_for: List of conditions to evaluate against the output of the command. The task will wait for each condition 
}- name: ${2:Name for asa_command module.}
  asa_command:
${3:   ${4:authorize}: ${5:"#"}}
${6:   ${7:commands}: ${8:"#"}}
${9:   ${10:context}: ${11:"#"}}
${12:   ${13:interval}: ${14:"#"}}
${15:   ${16:match}: ${17:"#"}}
${18:   ${19:provider}: ${20:"#"}}
${21:   ${22:retries}: ${23:"#"}}
${24:   ${25:wait_for}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>asa_command</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
