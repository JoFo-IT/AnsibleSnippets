<snippet>
<content><![CDATA[
${1:# comment: Change the comment on the public key. Rewriting 
# exclusive: Whether to remove all other non-specified keys 
# key: (required) The SSH public key(s), as a string or 
# key_options: A string of ssh key options to be prepended to 
# manage_dir: Whether this module should manage the directory 
# path: Alternate path to the authorized_keys file 
# state: Whether the given key (with the given 
# user: (required) The username on the remote host whose 
# validate_certs: This only applies if using a https url as the 
}- name: ${2:Name for authorized_key module.}
  authorized_key:
${3:   ${4:comment}: ${5:"#"}}
${6:   ${7:exclusive}: ${8:"#"}}
${9:   ${10:key}: ${11:"#"}}
${12:   ${13:key_options}: ${14:"#"}}
${15:   ${16:manage_dir}: ${17:"#"}}
${18:   ${19:path}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:user}: ${26:"#"}}
${27:   ${28:validate_certs}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>authorized_key</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
