<snippet>
<content><![CDATA[
${1:# comment: Change the comment on the public key. Rewriting 
# exclusive: Whether to remove all other non-specified keys 
# follow: Follow path symlink instead of replacing it. 
# key: (required) The SSH public key(s), as a string or 
# key_options: A string of ssh key options to be prepended to 
# manage_dir: Whether this module should manage the directory 
# path: Alternate path to the authorized_keys file. When 
# state: Whether the given key (with the given 
# user: (required) The username on the remote host whose 
# validate_certs: This only applies if using a https url as the 
}- name: ${2:Name for authorized_key module.}
  authorized_key:
${3:   ${4:comment}: ${5:"#"}}
${6:   ${7:exclusive}: ${8:"#"}}
${9:   ${10:follow}: ${11:"#"}}
${12:   ${13:key}: ${14:"#"}}
${15:   ${16:key_options}: ${17:"#"}}
${18:   ${19:manage_dir}: ${20:"#"}}
${21:   ${22:path}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:user}: ${29:"#"}}
${30:   ${31:validate_certs}: ${32:"#"}}
${33:${34:   become: ${35:true}} 
${36:   become_method: ${37:su}} 
${38:   become_user: ${39:nobody}} 
${40:   become_flags: ${41:"-s /bin/sh"}}} 
${42:   when: ${43:variable is defined}} 
${44:   with_items: ${45:array}} 
]]></content>
	<tabTrigger>authorized_key</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
