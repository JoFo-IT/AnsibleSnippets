<snippet>
<content><![CDATA[
${1:# = Any parameter starting with "HEADER_" is a sent with your request as a header. For example, HEADER_Content-
#body = The body of the http request/response to the web service.
#body_format = The serialization format of the body. When set to json, encodes the body argument and automatically sets the
#creates = a filename, when it already exists, this step will not be run.
#dest = path of where to download the file to (if desired). If `dest' is a directory, the basename of the file on the
#follow_redirects = Whether or not the URI module should follow redirects. `all' will follow all redirects. `safe' will follow only
#force_basic_auth = httplib2, the library used by the uri module only sends authentication information when a webservice responds to
#method = The HTTP method of the request or response. It MUST be uppercase.
#others = all arguments accepted by the [file] module also work here
#password = password for the module to use for Digest, Basic or WSSE authentication.
#removes = a filename, when it does not exist, this step will not be run.
#return_content = Whether or not to return the body of the request as a "content" key in the dictionary result. If the reported
#status_code = A valid, numeric, HTTP status code that signifies success of the request. Can also be comma separated list of
#timeout = The socket level timeout in seconds
#url = HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path
#user = username for the module to use for Digest, Basic or WSSE authentication.
#validate_certs = If `no', SSL certificates will not be validated.  This should only set to `no' used on personally controlled
}- name: ${2:Name for uri module.}
${3:  become: ${4:yes}}
  uri: ${5:=${6: } }${7:body=${8: } }${9:body_format=${10: } }${11:creates=${12: } }${13:dest=${14: } }${15:follow_redirects=${16: } }${17:force_basic_auth=${18: } }${19:method=${20: } }${21:others=${22: } }${23:password=${24: } }${25:removes=${26: } }${27:return_content=${28: } }${29:status_code=${30: } }${31:timeout=${32: } }${33:url=${34: } }${35:user=${36: } }${37:validate_certs=${38: } }
${39:  when: ${40: variable is defined}}
${41:  with_items: ${42: array}}
]]></content>
	<tabTrigger>uri</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
