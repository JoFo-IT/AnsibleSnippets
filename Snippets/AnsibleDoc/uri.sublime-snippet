<snippet>
<content><![CDATA[
${1:# : Any parameter starting with "HEADER_" is a sent with your request as a header. For example, 
# body: The body of the http request/response to the web service. If `body_format' is set to 'json' it will take 
# body_format: The serialization format of the body. When set to json, encodes the body argument, if needed, and 
# client_cert: PEM formatted certificate chain file to be used for SSL client authentication. This file can also 
# client_key: PEM formatted file that contains your private key to be used for SSL client authentication. If 
# creates: a filename, when it already exists, this step will not be run. 
# dest: path of where to download the file to (if desired). If `dest' is a directory, the basename of the file 
# follow_redirects: Whether or not the URI module should follow redirects. `all' will follow all redirects. `safe' will 
# force_basic_auth: The library used by the uri module only sends authentication information when a webservice responds to 
# headers: Add custom HTTP headers to a request in the format of a YAML hash. As of `2.3' supplying `Content-Type' 
# method: The HTTP method of the request or response. It MUST be uppercase. 
# others: all arguments accepted by the [file] module also work here 
# password: password for the module to use for Digest, Basic or WSSE authentication. 
# removes: a filename, when it does not exist, this step will not be run. 
# return_content: Whether or not to return the body of the response as a "content" key in the dictionary result. If the 
# status_code: A valid, numeric, HTTP status code that signifies success of the request. Can also be comma separated 
# timeout: The socket level timeout in seconds 
# url: (required) HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path 
# user: username for the module to use for Digest, Basic or WSSE authentication. 
# validate_certs: If `no', SSL certificates will not be validated.  This should only set to `no' used on personally 
}- name: ${2:Name for uri module.}
  uri:
${3:   ${4:}: ${5:"#"}}
${6:   ${7:body}: ${8:"#"}}
${9:   ${10:body_format}: ${11:"#"}}
${12:   ${13:client_cert}: ${14:"#"}}
${15:   ${16:client_key}: ${17:"#"}}
${18:   ${19:creates}: ${20:"#"}}
${21:   ${22:dest}: ${23:"#"}}
${24:   ${25:follow_redirects}: ${26:"#"}}
${27:   ${28:force_basic_auth}: ${29:"#"}}
${30:   ${31:headers}: ${32:"#"}}
${33:   ${34:method}: ${35:"#"}}
${36:   ${37:others}: ${38:"#"}}
${39:   ${40:password}: ${41:"#"}}
${42:   ${43:removes}: ${44:"#"}}
${45:   ${46:return_content}: ${47:"#"}}
${48:   ${49:status_code}: ${50:"#"}}
${51:   ${52:timeout}: ${53:"#"}}
${54:   ${55:url}: ${56:"#"}}
${57:   ${58:user}: ${59:"#"}}
${60:   ${61:validate_certs}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>uri</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
