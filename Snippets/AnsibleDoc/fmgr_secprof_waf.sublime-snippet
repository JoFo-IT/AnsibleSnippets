<snippet>
<content><![CDATA[
${1:# address_list: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# address_list_blocked_address: Blocked address. 
# address_list_blocked_log: Enable/disable logging on blocked addresses. 
# address_list_severity: Severity. choice | low | Low severity. choice | 
# address_list_status: Status. choice | disable | Disable setting. 
# address_list_trusted_address: Trusted address. 
# adom: The ADOM the configuration should belong to. 
# comment: Comment. 
# constraint: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# constraint_content_length_action: Action. choice | allow | Allow. choice | block | 
# constraint_content_length_length: Length of HTTP content in bytes (0 to 
# constraint_content_length_log: Enable/disable logging. choice | disable | 
# constraint_content_length_severity: Severity. choice | low | Low severity. choice | 
# constraint_content_length_status: Enable/disable the constraint. choice | disable 
# constraint_exception_address: Host address. 
# constraint_exception_content_length: HTTP content length in request. choice | disable 
# constraint_exception_header_length: HTTP header length in request. choice | disable 
# constraint_exception_hostname: Enable/disable hostname check. choice | disable 
# constraint_exception_line_length: HTTP line length in request. choice | disable | 
# constraint_exception_malformed: Enable/disable malformed HTTP request check. 
# constraint_exception_max_cookie: Maximum number of cookies in HTTP request. 
# constraint_exception_max_header_line: Maximum number of HTTP header line. choice | 
# constraint_exception_max_range_segment: Maximum number of range segments in HTTP range 
# constraint_exception_max_url_param: Maximum number of parameters in URL. choice | 
# constraint_exception_method: Enable/disable HTTP method check. choice | 
# constraint_exception_param_length: Maximum length of parameter in URL, HTTP POST 
# constraint_exception_pattern: URL pattern. 
# constraint_exception_regex: Enable/disable regular expression based pattern 
# constraint_exception_url_param_length: Maximum length of parameter in URL. choice | 
# constraint_exception_version: Enable/disable HTTP version check. choice | 
# constraint_header_length_action: Action. choice | allow | Allow. choice | block | 
# constraint_header_length_length: Length of HTTP header in bytes (0 to 
# constraint_header_length_log: Enable/disable logging. choice | disable | 
# constraint_header_length_severity: Severity. choice | low | Low severity. choice | 
# constraint_header_length_status: Enable/disable the constraint. choice | disable 
# constraint_hostname_action: Action for a hostname constraint. choice | allow 
# constraint_hostname_log: Enable/disable logging. choice | disable | 
# constraint_hostname_severity: Severity. choice | low | Low severity. choice | 
# constraint_hostname_status: Enable/disable the constraint. choice | disable 
# constraint_line_length_action: Action. choice | allow | Allow. choice | block | 
# constraint_line_length_length: Length of HTTP line in bytes (0 to 2147483647). 
# constraint_line_length_log: Enable/disable logging. choice | disable | 
# constraint_line_length_severity: Severity. choice | low | Low severity. choice | 
# constraint_line_length_status: Enable/disable the constraint. choice | disable 
# constraint_malformed_action: Action. choice | allow | Allow. choice | block | 
# constraint_malformed_log: Enable/disable logging. choice | disable | 
# constraint_malformed_severity: Severity. choice | low | Low severity. choice | 
# constraint_malformed_status: Enable/disable the constraint. choice | disable 
# constraint_max_cookie_action: Action. choice | allow | Allow. choice | block | 
# constraint_max_cookie_log: Enable/disable logging. choice | disable | 
# constraint_max_cookie_max_cookie: Maximum number of cookies in HTTP request (0 to 
# constraint_max_cookie_severity: Severity. choice | low | Low severity. choice | 
# constraint_max_cookie_status: Enable/disable the constraint. choice | disable 
# constraint_max_header_line_action: Action. choice | allow | Allow. choice | block | 
# constraint_max_header_line_log: Enable/disable logging. choice | disable | 
# constraint_max_header_line_max_header_line: Maximum number HTTP header lines (0 to 
# constraint_max_header_line_severity: Severity. choice | low | Low severity. choice | 
# constraint_max_header_line_status: Enable/disable the constraint. choice | disable 
# constraint_max_range_segment_action: Action. choice | allow | Allow. choice | block | 
# constraint_max_range_segment_log: Enable/disable logging. choice | disable | 
# constraint_max_range_segment_max_range_segment: Maximum number of range segments in HTTP range 
# constraint_max_range_segment_severity: Severity. choice | low | Low severity. choice | 
# constraint_max_range_segment_status: Enable/disable the constraint. choice | disable 
# constraint_max_url_param_action: Action. choice | allow | Allow. choice | block | 
# constraint_max_url_param_log: Enable/disable logging. choice | disable | 
# constraint_max_url_param_max_url_param: Maximum number of parameters in URL (0 to 
# constraint_max_url_param_severity: Severity. choice | low | Low severity. choice | 
# constraint_max_url_param_status: Enable/disable the constraint. choice | disable 
# constraint_method_action: Action. choice | allow | Allow. choice | block | 
# constraint_method_log: Enable/disable logging. choice | disable | 
# constraint_method_severity: Severity. choice | low | Low severity. choice | 
# constraint_method_status: Enable/disable the constraint. choice | disable 
# constraint_param_length_action: Action. choice | allow | Allow. choice | block | 
# constraint_param_length_length: Maximum length of parameter in URL, HTTP POST 
# constraint_param_length_log: Enable/disable logging. choice | disable | 
# constraint_param_length_severity: Severity. choice | low | Low severity. choice | 
# constraint_param_length_status: Enable/disable the constraint. choice | disable 
# constraint_url_param_length_action: Action. choice | allow | Allow. choice | block | 
# constraint_url_param_length_length: Maximum length of URL parameter in bytes (0 to 
# constraint_url_param_length_log: Enable/disable logging. choice | disable | 
# constraint_url_param_length_severity: Severity. choice | low | Low severity. choice | 
# constraint_url_param_length_status: Enable/disable the constraint. choice | disable 
# constraint_version_action: Action. choice | allow | Allow. choice | block | 
# constraint_version_log: Enable/disable logging. choice | disable | 
# constraint_version_severity: Severity. choice | low | Low severity. choice | 
# constraint_version_status: Enable/disable the constraint. choice | disable 
# extended_log: Enable/disable extended logging. choice | 
# external: Disable/Enable external HTTP Inspection. choice 
# method: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# method_default_allowed_methods: Methods. FLAG Based Options. Specify multiple in 
# method_log: Enable/disable logging. choice | disable | 
# method_method_policy_address: Host address. 
# method_method_policy_allowed_methods: Allowed Methods. FLAG Based Options. Specify 
# method_method_policy_pattern: URL pattern. 
# method_method_policy_regex: Enable/disable regular expression based pattern 
# method_severity: Severity. choice | low | low severity choice | 
# method_status: Status. choice | disable | Disable setting. 
# mode: Sets one of three modes for managing the object. 
# name: WAF Profile name. 
# signature: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# signature_credit_card_detection_threshold: The minimum number of Credit cards to detect 
# signature_custom_signature_action: Action. choice | allow | Allow. choice | block | 
# signature_custom_signature_case_sensitivity: Case sensitivity in pattern. choice | disable | 
# signature_custom_signature_direction: Traffic direction. choice | request | Match HTTP 
# signature_custom_signature_log: Enable/disable logging. choice | disable | 
# signature_custom_signature_name: Signature name. 
# signature_custom_signature_pattern: Match pattern. 
# signature_custom_signature_severity: Severity. choice | low | Low severity. choice | 
# signature_custom_signature_status: Status. choice | disable | Disable setting. 
# signature_custom_signature_target: Match HTTP target. FLAG Based Options. Specify 
# signature_disabled_signature: Disabled signatures 
# signature_disabled_sub_class: Disabled signature subclasses. 
# signature_main_class_action: Action. choice | allow | Allow. choice | block | 
# signature_main_class_log: Enable/disable logging. choice | disable | 
# signature_main_class_severity: Severity. choice | low | Low severity. choice | 
# signature_main_class_status: Status. choice | disable | Disable setting. 
# url_access: EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS 
# url_access_access_pattern_negate: Enable/disable match negation. choice | disable 
# url_access_access_pattern_pattern: URL pattern. 
# url_access_access_pattern_regex: Enable/disable regular expression based pattern 
# url_access_access_pattern_srcaddr: Source address. 
# url_access_action: Action. choice | bypass | Allow the HTTP 
# url_access_address: Host address. 
# url_access_log: Enable/disable logging. choice | disable | 
# url_access_severity: Severity. choice | low | Low severity. choice | 
}- name: ${2:Name for fmgr_secprof_waf module.}
  fmgr_secprof_waf:
${3:   ${4:address_list}: ${5:"#"}}
${6:   ${7:address_list_blocked_address}: ${8:"#"}}
${9:   ${10:address_list_blocked_log}: ${11:"#"}}
${12:   ${13:address_list_severity}: ${14:"#"}}
${15:   ${16:address_list_status}: ${17:"#"}}
${18:   ${19:address_list_trusted_address}: ${20:"#"}}
${21:   ${22:adom}: ${23:"#"}}
${24:   ${25:comment}: ${26:"#"}}
${27:   ${28:constraint}: ${29:"#"}}
${30:   ${31:constraint_content_length_action}: ${32:"#"}}
${33:   ${34:constraint_content_length_length}: ${35:"#"}}
${36:   ${37:constraint_content_length_log}: ${38:"#"}}
${39:   ${40:constraint_content_length_severity}: ${41:"#"}}
${42:   ${43:constraint_content_length_status}: ${44:"#"}}
${45:   ${46:constraint_exception_address}: ${47:"#"}}
${48:   ${49:constraint_exception_content_length}: ${50:"#"}}
${51:   ${52:constraint_exception_header_length}: ${53:"#"}}
${54:   ${55:constraint_exception_hostname}: ${56:"#"}}
${57:   ${58:constraint_exception_line_length}: ${59:"#"}}
${60:   ${61:constraint_exception_malformed}: ${62:"#"}}
${63:   ${64:constraint_exception_max_cookie}: ${65:"#"}}
${66:   ${67:constraint_exception_max_header_line}: ${68:"#"}}
${69:   ${70:constraint_exception_max_range_segment}: ${71:"#"}}
${72:   ${73:constraint_exception_max_url_param}: ${74:"#"}}
${75:   ${76:constraint_exception_method}: ${77:"#"}}
${78:   ${79:constraint_exception_param_length}: ${80:"#"}}
${81:   ${82:constraint_exception_pattern}: ${83:"#"}}
${84:   ${85:constraint_exception_regex}: ${86:"#"}}
${87:   ${88:constraint_exception_url_param_length}: ${89:"#"}}
${90:   ${91:constraint_exception_version}: ${92:"#"}}
${93:   ${94:constraint_header_length_action}: ${95:"#"}}
${96:   ${97:constraint_header_length_length}: ${98:"#"}}
${99:   ${100:constraint_header_length_log}: ${101:"#"}}
${102:   ${103:constraint_header_length_severity}: ${104:"#"}}
${105:   ${106:constraint_header_length_status}: ${107:"#"}}
${108:   ${109:constraint_hostname_action}: ${110:"#"}}
${111:   ${112:constraint_hostname_log}: ${113:"#"}}
${114:   ${115:constraint_hostname_severity}: ${116:"#"}}
${117:   ${118:constraint_hostname_status}: ${119:"#"}}
${120:   ${121:constraint_line_length_action}: ${122:"#"}}
${123:   ${124:constraint_line_length_length}: ${125:"#"}}
${126:   ${127:constraint_line_length_log}: ${128:"#"}}
${129:   ${130:constraint_line_length_severity}: ${131:"#"}}
${132:   ${133:constraint_line_length_status}: ${134:"#"}}
${135:   ${136:constraint_malformed_action}: ${137:"#"}}
${138:   ${139:constraint_malformed_log}: ${140:"#"}}
${141:   ${142:constraint_malformed_severity}: ${143:"#"}}
${144:   ${145:constraint_malformed_status}: ${146:"#"}}
${147:   ${148:constraint_max_cookie_action}: ${149:"#"}}
${150:   ${151:constraint_max_cookie_log}: ${152:"#"}}
${153:   ${154:constraint_max_cookie_max_cookie}: ${155:"#"}}
${156:   ${157:constraint_max_cookie_severity}: ${158:"#"}}
${159:   ${160:constraint_max_cookie_status}: ${161:"#"}}
${162:   ${163:constraint_max_header_line_action}: ${164:"#"}}
${165:   ${166:constraint_max_header_line_log}: ${167:"#"}}
${168:   ${169:constraint_max_header_line_max_header_line}: ${170:"#"}}
${171:   ${172:constraint_max_header_line_severity}: ${173:"#"}}
${174:   ${175:constraint_max_header_line_status}: ${176:"#"}}
${177:   ${178:constraint_max_range_segment_action}: ${179:"#"}}
${180:   ${181:constraint_max_range_segment_log}: ${182:"#"}}
${183:   ${184:constraint_max_range_segment_max_range_segment}: ${185:"#"}}
${186:   ${187:constraint_max_range_segment_severity}: ${188:"#"}}
${189:   ${190:constraint_max_range_segment_status}: ${191:"#"}}
${192:   ${193:constraint_max_url_param_action}: ${194:"#"}}
${195:   ${196:constraint_max_url_param_log}: ${197:"#"}}
${198:   ${199:constraint_max_url_param_max_url_param}: ${200:"#"}}
${201:   ${202:constraint_max_url_param_severity}: ${203:"#"}}
${204:   ${205:constraint_max_url_param_status}: ${206:"#"}}
${207:   ${208:constraint_method_action}: ${209:"#"}}
${210:   ${211:constraint_method_log}: ${212:"#"}}
${213:   ${214:constraint_method_severity}: ${215:"#"}}
${216:   ${217:constraint_method_status}: ${218:"#"}}
${219:   ${220:constraint_param_length_action}: ${221:"#"}}
${222:   ${223:constraint_param_length_length}: ${224:"#"}}
${225:   ${226:constraint_param_length_log}: ${227:"#"}}
${228:   ${229:constraint_param_length_severity}: ${230:"#"}}
${231:   ${232:constraint_param_length_status}: ${233:"#"}}
${234:   ${235:constraint_url_param_length_action}: ${236:"#"}}
${237:   ${238:constraint_url_param_length_length}: ${239:"#"}}
${240:   ${241:constraint_url_param_length_log}: ${242:"#"}}
${243:   ${244:constraint_url_param_length_severity}: ${245:"#"}}
${246:   ${247:constraint_url_param_length_status}: ${248:"#"}}
${249:   ${250:constraint_version_action}: ${251:"#"}}
${252:   ${253:constraint_version_log}: ${254:"#"}}
${255:   ${256:constraint_version_severity}: ${257:"#"}}
${258:   ${259:constraint_version_status}: ${260:"#"}}
${261:   ${262:extended_log}: ${263:"#"}}
${264:   ${265:external}: ${266:"#"}}
${267:   ${268:method}: ${269:"#"}}
${270:   ${271:method_default_allowed_methods}: ${272:"#"}}
${273:   ${274:method_log}: ${275:"#"}}
${276:   ${277:method_method_policy_address}: ${278:"#"}}
${279:   ${280:method_method_policy_allowed_methods}: ${281:"#"}}
${282:   ${283:method_method_policy_pattern}: ${284:"#"}}
${285:   ${286:method_method_policy_regex}: ${287:"#"}}
${288:   ${289:method_severity}: ${290:"#"}}
${291:   ${292:method_status}: ${293:"#"}}
${294:   ${295:mode}: ${296:"#"}}
${297:   ${298:name}: ${299:"#"}}
${300:   ${301:signature}: ${302:"#"}}
${303:   ${304:signature_credit_card_detection_threshold}: ${305:"#"}}
${306:   ${307:signature_custom_signature_action}: ${308:"#"}}
${309:   ${310:signature_custom_signature_case_sensitivity}: ${311:"#"}}
${312:   ${313:signature_custom_signature_direction}: ${314:"#"}}
${315:   ${316:signature_custom_signature_log}: ${317:"#"}}
${318:   ${319:signature_custom_signature_name}: ${320:"#"}}
${321:   ${322:signature_custom_signature_pattern}: ${323:"#"}}
${324:   ${325:signature_custom_signature_severity}: ${326:"#"}}
${327:   ${328:signature_custom_signature_status}: ${329:"#"}}
${330:   ${331:signature_custom_signature_target}: ${332:"#"}}
${333:   ${334:signature_disabled_signature}: ${335:"#"}}
${336:   ${337:signature_disabled_sub_class}: ${338:"#"}}
${339:   ${340:signature_main_class_action}: ${341:"#"}}
${342:   ${343:signature_main_class_log}: ${344:"#"}}
${345:   ${346:signature_main_class_severity}: ${347:"#"}}
${348:   ${349:signature_main_class_status}: ${350:"#"}}
${351:   ${352:url_access}: ${353:"#"}}
${354:   ${355:url_access_access_pattern_negate}: ${356:"#"}}
${357:   ${358:url_access_access_pattern_pattern}: ${359:"#"}}
${360:   ${361:url_access_access_pattern_regex}: ${362:"#"}}
${363:   ${364:url_access_access_pattern_srcaddr}: ${365:"#"}}
${366:   ${367:url_access_action}: ${368:"#"}}
${369:   ${370:url_access_address}: ${371:"#"}}
${372:   ${373:url_access_log}: ${374:"#"}}
${375:   ${376:url_access_severity}: ${377:"#"}}
${378:${379:   become: ${380:true}} 
${381:   become_method: ${382:su}} 
${383:   become_user: ${384:nobody}} 
${385:   become_flags: ${386:"-s /bin/sh"}}} 
${387:   when: ${388:variable is defined}} 
${389:   with_items: ${390:array}} 
]]></content>
	<tabTrigger>fmgr_secprof_waf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
