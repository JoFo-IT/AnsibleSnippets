<snippet>
<content><![CDATA[
${1:# api_key: Token used to authenticate with the API. Can 
# bootloader: Specify the bootloader of the virtual machine. 
# ca_cert: Path to a CA certificate used to authenticate 
# client_cert: Path to a certificate used to authenticate with 
# client_key: Path to a key file used to authenticate with the 
# cloud_init_nocloud: Represents a cloud-init NoCloud user-data 
# s: _v1_cloudi 
# context: The name of a context found in the config file. 
# cpu_cores: Number of CPU cores. 
# cpu_features: List of dictionary to fine-tune features 
# atdomain: ele 
# cpu_limit: Is converted to its millicore value and 
# cpu_model: CPU model. You can check list of available 
# cpu_shares: Specify CPU shares. 
# disks: List of dictionaries which specify disks of the 
# html: _v1_disk 
# s: _v1_volume 
# force: If set to `no', and `state' is `present', an 
# headless: Specify if the virtual machine should have 
# host: Provide a URL for accessing the API. Can also be 
# hugepage_size: Specify huge page size. 
# interfaces: An interface defines a virtual network interface 
# html: _v1_interfac 
# html: _v1_network. 
# kubeconfig: Path to an existing Kubernetes config file. If 
# labels: Labels are key/value pairs that are attached to 
# : /mis 
# machine_type: QEMU machine type is the actual chipset of the 
# memory: The amount of memory to be requested by virtual 
# memory_limit: The maximum memory to be used by virtual 
# merge_type: Whether to override the default patch merge 
# patch: use-a 
# name: (required) Name of the virtual machine preset. 
# namespace: (required) Namespace where the virtual machine 
# password: Provide a password for authenticating with the 
# resource_definition: A partial YAML definition of the object being 
# selector: Selector is a label query over a set of virtual 
# smbios_uuid: In order to provide a consistent view on the 
# state: Create or delete virtual machine presets. 
# tablets: Specify tablets to be used as input devices 
# username: Provide a username for authenticating with the 
# validate_certs: Whether or not to verify the API server's SSL 
# wait: `True' if the module should wait for the 
# wait_timeout: The amount of time in seconds the module should 
}- name: ${2:Name for kubevirt_preset module.}
  kubevirt_preset:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:bootloader}: ${8:"#"}}
${9:   ${10:ca_cert}: ${11:"#"}}
${12:   ${13:client_cert}: ${14:"#"}}
${15:   ${16:client_key}: ${17:"#"}}
${18:   ${19:cloud_init_nocloud}: ${20:"#"}}
${21:   ${22:s}: ${23:"#"}}
${24:   ${25:context}: ${26:"#"}}
${27:   ${28:cpu_cores}: ${29:"#"}}
${30:   ${31:cpu_features}: ${32:"#"}}
${33:   ${34:atdomain}: ${35:"#"}}
${36:   ${37:cpu_limit}: ${38:"#"}}
${39:   ${40:cpu_model}: ${41:"#"}}
${42:   ${43:cpu_shares}: ${44:"#"}}
${45:   ${46:disks}: ${47:"#"}}
${48:   ${49:html}: ${50:"#"}}
${51:   ${52:s}: ${53:"#"}}
${54:   ${55:force}: ${56:"#"}}
${57:   ${58:headless}: ${59:"#"}}
${60:   ${61:host}: ${62:"#"}}
${63:   ${64:hugepage_size}: ${65:"#"}}
${66:   ${67:interfaces}: ${68:"#"}}
${69:   ${70:html}: ${71:"#"}}
${72:   ${73:html}: ${74:"#"}}
${75:   ${76:kubeconfig}: ${77:"#"}}
${78:   ${79:labels}: ${80:"#"}}
${81:   ${82:}: ${83:"#"}}
${84:   ${85:machine_type}: ${86:"#"}}
${87:   ${88:memory}: ${89:"#"}}
${90:   ${91:memory_limit}: ${92:"#"}}
${93:   ${94:merge_type}: ${95:"#"}}
${96:   ${97:patch}: ${98:"#"}}
${99:   ${100:name}: ${101:"#"}}
${102:   ${103:namespace}: ${104:"#"}}
${105:   ${106:password}: ${107:"#"}}
${108:   ${109:resource_definition}: ${110:"#"}}
${111:   ${112:selector}: ${113:"#"}}
${114:   ${115:smbios_uuid}: ${116:"#"}}
${117:   ${118:state}: ${119:"#"}}
${120:   ${121:tablets}: ${122:"#"}}
${123:   ${124:username}: ${125:"#"}}
${126:   ${127:validate_certs}: ${128:"#"}}
${129:   ${130:wait}: ${131:"#"}}
${132:   ${133:wait_timeout}: ${134:"#"}}
${135:${136:   become: ${137:true}} 
${138:   become_method: ${139:su}} 
${140:   become_user: ${141:nobody}} 
${142:   become_flags: ${143:"-s /bin/sh"}}} 
${144:   when: ${145:variable is defined}} 
${146:   with_items: ${147:array}} 
]]></content>
	<tabTrigger>kubevirt_preset</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
