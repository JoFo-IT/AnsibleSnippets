<snippet>
<content><![CDATA[
${1:# address_translation: Specifies, when `enabled', that the system 
# default_persistence_profile: Default Profile which manages the session 
# description: Virtual server description. 
# destination: Destination IP of the virtual server. Required 
# disabled_vlans: List of VLANs to be disabled. If the partition 
# enabled_vlans: List of VLANs to be enabled. When a VLAN named 
# fallback_persistence_profile: Specifies the persistence profile you want the 
# firewall_enforced_policy: Applies the specify AFM policy to the virtual in 
# firewall_staged_policy: Applies the specify AFM policy to the virtual in 
# ip_protocol: Specifies a network protocol name you want the 
# irules: List of rules to be applied in priority order. 
# metadata: Arbitrary key/value pairs that you can attach to 
# name: (required) Virtual server name. 
# partition: Device partition to manage resources on. 
# password: (required) The password for the user account 
# policies: Specifies the policies for the virtual server. 
# pool: Default pool for the virtual server. If you want 
# port: Port of the virtual server. Required when 
# port_translation: Specifies, when `enabled', that the system 
# profiles: List of profiles (HTTP, ClientSSL, ServerSSL, 
# provider: A dict object containing connection details. 
# security_log_profiles: Specifies the log profile applied to the virtual 
# security_nat_policy: Specify the Firewall NAT policies for the 
# server: (required) The BIG-IP host. You may omit this 
# server_port: The BIG-IP server port. You may omit this option 
# snat: Source network address policy. When `type' is 
# source: Specifies an IP address or network from which 
# state: The virtual server state. If `absent', delete 
# type: Specifies the network service provided by this 
# user: (required) The username to connect to the BIG-IP 
# validate_certs: If `no', SSL certificates are not validated. Use 
}- name: ${2:Name for bigip_virtual_server module.}
  bigip_virtual_server:
${3:   ${4:address_translation}: ${5:"#"}}
${6:   ${7:default_persistence_profile}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:destination}: ${14:"#"}}
${15:   ${16:disabled_vlans}: ${17:"#"}}
${18:   ${19:enabled_vlans}: ${20:"#"}}
${21:   ${22:fallback_persistence_profile}: ${23:"#"}}
${24:   ${25:firewall_enforced_policy}: ${26:"#"}}
${27:   ${28:firewall_staged_policy}: ${29:"#"}}
${30:   ${31:ip_protocol}: ${32:"#"}}
${33:   ${34:irules}: ${35:"#"}}
${36:   ${37:metadata}: ${38:"#"}}
${39:   ${40:name}: ${41:"#"}}
${42:   ${43:partition}: ${44:"#"}}
${45:   ${46:password}: ${47:"#"}}
${48:   ${49:policies}: ${50:"#"}}
${51:   ${52:pool}: ${53:"#"}}
${54:   ${55:port}: ${56:"#"}}
${57:   ${58:port_translation}: ${59:"#"}}
${60:   ${61:profiles}: ${62:"#"}}
${63:   ${64:provider}: ${65:"#"}}
${66:   ${67:security_log_profiles}: ${68:"#"}}
${69:   ${70:security_nat_policy}: ${71:"#"}}
${72:   ${73:server}: ${74:"#"}}
${75:   ${76:server_port}: ${77:"#"}}
${78:   ${79:snat}: ${80:"#"}}
${81:   ${82:source}: ${83:"#"}}
${84:   ${85:state}: ${86:"#"}}
${87:   ${88:type}: ${89:"#"}}
${90:   ${91:user}: ${92:"#"}}
${93:   ${94:validate_certs}: ${95:"#"}}
${96:${97:   become: ${98:true}} 
${99:   become_method: ${100:su}} 
${101:   become_user: ${102:nobody}} 
${103:   become_flags: ${104:"-s /bin/sh"}}} 
${105:   when: ${106:variable is defined}} 
${107:   with_items: ${108:array}} 
]]></content>
	<tabTrigger>bigip_virtual_server</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
