<snippet>
<content><![CDATA[
${1:# affinity: Describes node affinity scheduling rules for the 
# anti_affinity: Describes vm anti-affinity scheduling rules e.g. 
# api_key: Token used to authenticate with the API. Can 
# bootloader: Specify the bootloader of the virtual machine. 
# ca_cert: Path to a CA certificate used to authenticate 
# client_cert: Path to a certificate used to authenticate with 
# client_key: Path to a key file used to authenticate with the 
# cloud_init_nocloud: Represents a cloud-init NoCloud user-data 
# s: _v1_cloudi 
# context: The name of a context found in the config file. 
# cpu_cores: Number of CPU cores. 
# cpu_features: List of dictionary to fine-tune features 
# atdomain: ele 
# cpu_limit: Is converted to its millicore value and 
# cpu_model: CPU model. You can check list of available 
# cpu_shares: Specify CPU shares. 
# datavolumes: DataVolumes are a way to automate importing 
# disks: List of dictionaries which specify disks of the 
# html: _v1_disk 
# s: _v1_volume 
# ephemeral: If (true) ephemeral virtual machine will be 
# force: If set to `no', and `state' is `present', an 
# headless: Specify if the virtual machine should have 
# host: Provide a URL for accessing the API. Can also be 
# hostname: Specifies the hostname of the virtual machine. 
# hugepage_size: Specify huge page size. 
# interfaces: An interface defines a virtual network interface 
# html: _v1_interfac 
# html: _v1_network. 
# kubeconfig: Path to an existing Kubernetes config file. If 
# labels: Labels are key/value pairs that are attached to 
# : /mis 
# machine_type: QEMU machine type is the actual chipset of the 
# memory: The amount of memory to be requested by virtual 
# memory_limit: The maximum memory to be used by virtual 
# merge_type: Whether to override the default patch merge 
# patch: use-a 
# name: (required) Name of the virtual machine. 
# namespace: (required) Namespace where the virtual machine 
# node_affinity: Describes vm affinity scheduling rules e.g. co- 
# password: Provide a password for authenticating with the 
# proxy: The URL of an HTTP proxy to use for the 
# resource_definition: A partial YAML definition of the object being 
# smbios_uuid: In order to provide a consistent view on the 
# state: Set the virtual machine to either `present', 
# subdomain: If specified, the fully qualified virtual 
# tablets: Specify tablets to be used as input devices 
# template: Name of Template to be used in creation of a 
# template_parameters: New values of parameters from Template. 
# username: Provide a username for authenticating with the 
# validate_certs: Whether or not to verify the API server's SSL 
# wait: `True' if the module should wait for the 
# wait_sleep: Number of seconds to sleep between checks. 
# wait_timeout: The amount of time in seconds the module should 
}- name: ${2:Name for kubevirt_vm module.}
  kubevirt_vm:
${3:   ${4:affinity}: ${5:"#"}}
${6:   ${7:anti_affinity}: ${8:"#"}}
${9:   ${10:api_key}: ${11:"#"}}
${12:   ${13:bootloader}: ${14:"#"}}
${15:   ${16:ca_cert}: ${17:"#"}}
${18:   ${19:client_cert}: ${20:"#"}}
${21:   ${22:client_key}: ${23:"#"}}
${24:   ${25:cloud_init_nocloud}: ${26:"#"}}
${27:   ${28:s}: ${29:"#"}}
${30:   ${31:context}: ${32:"#"}}
${33:   ${34:cpu_cores}: ${35:"#"}}
${36:   ${37:cpu_features}: ${38:"#"}}
${39:   ${40:atdomain}: ${41:"#"}}
${42:   ${43:cpu_limit}: ${44:"#"}}
${45:   ${46:cpu_model}: ${47:"#"}}
${48:   ${49:cpu_shares}: ${50:"#"}}
${51:   ${52:datavolumes}: ${53:"#"}}
${54:   ${55:disks}: ${56:"#"}}
${57:   ${58:html}: ${59:"#"}}
${60:   ${61:s}: ${62:"#"}}
${63:   ${64:ephemeral}: ${65:"#"}}
${66:   ${67:force}: ${68:"#"}}
${69:   ${70:headless}: ${71:"#"}}
${72:   ${73:host}: ${74:"#"}}
${75:   ${76:hostname}: ${77:"#"}}
${78:   ${79:hugepage_size}: ${80:"#"}}
${81:   ${82:interfaces}: ${83:"#"}}
${84:   ${85:html}: ${86:"#"}}
${87:   ${88:html}: ${89:"#"}}
${90:   ${91:kubeconfig}: ${92:"#"}}
${93:   ${94:labels}: ${95:"#"}}
${96:   ${97:}: ${98:"#"}}
${99:   ${100:machine_type}: ${101:"#"}}
${102:   ${103:memory}: ${104:"#"}}
${105:   ${106:memory_limit}: ${107:"#"}}
${108:   ${109:merge_type}: ${110:"#"}}
${111:   ${112:patch}: ${113:"#"}}
${114:   ${115:name}: ${116:"#"}}
${117:   ${118:namespace}: ${119:"#"}}
${120:   ${121:node_affinity}: ${122:"#"}}
${123:   ${124:password}: ${125:"#"}}
${126:   ${127:proxy}: ${128:"#"}}
${129:   ${130:resource_definition}: ${131:"#"}}
${132:   ${133:smbios_uuid}: ${134:"#"}}
${135:   ${136:state}: ${137:"#"}}
${138:   ${139:subdomain}: ${140:"#"}}
${141:   ${142:tablets}: ${143:"#"}}
${144:   ${145:template}: ${146:"#"}}
${147:   ${148:template_parameters}: ${149:"#"}}
${150:   ${151:username}: ${152:"#"}}
${153:   ${154:validate_certs}: ${155:"#"}}
${156:   ${157:wait}: ${158:"#"}}
${159:   ${160:wait_sleep}: ${161:"#"}}
${162:   ${163:wait_timeout}: ${164:"#"}}
${165:${166:   become: ${167:true}} 
${168:   become_method: ${169:su}} 
${170:   become_user: ${171:nobody}} 
${172:   become_flags: ${173:"-s /bin/sh"}}} 
${174:   when: ${175:variable is defined}} 
${176:   with_items: ${177:array}} 
]]></content>
	<tabTrigger>kubevirt_vm</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
