<snippet>
<content><![CDATA[
${1:# acl_order: Specifies a number that indicates the order of 
# description: User created ACL description. 
# entries: Access control entries that define the ACL 
# name: (required) Specifies the name of the ACL to 
# partition: Device partition to manage resources on. 
# path_match_case: Specifies whether alphabetic case is considered 
# provider: A dict object containing connection details. 
# state: When `state' is `present', ensures that the ACL 
# type: Specifies the type of ACL to create. Once the 
}- name: ${2:Name for bigip_apm_acl module.}
  bigip_apm_acl:
${3:   ${4:acl_order}: ${5:"#"}}
${6:   ${7:description}: ${8:"#"}}
${9:   ${10:entries}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:partition}: ${17:"#"}}
${18:   ${19:path_match_case}: ${20:"#"}}
${21:   ${22:provider}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:type}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>bigip_apm_acl</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
