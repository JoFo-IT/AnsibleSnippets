<snippet>
<content><![CDATA[
${1:# auth: (required) Dictionary with values needed to create HTTP/HTTPS connection to oVirt: 
# authz_name: (required) Authorization provider of the group. In previous versions of oVirt/RHV known as domain. 
# fetch_nested: If `True' the module will fetch additional data from the API. It will fetch IDs of the VMs disks, 
# name: (required) Name of the group to manage. 
# namespace: Namespace of the authorization provider, where group resides. 
# nested_attributes: Specifies list of the attributes which should be fetched from the API. This parameter apply only when 
# poll_interval: Number of the seconds the module waits until another poll request on entity status is sent. 
# state: Should the group be present/absent. 
# timeout: The amount of time in seconds the module should wait for the instance to get into desired state. 
# wait: `True' if the module should wait for the entity to get into desired state. 
}- name: ${2:Name for ovirt_group module.}
  ovirt_group:
${3:   ${4:auth}: ${5:"#"}}
${6:   ${7:authz_name}: ${8:"#"}}
${9:   ${10:fetch_nested}: ${11:"#"}}
${12:   ${13:name}: ${14:"#"}}
${15:   ${16:namespace}: ${17:"#"}}
${18:   ${19:nested_attributes}: ${20:"#"}}
${21:   ${22:poll_interval}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:timeout}: ${29:"#"}}
${30:   ${31:wait}: ${32:"#"}}
${33:${34:   become: ${35:true}} 
${36:   become_method: ${37:su}} 
${38:   become_user: ${39:nobody}} 
${40:   become_flags: ${41:"-s /bin/sh"}}} 
${42:   when: ${43:variable is defined}} 
${44:   with_items: ${45:array}} 
]]></content>
	<tabTrigger>ovirt_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
