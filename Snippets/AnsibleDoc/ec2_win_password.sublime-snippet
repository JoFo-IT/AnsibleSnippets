<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#instance_id = The instance id to get the password data from.
#key_file = Path to the file containing the key pair used on the instance.
#key_passphrase = The passphrase for the instance key pair. The key must use DES or 3DES encryption for this module to decrypt it.
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#wait = Whether or not to wait for the password to be available before returning.
#wait_timeout = Number of seconds to wait before giving up.
}- name: ${2:Name for ec2_win_password module.}
${3:  become: ${4:yes}}
  ec2_win_password: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:ec2_url=${10: } }${11:instance_id=${12: } }${13:key_file=${14: } }${15:key_passphrase=${16: } }${17:profile=${18: } }${19:region=${20: } }${21:http=${22: } }${23:security_token=${24: } }${25:validate_certs=${26: } }${27:wait=${28: } }${29:wait_timeout=${30: } }
${31:  when: ${32: variable is defined}}
${33:  with_items: ${34: array}}
]]></content>
	<tabTrigger>ec2_win_password</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
