<snippet>
<content><![CDATA[
${1:# allow_advertisement: Specifies that addresses that are identified for 
# attack_ceiling: Specifies the absolute maximum allowable for 
# attack_floor: Specifies packets per second to identify an 
# auto_blacklist: Automatically blacklists detected bad actors. To 
# bad_actor_detection: Whether Bad Actor detection is enabled or 
# blacklist_detection_seconds: Detection, in seconds, before blacklisting 
# blacklist_duration: Duration, in seconds, that the blacklist will 
# detection_threshold_eps: Lists how many packets per second the system 
# detection_threshold_percent: Lists the threshold percent increase over time 
# mitigation_threshold_eps: Specify the maximum number of this type of 
# name: Specifies the name of the vector to modify. 
# partition: Device partition to manage resources on. 
# password: (required) The password for the user account 
# per_source_ip_detection_threshold: Specifies the number of packets per second to 
# per_source_ip_mitigation_threshold: Specifies the rate limit applied to a source IP 
# profile: (required) Specifies the name of the profile to 
# provider: A dict object containing connection details. 
# server: (required) The BIG-IP host. You may omit this 
# server_port: The BIG-IP server port. You may omit this option 
# simulate_auto_threshold: Specifies that results of the current automatic 
# state: (required) When `state' is `mitigate', ensures 
# threshold_mode: The `dns-malformed' vector does not support 
# user: (required) The username to connect to the BIG-IP 
# validate_certs: If `no', SSL certificates are not validated. Use 
}- name: ${2:Name for bigip_firewall_dos_vector module.}
  bigip_firewall_dos_vector:
${3:   ${4:allow_advertisement}: ${5:"#"}}
${6:   ${7:attack_ceiling}: ${8:"#"}}
${9:   ${10:attack_floor}: ${11:"#"}}
${12:   ${13:auto_blacklist}: ${14:"#"}}
${15:   ${16:bad_actor_detection}: ${17:"#"}}
${18:   ${19:blacklist_detection_seconds}: ${20:"#"}}
${21:   ${22:blacklist_duration}: ${23:"#"}}
${24:   ${25:detection_threshold_eps}: ${26:"#"}}
${27:   ${28:detection_threshold_percent}: ${29:"#"}}
${30:   ${31:mitigation_threshold_eps}: ${32:"#"}}
${33:   ${34:name}: ${35:"#"}}
${36:   ${37:partition}: ${38:"#"}}
${39:   ${40:password}: ${41:"#"}}
${42:   ${43:per_source_ip_detection_threshold}: ${44:"#"}}
${45:   ${46:per_source_ip_mitigation_threshold}: ${47:"#"}}
${48:   ${49:profile}: ${50:"#"}}
${51:   ${52:provider}: ${53:"#"}}
${54:   ${55:server}: ${56:"#"}}
${57:   ${58:server_port}: ${59:"#"}}
${60:   ${61:simulate_auto_threshold}: ${62:"#"}}
${63:   ${64:state}: ${65:"#"}}
${66:   ${67:threshold_mode}: ${68:"#"}}
${69:   ${70:user}: ${71:"#"}}
${72:   ${73:validate_certs}: ${74:"#"}}
${75:${76:   become: ${77:true}} 
${78:   become_method: ${79:su}} 
${80:   become_user: ${81:nobody}} 
${82:   become_flags: ${83:"-s /bin/sh"}}} 
${84:   when: ${85:variable is defined}} 
${86:   with_items: ${87:array}} 
]]></content>
	<tabTrigger>bigip_firewall_dos_vector</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
