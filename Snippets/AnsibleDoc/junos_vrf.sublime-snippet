<snippet>
<content><![CDATA[
${1:# active: Specifies whether or not the configuration is 
# aggregate: The set of VRF definition objects to be 
# description: Provides a short description of the VRF 
# interfaces: Identifies the set of interfaces that should be 
# name: The name of the VRF definition to be managed on 
# provider: *Deprecated* Starting with Ansible 2.5 we 
# rd: The router-distinguisher value uniquely 
# state: Configures the state of the VRF definition as it 
# table_label: Causes JUNOS to allocate a VPN label per VRF 
# target: It configures VRF target community 
}- name: ${2:Name for junos_vrf module.}
  junos_vrf:
${3:   ${4:active}: ${5:"#"}}
${6:   ${7:aggregate}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:interfaces}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:provider}: ${20:"#"}}
${21:   ${22:rd}: ${23:"#"}}
${24:   ${25:state}: ${26:"#"}}
${27:   ${28:table_label}: ${29:"#"}}
${30:   ${31:target}: ${32:"#"}}
${33:${34:   become: ${35:true}} 
${36:   become_method: ${37:su}} 
${38:   become_user: ${39:nobody}} 
${40:   become_flags: ${41:"-s /bin/sh"}}} 
${42:   when: ${43:variable is defined}} 
${44:   with_items: ${45:array}} 
]]></content>
	<tabTrigger>junos_vrf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
