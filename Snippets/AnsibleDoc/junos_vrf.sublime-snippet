<snippet>
<content><![CDATA[
${1:# active: Specifies whether or not the configuration is active or deactivated 
# aggregate: The set of VRF definition objects to be configured on the remote JUNOS device.  Ths list entries can 
# description: Provides a short description of the VRF definition in the current active configuration.  The VRF 
# interfaces: Identifies the set of interfaces that should be configured in the VRF. Interfaces must be routed 
# name: The name of the VRF definition to be managed on the remote IOS device.  The VRF definition name is an 
# rd: The router-distinguisher value uniquely identifies the VRF to routing processes on the remote IOS 
# state: Configures the state of the VRF definition as it relates to the device operational configuration.  When 
# table_label: Causes JUNOS to allocate a VPN label per VRF rather than per VPN FEC. This allows for forwarding of 
# target: It configures VRF target community configuration. The target value takes the form of `target:A:B' where 
}- name: ${2:Name for junos_vrf module.}
  junos_vrf:
${3:   ${4:active}: ${5:"#"}}
${6:   ${7:aggregate}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:interfaces}: ${14:"#"}}
${15:   ${16:name}: ${17:"#"}}
${18:   ${19:rd}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:table_label}: ${26:"#"}}
${27:   ${28:target}: ${29:"#"}}
${30:${31:   become: ${32:true}} 
${33:   become_method: ${34:su}} 
${35:   become_user: ${36:nobody}} 
${37:   become_flags: ${38:"-s /bin/sh"}}} 
${39:   when: ${40:variable is defined}} 
${41:   with_items: ${42:array}} 
]]></content>
	<tabTrigger>junos_vrf</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
