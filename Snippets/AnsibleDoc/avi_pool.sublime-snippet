<snippet>
<content><![CDATA[
${1:# a_pool: Name of container cloud application that constitutes a pool in a a-b pool configuration, if different 
# ab_pool: A/b pool configuration. 
# ab_priority: Priority of this pool in a a-b pool pair. Internally used. 
# api_version: Avi API version of to use for Avi API and objects. 
# apic_epg_name: Synchronize cisco apic epg members with pool servers. 
# application_persistence_profile_ref: Persistence will ensure the same user sticks to the same server for a desired duration of time. It is a 
# autoscale_launch_config_ref: If configured then avi will trigger orchestration of pool server creation and deletion. It is only 
# autoscale_networks: Network ids for the launch configuration. 
# autoscale_policy_ref: Reference to server autoscale policy. It is a reference to an object of type serverautoscalepolicy. 
# capacity_estimation: Inline estimation of capacity of servers. Default value when not specified in API or module is 
# capacity_estimation_ttfb_thresh: The maximum time-to-first-byte of a server. Allowed values are 1-5000. Special values are 0 - 
# cloud_config_cksum: Checksum of cloud configuration for pool. Internally set by cloud connector. 
# cloud_ref: It is a reference to an object of type cloud. 
# connection_ramp_duration: Duration for which new connections will be gradually ramped up to a server recently brought online. 
# controller: IP address or hostname of the controller. The default value is the environment variable 
# created_by: Creator name. 
# default_server_port: Traffic sent to servers will use this destination server port unless overridden by the server's specific 
# description: A description of the pool. 
# domain_name: Comma separated list of domain names which will be used to verify the common names or subject 
# east_west: Inherited config from virtualservice. 
# enabled: Enable or disable the pool. Disabling will terminate all open connections and pause health monitors. 
# external_autoscale_groups: Names of external auto-scale groups for pool servers. Currently available only for aws. Field introduced 
# fail_action: Enable an action - close connection, http redirect or local http response - when a pool failure happens. 
# fewest_tasks_feedback_delay: Periodicity of feedback for fewest tasks server selection algorithm. Allowed values are 1-300. Default 
# graceful_disable_timeout: Used to gracefully disable a server. Virtual service waits for the specified time before terminating the 
# health_monitor_refs: Verify server health by applying one or more health monitors. Active monitors generate synthetic traffic 
# host_check_enabled: Enable common name check for server certificate. If enabled and no explicit domain name is specified, 
# inline_health_monitor: The passive monitor will monitor client to server connections and requests and adjust traffic load to 
# ipaddrgroup_ref: Use list of servers from ip address group. It is a reference to an object of type ipaddrgroup. 
# lb_algorithm: The load balancing algorithm will pick a server within the pool's list of available servers. Enum 
# lb_algorithm_consistent_hash_hdr: Http header name to be used for the hash key. 
# lb_algorithm_core_nonaffinity: Degree of non-affinity for core afffinity based server selection. Allowed values are 1-65535. Field 
# lb_algorithm_hash: Criteria used as a key for determining the hash between the client and  server. Enum options - 
# max_concurrent_connections_per_server: The maximum number of concurrent connections allowed to each server within the pool. Note  applied value 
# max_conn_rate_per_server: Rate limit connections to each server. 
# name: (required) The name of the pool. 
# networks: (internal-use) networks designated as containing servers for this pool. The servers may be further 
# nsx_securitygroup: A list of nsx service groups where the servers for the pool are created. Field introduced in 17.1.1. 
# password: Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'. 
# pki_profile_ref: Avi will validate the ssl certificate present by a server against the selected pki profile. It is a 
# placement_networks: Manually select the networks and subnets used to provide reachability to the pool's servers. Specify the 
# prst_hdr_name: Header name for custom header persistence. 
# request_queue_depth: Minimum number of requests to be queued when pool is full. Default value when not specified in API or 
# request_queue_enabled: Enable request queue when pool is full. Default value when not specified in API or module is interpreted 
# rewrite_host_header_to_server_name: Rewrite incoming host header to server name of the server to which the request is proxied. Enabling this 
# rewrite_host_header_to_sni: If sni server name is specified, rewrite incoming host header to the sni server name. Default value when 
# server_auto_scale: Server autoscale. Not used anymore. Default value when not specified in API or module is interpreted by 
# server_count: Number of server_count. Default value when not specified in API or module is interpreted by Avi 
# server_name: Fully qualified dns hostname which will be used in the tls sni extension in server connections if sni is 
# server_reselect: Server reselect configuration for http requests. 
# servers: The pool directs load balanced traffic to this list of destination servers. The servers can be 
# sni_enabled: Enable tls sni for server connections. If disabled, avi will not send the sni extension as part of the 
# ssl_key_and_certificate_ref: Service engines will present a client ssl certificate to the server. It is a reference to an object of 
# ssl_profile_ref: When enabled, avi re-encrypts traffic to the backend servers. The specific ssl profile defines which 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and context of object. 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and context of object. 
# url: Avi controller URL of the object. 
# use_service_port: Do not translate the client's destination port when sending the connection to the server. The pool or 
# username: Username used for accessing Avi controller. The default value is the environment variable 
# uuid: Uuid of the pool. 
# vrf_ref: Virtual routing context that the pool is bound to. This is used to provide the isolation of the set of 
}- name: ${2:Name for avi_pool module.}
  avi_pool:
${3:   ${4:a_pool}: ${5:"#"}}
${6:   ${7:ab_pool}: ${8:"#"}}
${9:   ${10:ab_priority}: ${11:"#"}}
${12:   ${13:api_version}: ${14:"#"}}
${15:   ${16:apic_epg_name}: ${17:"#"}}
${18:   ${19:application_persistence_profile_ref}: ${20:"#"}}
${21:   ${22:autoscale_launch_config_ref}: ${23:"#"}}
${24:   ${25:autoscale_networks}: ${26:"#"}}
${27:   ${28:autoscale_policy_ref}: ${29:"#"}}
${30:   ${31:capacity_estimation}: ${32:"#"}}
${33:   ${34:capacity_estimation_ttfb_thresh}: ${35:"#"}}
${36:   ${37:cloud_config_cksum}: ${38:"#"}}
${39:   ${40:cloud_ref}: ${41:"#"}}
${42:   ${43:connection_ramp_duration}: ${44:"#"}}
${45:   ${46:controller}: ${47:"#"}}
${48:   ${49:created_by}: ${50:"#"}}
${51:   ${52:default_server_port}: ${53:"#"}}
${54:   ${55:description}: ${56:"#"}}
${57:   ${58:domain_name}: ${59:"#"}}
${60:   ${61:east_west}: ${62:"#"}}
${63:   ${64:enabled}: ${65:"#"}}
${66:   ${67:external_autoscale_groups}: ${68:"#"}}
${69:   ${70:fail_action}: ${71:"#"}}
${72:   ${73:fewest_tasks_feedback_delay}: ${74:"#"}}
${75:   ${76:graceful_disable_timeout}: ${77:"#"}}
${78:   ${79:health_monitor_refs}: ${80:"#"}}
${81:   ${82:host_check_enabled}: ${83:"#"}}
${84:   ${85:inline_health_monitor}: ${86:"#"}}
${87:   ${88:ipaddrgroup_ref}: ${89:"#"}}
${90:   ${91:lb_algorithm}: ${92:"#"}}
${93:   ${94:lb_algorithm_consistent_hash_hdr}: ${95:"#"}}
${96:   ${97:lb_algorithm_core_nonaffinity}: ${98:"#"}}
${99:   ${100:lb_algorithm_hash}: ${101:"#"}}
${102:   ${103:max_concurrent_connections_per_server}: ${104:"#"}}
${105:   ${106:max_conn_rate_per_server}: ${107:"#"}}
${108:   ${109:name}: ${110:"#"}}
${111:   ${112:networks}: ${113:"#"}}
${114:   ${115:nsx_securitygroup}: ${116:"#"}}
${117:   ${118:password}: ${119:"#"}}
${120:   ${121:pki_profile_ref}: ${122:"#"}}
${123:   ${124:placement_networks}: ${125:"#"}}
${126:   ${127:prst_hdr_name}: ${128:"#"}}
${129:   ${130:request_queue_depth}: ${131:"#"}}
${132:   ${133:request_queue_enabled}: ${134:"#"}}
${135:   ${136:rewrite_host_header_to_server_name}: ${137:"#"}}
${138:   ${139:rewrite_host_header_to_sni}: ${140:"#"}}
${141:   ${142:server_auto_scale}: ${143:"#"}}
${144:   ${145:server_count}: ${146:"#"}}
${147:   ${148:server_name}: ${149:"#"}}
${150:   ${151:server_reselect}: ${152:"#"}}
${153:   ${154:servers}: ${155:"#"}}
${156:   ${157:sni_enabled}: ${158:"#"}}
${159:   ${160:ssl_key_and_certificate_ref}: ${161:"#"}}
${162:   ${163:ssl_profile_ref}: ${164:"#"}}
${165:   ${166:state}: ${167:"#"}}
${168:   ${169:tenant}: ${170:"#"}}
${171:   ${172:tenant_ref}: ${173:"#"}}
${174:   ${175:tenant_uuid}: ${176:"#"}}
${177:   ${178:url}: ${179:"#"}}
${180:   ${181:use_service_port}: ${182:"#"}}
${183:   ${184:username}: ${185:"#"}}
${186:   ${187:uuid}: ${188:"#"}}
${189:   ${190:vrf_ref}: ${191:"#"}}
${192:${193:   become: ${194:true}} 
${195:   become_method: ${196:su}} 
${197:   become_user: ${198:nobody}} 
${199:   become_flags: ${200:"-s /bin/sh"}}} 
${201:   when: ${202:variable is defined}} 
${203:   with_items: ${204:array}} 
]]></content>
	<tabTrigger>avi_pool</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
