<snippet>
<content><![CDATA[
${1:# api_version: Avi API version of to use for Avi API and objects. 
# backup_config_ref: Backup configuration to be executed by this scheduler. It is a reference to an object of type 
# controller: IP address or hostname of the controller. The default value is the environment variable 
# enabled: Boolean flag to set enabled. Default value when not specified in API or module is interpreted by Avi 
# end_date_time: Scheduler end date and time. 
# frequency: Frequency at which custom scheduler will run. Allowed values are 0-60. 
# frequency_unit: Unit at which custom scheduler will run. Enum options - SCHEDULER_FREQUENCY_UNIT_MIN, 
# name: (required) Name of scheduler. 
# password: Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'. 
# run_mode: Scheduler run mode. Enum options - RUN_MODE_PERIODIC, RUN_MODE_AT, RUN_MODE_NOW. 
# run_script_ref: Control script to be executed by this scheduler. It is a reference to an object of type 
# scheduler_action: Define scheduler action. Enum options - SCHEDULER_ACTION_RUN_A_SCRIPT, SCHEDULER_ACTION_BACKUP. Default 
# start_date_time: Scheduler start date and time. 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and context of object. 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and context of object. 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The default value is the environment variable 
# uuid: Unique object identifier of the object. 
}- name: ${2:Name for avi_scheduler module.}
  avi_scheduler:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:backup_config_ref}: ${8:"#"}}
${9:   ${10:controller}: ${11:"#"}}
${12:   ${13:enabled}: ${14:"#"}}
${15:   ${16:end_date_time}: ${17:"#"}}
${18:   ${19:frequency}: ${20:"#"}}
${21:   ${22:frequency_unit}: ${23:"#"}}
${24:   ${25:name}: ${26:"#"}}
${27:   ${28:password}: ${29:"#"}}
${30:   ${31:run_mode}: ${32:"#"}}
${33:   ${34:run_script_ref}: ${35:"#"}}
${36:   ${37:scheduler_action}: ${38:"#"}}
${39:   ${40:start_date_time}: ${41:"#"}}
${42:   ${43:state}: ${44:"#"}}
${45:   ${46:tenant}: ${47:"#"}}
${48:   ${49:tenant_ref}: ${50:"#"}}
${51:   ${52:tenant_uuid}: ${53:"#"}}
${54:   ${55:url}: ${56:"#"}}
${57:   ${58:username}: ${59:"#"}}
${60:   ${61:uuid}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>avi_scheduler</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
