<snippet>
<content><![CDATA[
${1:# administrative: Defines the role as administrative-only or not. 
# auth: (required) Dictionary with values needed to 
# description: Description of the role. 
# fetch_nested: If `True' the module will fetch additional data 
# id: ID of the role to manage. 
# name: Name of the role to manage. 
# nested_attributes: Specifies list of the attributes which should be 
# permits: List of permits which role will have Permit 
# poll_interval: Number of the seconds the module waits until 
# state: Should the role be present/absent. 
# timeout: The amount of time in seconds the module should 
# wait: `yes' if the module should wait for the entity 
}- name: ${2:Name for ovirt_role module.}
  ovirt_role:
${3:   ${4:administrative}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:description}: ${11:"#"}}
${12:   ${13:fetch_nested}: ${14:"#"}}
${15:   ${16:id}: ${17:"#"}}
${18:   ${19:name}: ${20:"#"}}
${21:   ${22:nested_attributes}: ${23:"#"}}
${24:   ${25:permits}: ${26:"#"}}
${27:   ${28:poll_interval}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:timeout}: ${35:"#"}}
${36:   ${37:wait}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>ovirt_role</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
