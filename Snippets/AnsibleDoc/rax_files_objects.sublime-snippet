<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# clear_meta: Optionally clear existing metadata when applying metadata to existing objects. Selecting this option is 
# container: (required) The container to use for file object operations. 
# credentials: File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided. 
# dest: The destination of a "get" operation; i.e. a local directory, "/home/user/myfolder". Used to specify the 
# env: Environment as configured in `~/.pyrax.cfg', see 
# : pyrax-configuration. 
# expires: Used to set an expiration on a file or folder uploaded to Cloud Files. Requires an integer, specifying 
# meta: A hash of items to set as metadata values on an uploaded file or folder 
# method: The method of operation to be performed.  For example, put to upload files to Cloud Files, get to 
# region: Region to create an instance in. 
# src: Source from which to upload files.  Used to specify a remote object as a source for an operation, i.e. a 
# state: Indicate desired state of the resource 
# structure: Used to specify whether to maintain nested directory structure when downloading objects from Cloud 
# type: Type of object to do work on Metadata object or a file object 
# username: Rackspace username, overrides `credentials'. 
# verify_ssl: Whether or not to require SSL validation of API endpoints. 
}- name: ${2:Name for rax_files_objects module.}
  rax_files_objects:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:clear_meta}: ${8:"#"}}
${9:   ${10:container}: ${11:"#"}}
${12:   ${13:credentials}: ${14:"#"}}
${15:   ${16:dest}: ${17:"#"}}
${18:   ${19:env}: ${20:"#"}}
${21:   ${22:}: ${23:"#"}}
${24:   ${25:expires}: ${26:"#"}}
${27:   ${28:meta}: ${29:"#"}}
${30:   ${31:method}: ${32:"#"}}
${33:   ${34:region}: ${35:"#"}}
${36:   ${37:src}: ${38:"#"}}
${39:   ${40:state}: ${41:"#"}}
${42:   ${43:structure}: ${44:"#"}}
${45:   ${46:type}: ${47:"#"}}
${48:   ${49:username}: ${50:"#"}}
${51:   ${52:verify_ssl}: ${53:"#"}}
${54:${55:   become: ${56:true}} 
${57:   become_method: ${58:su}} 
${59:   become_user: ${60:nobody}} 
${61:   become_flags: ${62:"-s /bin/sh"}}} 
${63:   when: ${64:variable is defined}} 
${65:   with_items: ${66:array}} 
]]></content>
	<tabTrigger>rax_files_objects</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
