<snippet>
<content><![CDATA[
${1:# api_key: Rackspace API key, overrides `credentials'. 
# auth_endpoint: The URI of the authentication service. 
# clear_meta: Optionally clear existing metadata when applying 
# container: (required) The container to use for file object 
# credentials: File to find the Rackspace credentials in. 
# dest: The destination of a "get" operation; i.e. a 
# env: Environment as configured in `~/.pyrax.cfg', see 
# md: pyrax- 
# expires: Used to set an expiration on a file or folder 
# identity_type: Authentication mechanism to use, such as 
# meta: A hash of items to set as metadata values on an 
# method: The method of operation to be performed.  For 
# region: Region to create an instance in. 
# src: Source from which to upload files.  Used to 
# state: Indicate desired state of the resource 
# structure: Used to specify whether to maintain nested 
# tenant_id: The tenant ID used for authentication. 
# tenant_name: The tenant name used for authentication. 
# type: Type of object to do work on Metadata object or 
# username: Rackspace username, overrides `credentials'. 
# verify_ssl: Whether or not to require SSL validation of API 
}- name: ${2:Name for rax_files_objects module.}
  rax_files_objects:
${3:   ${4:api_key}: ${5:"#"}}
${6:   ${7:auth_endpoint}: ${8:"#"}}
${9:   ${10:clear_meta}: ${11:"#"}}
${12:   ${13:container}: ${14:"#"}}
${15:   ${16:credentials}: ${17:"#"}}
${18:   ${19:dest}: ${20:"#"}}
${21:   ${22:env}: ${23:"#"}}
${24:   ${25:md}: ${26:"#"}}
${27:   ${28:expires}: ${29:"#"}}
${30:   ${31:identity_type}: ${32:"#"}}
${33:   ${34:meta}: ${35:"#"}}
${36:   ${37:method}: ${38:"#"}}
${39:   ${40:region}: ${41:"#"}}
${42:   ${43:src}: ${44:"#"}}
${45:   ${46:state}: ${47:"#"}}
${48:   ${49:structure}: ${50:"#"}}
${51:   ${52:tenant_id}: ${53:"#"}}
${54:   ${55:tenant_name}: ${56:"#"}}
${57:   ${58:type}: ${59:"#"}}
${60:   ${61:username}: ${62:"#"}}
${63:   ${64:verify_ssl}: ${65:"#"}}
${66:${67:   become: ${68:true}} 
${69:   become_method: ${70:su}} 
${71:   become_user: ${72:nobody}} 
${73:   become_flags: ${74:"-s /bin/sh"}}} 
${75:   when: ${76:variable is defined}} 
${77:   with_items: ${78:array}} 
]]></content>
	<tabTrigger>rax_files_objects</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
