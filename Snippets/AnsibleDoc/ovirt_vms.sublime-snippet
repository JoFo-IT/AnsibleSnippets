<snippet>
<content><![CDATA[
${1:# allow_partial_import: Boolean indication whether to allow partial registration of Virtual Machine when `state' is registered. 
# auth: (required) Dictionary with values needed to create HTTP/HTTPS connection to oVirt: 
# boot_devices: List of boot devices which should be used to boot. Choices `network', `hd' and `cdrom'. For example: 
# cd_iso: ISO file from ISO storage domain which should be attached to Virtual Machine. If you pass empty string 
# clone: If `True' then the disks of the created virtual machine will be cloned and independent of the template. 
# clone_permissions: If `True' then the permissions of the template (only the direct ones, not the inherited ones) will be 
# cloud_init: Dictionary with values for Unix-like Virtual Machine initialization using cloud init: `host_name' - 
# cloud_init_nics: List of dictionaries representing network interafaces to be setup by cloud init. This option is used, 
# cluster: Name of the cluster, where Virtual Machine should be created. Required if creating VM. 
# comment: Comment of the Virtual Machine. 
# cpu_cores: Number of virtual CPUs cores of the Virtual Machine. Default value is set by oVirt/RHV engine. 
# cpu_shares: Set a CPU shares for this Virtual Machine. Default value is set by oVirt/RHV engine. 
# cpu_sockets: Number of virtual CPUs sockets of the Virtual Machine. Default value is set by oVirt/RHV engine. 
# delete_protected: If `True' Virtual Machine will be set as delete protected. If `False' Virtual Machine won't be set as 
# description: Description of the Virtual Machine. 
# disk_format: Specify format of the disk. If (cow) format is used, disk will by created as sparse, so space will be 
# disks: List of disks, which should be attached to Virtual Machine. Disk is described by following dictionary: 
# fetch_nested: If `True' the module will fetch additional data from the API. It will fetch IDs of the VMs disks, 
# force: Please check to `Synopsis' to more detailed description of force parameter, it can behave differently in 
# high_availability: If `True' Virtual Machine will be set as highly available. If `False' Virtual Machine won't be set as 
# host: Specify host where Virtual Machine should be running. By default the host is chosen by engine scheduler. 
# id: ID of the Virtual Machine to manage. 
# initrd_path: Path to an initial ramdisk to be used with the kernel specified by `kernel_path' option. Ramdisk image 
# instance_type: Name of virtual machine's hardware configuration. By default no instance type is used. 
# kernel_params: Kernel command line parameters (formatted as string) to be used with the kernel specified by 
# kernel_path: Path to a kernel image used to boot the virtual machine. Kernel image must be stored on either the ISO 
# kvm: Dictionary of values to be used to connect to kvm and import a virtual machine to oVirt. Dictionary can 
# lease: Name of the storage domain this virtual machine lease reside on. `Note': Supported since oVirt 4.1. 
# memory: Amount of memory of the Virtual Machine. Prefix uses IEC 60027-2 standard (for example 1GiB, 1024MiB). 
# memory_guaranteed: Amount of minimal guaranteed memory of the Virtual Machine. Prefix uses IEC 60027-2 standard (for 
# name: Name of the Virtual Machine to manage. If VM don't exists `name' is required. Otherwise `id' or `name' 
# nested_attributes: Specifies list of the attributes which should be fetched from the API. This parameter apply only when 
# nics: List of NICs, which should be attached to Virtual Machine. NIC is described by following dictionary: 
# operating_system: Operating system of the Virtual Machine. Default value is set by oVirt/RHV engine. 
# poll_interval: Number of the seconds the module waits until another poll request on entity status is sent. 
# serial_policy: Specify a serial number policy for the Virtual Machine. Following options are supported: `vm' - Sets the 
# serial_policy_value: Allows you to specify a custom serial number. This parameter is used only when `serial_policy' is 
# state: Should the Virtual Machine be running/stopped/present/absent/suspended/next_run/registered. When `state' 
# stateless: If `True' Virtual Machine will be set as stateless. If `False' Virtual Machine will be unset as 
# storage_domain: Name of the storage domain where all template disks should be created. This parameter is considered only 
# sysprep: Dictionary with values for Windows Virtual Machine initialization using sysprep: `host_name' - Hostname 
# template: Name of the template, which should be used to create Virtual Machine. Required if creating VM. If 
# template_version: Version number of the template to be used for VM. By default the latest available version of the 
# timeout: The amount of time in seconds the module should wait for the instance to get into desired state. 
# timezone: Sets time zone offset of the guest hardware clock. For example: Etc/GMT 
# type: Type of the Virtual Machine. Default value is set by oVirt/RHV engine. 
# use_latest_template_version: Specify if latest template version should be used, when running a stateless VM. If this parameter is set 
# vmware: Dictionary of values to be used to connect to VMware and import a virtual machine to oVirt. Dictionary 
# wait: `True' if the module should wait for the entity to get into desired state. 
# xen: Dictionary of values to be used to connect to XEN and import a virtual machine to oVirt. Dictionary can 
}- name: ${2:Name for ovirt_vms module.}
  ovirt_vms:
${3:   ${4:allow_partial_import}: ${5:"#"}}
${6:   ${7:auth}: ${8:"#"}}
${9:   ${10:boot_devices}: ${11:"#"}}
${12:   ${13:cd_iso}: ${14:"#"}}
${15:   ${16:clone}: ${17:"#"}}
${18:   ${19:clone_permissions}: ${20:"#"}}
${21:   ${22:cloud_init}: ${23:"#"}}
${24:   ${25:cloud_init_nics}: ${26:"#"}}
${27:   ${28:cluster}: ${29:"#"}}
${30:   ${31:comment}: ${32:"#"}}
${33:   ${34:cpu_cores}: ${35:"#"}}
${36:   ${37:cpu_shares}: ${38:"#"}}
${39:   ${40:cpu_sockets}: ${41:"#"}}
${42:   ${43:delete_protected}: ${44:"#"}}
${45:   ${46:description}: ${47:"#"}}
${48:   ${49:disk_format}: ${50:"#"}}
${51:   ${52:disks}: ${53:"#"}}
${54:   ${55:fetch_nested}: ${56:"#"}}
${57:   ${58:force}: ${59:"#"}}
${60:   ${61:high_availability}: ${62:"#"}}
${63:   ${64:host}: ${65:"#"}}
${66:   ${67:id}: ${68:"#"}}
${69:   ${70:initrd_path}: ${71:"#"}}
${72:   ${73:instance_type}: ${74:"#"}}
${75:   ${76:kernel_params}: ${77:"#"}}
${78:   ${79:kernel_path}: ${80:"#"}}
${81:   ${82:kvm}: ${83:"#"}}
${84:   ${85:lease}: ${86:"#"}}
${87:   ${88:memory}: ${89:"#"}}
${90:   ${91:memory_guaranteed}: ${92:"#"}}
${93:   ${94:name}: ${95:"#"}}
${96:   ${97:nested_attributes}: ${98:"#"}}
${99:   ${100:nics}: ${101:"#"}}
${102:   ${103:operating_system}: ${104:"#"}}
${105:   ${106:poll_interval}: ${107:"#"}}
${108:   ${109:serial_policy}: ${110:"#"}}
${111:   ${112:serial_policy_value}: ${113:"#"}}
${114:   ${115:state}: ${116:"#"}}
${117:   ${118:stateless}: ${119:"#"}}
${120:   ${121:storage_domain}: ${122:"#"}}
${123:   ${124:sysprep}: ${125:"#"}}
${126:   ${127:template}: ${128:"#"}}
${129:   ${130:template_version}: ${131:"#"}}
${132:   ${133:timeout}: ${134:"#"}}
${135:   ${136:timezone}: ${137:"#"}}
${138:   ${139:type}: ${140:"#"}}
${141:   ${142:use_latest_template_version}: ${143:"#"}}
${144:   ${145:vmware}: ${146:"#"}}
${147:   ${148:wait}: ${149:"#"}}
${150:   ${151:xen}: ${152:"#"}}
${153:${154:   become: ${155:true}} 
${156:   become_method: ${157:su}} 
${158:   become_user: ${159:nobody}} 
${160:   become_flags: ${161:"-s /bin/sh"}}} 
${162:   when: ${163:variable is defined}} 
${164:   with_items: ${165:array}} 
]]></content>
	<tabTrigger>ovirt_vms</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
