<snippet>
<content><![CDATA[
${1:# api_password: (required) The password to authenticate with the SANtricity WebServices Proxy or embedded REST API. 
# api_url: (required) The url to the SANtricity WebServices Proxy or embedded REST API, for example 
# api_username: (required) The username to authenticate with the SANtricity WebServices Proxy or embedded REST API. 
# create_copy_pair_if_does_not_exist: Defines if a copy pair will be created if it does not exist. If set to True destination_volume_id and 
# destination_volume_id: The id of the volume copy destination. If used, must be paired with source_volume_id Mutually exclusive 
# search_volume_id: Searches for all valid potential target and source volumes that could be used in a copy_pair Mutually 
# source_volume_id: The id of the volume copy source. If used, must be paired with destination_volume_id Mutually exclusive 
# ssid: (required) The ID of the array to manage. This value must be unique for each array. 
# start_stop_copy: starts a re-copy or stops a copy in progress Note: If you stop the initial file copy before it it done 
# state: (required) Whether the specified volume copy pair should exist or not. 
# validate_certs: Should https certificates be validated? 
# volume_copy_pair_id: The id of a given volume copy pair Mutually exclusive with destination_volume_id, source_volume_id, and 
}- name: ${2:Name for netapp_e_volume_copy module.}
  netapp_e_volume_copy:
${3:   ${4:api_password}: ${5:"#"}}
${6:   ${7:api_url}: ${8:"#"}}
${9:   ${10:api_username}: ${11:"#"}}
${12:   ${13:create_copy_pair_if_does_not_exist}: ${14:"#"}}
${15:   ${16:destination_volume_id}: ${17:"#"}}
${18:   ${19:search_volume_id}: ${20:"#"}}
${21:   ${22:source_volume_id}: ${23:"#"}}
${24:   ${25:ssid}: ${26:"#"}}
${27:   ${28:start_stop_copy}: ${29:"#"}}
${30:   ${31:state}: ${32:"#"}}
${33:   ${34:validate_certs}: ${35:"#"}}
${36:   ${37:volume_copy_pair_id}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>netapp_e_volume_copy</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
