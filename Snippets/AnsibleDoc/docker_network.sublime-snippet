<snippet>
<content><![CDATA[
${1:# api_version: The version of the Docker API running on the 
# appends: By default the connected list is canonical, 
# cacert_path: Use a CA certificate when performing server 
# cert_path: Path to the client's TLS certificate file. If 
# connected: List of container names or container IDs to 
# debug: Debug mode 
# docker_host: The URL or Unix socket path used to connect to 
# driver: Specify the type of network. Docker provides 
# driver_options: Dictionary of network settings. Consult docker 
# force: With state `absent' forces disconnecting all 
# ipam_driver: Specify an IPAM driver. 
# ipam_options: Dictionary of IPAM options. 
# key_path: Path to the client's TLS key file. If the value 
# name: (required) Name of the network to operate on. 
# ssl_version: Provide a valid SSL version number. Default 
# state: `absent' deletes the network. If a network has 
# timeout: The maximum amount of time in seconds to wait on 
# tls: Secure the connection to the API by using TLS 
# tls_hostname: When verifying the authenticity of the Docker 
# tls_verify: Secure the connection to the API by using TLS 
}- name: ${2:Name for docker_network module.}
  docker_network:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:appends}: ${8:"#"}}
${9:   ${10:cacert_path}: ${11:"#"}}
${12:   ${13:cert_path}: ${14:"#"}}
${15:   ${16:connected}: ${17:"#"}}
${18:   ${19:debug}: ${20:"#"}}
${21:   ${22:docker_host}: ${23:"#"}}
${24:   ${25:driver}: ${26:"#"}}
${27:   ${28:driver_options}: ${29:"#"}}
${30:   ${31:force}: ${32:"#"}}
${33:   ${34:ipam_driver}: ${35:"#"}}
${36:   ${37:ipam_options}: ${38:"#"}}
${39:   ${40:key_path}: ${41:"#"}}
${42:   ${43:name}: ${44:"#"}}
${45:   ${46:ssl_version}: ${47:"#"}}
${48:   ${49:state}: ${50:"#"}}
${51:   ${52:timeout}: ${53:"#"}}
${54:   ${55:tls}: ${56:"#"}}
${57:   ${58:tls_hostname}: ${59:"#"}}
${60:   ${61:tls_verify}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>docker_network</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
