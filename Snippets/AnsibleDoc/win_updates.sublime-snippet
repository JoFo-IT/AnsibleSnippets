<snippet>
<content><![CDATA[
${1:# blacklist: A list of update titles or KB numbers that can 
# category_names: A scalar or list of categories to install 
# log_path: If set, `win_updates' will append update 
# reboot: Ansible will automatically reboot the remote 
# reboot_timeout: The time in seconds to wait until the host is 
# state: Controls whether found updates are returned as a 
# use_scheduled_task: Will not auto elevate the remote process with 
# whitelist: A list of update titles or KB numbers that can 
}- name: ${2:Name for win_updates module.}
  win_updates:
${3:   ${4:blacklist}: ${5:"#"}}
${6:   ${7:category_names}: ${8:"#"}}
${9:   ${10:log_path}: ${11:"#"}}
${12:   ${13:reboot}: ${14:"#"}}
${15:   ${16:reboot_timeout}: ${17:"#"}}
${18:   ${19:state}: ${20:"#"}}
${21:   ${22:use_scheduled_task}: ${23:"#"}}
${24:   ${25:whitelist}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>win_updates</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
