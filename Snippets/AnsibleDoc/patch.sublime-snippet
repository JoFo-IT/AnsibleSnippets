<snippet>
<content><![CDATA[
${1:# backup: Passes `--backup --version-control=numbered' to patch, producing numbered backup copies. 
# basedir: Path of a base directory in which the patch file will be applied. May be omitted when `dest' option is 
# binary: Setting to `yes' will disable patch's heuristic for transforming CRLF line endings into LF. Line endings 
# dest: Path of the file on the remote machine to be patched. The names of the files to be patched are usually 
# remote_src: If `no', it will search for src at originating/master machine, if `yes' it will go to the remote/target 
# src: (required) Path of the patch file as accepted by the GNU patch tool. If `remote_src' is 'no', the patch 
# strip: Number that indicates the smallest prefix containing leading slashes that will be stripped from each 
}- name: ${2:Name for patch module.}
  patch:
${3:   ${4:backup}: ${5:"#"}}
${6:   ${7:basedir}: ${8:"#"}}
${9:   ${10:binary}: ${11:"#"}}
${12:   ${13:dest}: ${14:"#"}}
${15:   ${16:remote_src}: ${17:"#"}}
${18:   ${19:src}: ${20:"#"}}
${21:   ${22:strip}: ${23:"#"}}
${24:${25:   become: ${26:true}} 
${27:   become_method: ${28:su}} 
${29:   become_user: ${30:nobody}} 
${31:   become_flags: ${32:"-s /bin/sh"}}} 
${33:   when: ${34:variable is defined}} 
${35:   with_items: ${36:array}} 
]]></content>
	<tabTrigger>patch</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
