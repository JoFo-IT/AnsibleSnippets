<snippet>
<content><![CDATA[
${1:# backup: Passes `--backup --version-control=numbered' to 
# basedir: Path of a base directory in which the patch file 
# binary: Setting to `yes' will disable patch's heuristic 
# dest: Path of the file on the remote machine to be 
# remote_src: If `no', it will search for src at 
# src: (required) Path of the patch file as accepted by 
# state: Whether the patch should be applied or reverted. 
# strip: Number that indicates the smallest prefix 
}- name: ${2:Name for patch module.}
  patch:
${3:   ${4:backup}: ${5:"#"}}
${6:   ${7:basedir}: ${8:"#"}}
${9:   ${10:binary}: ${11:"#"}}
${12:   ${13:dest}: ${14:"#"}}
${15:   ${16:remote_src}: ${17:"#"}}
${18:   ${19:src}: ${20:"#"}}
${21:   ${22:state}: ${23:"#"}}
${24:   ${25:strip}: ${26:"#"}}
${27:${28:   become: ${29:true}} 
${30:   become_method: ${31:su}} 
${32:   become_user: ${33:nobody}} 
${34:   become_flags: ${35:"-s /bin/sh"}}} 
${36:   when: ${37:variable is defined}} 
${38:   with_items: ${39:array}} 
]]></content>
	<tabTrigger>patch</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
