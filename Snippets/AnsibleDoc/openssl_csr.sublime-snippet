<snippet>
<content><![CDATA[
${1:# attributes: Attributes the file or directory should have. To 
# basic_constraints: Indicates basic constraints, such as if the 
# basic_constraints_critical: Should the basicConstraints extension be 
# common_name: commonName field of the certificate signing 
# country_name: countryName field of the certificate signing 
# digest: Digest used when signing the certificate signing 
# email_address: emailAddress field of the certificate signing 
# extended_key_usage: Additional restrictions (e.g. client 
# extended_key_usage_critical: Should the extkeyUsage extension be considered 
# force: Should the certificate signing request be forced 
# group: Name of the group that should own the 
# key_usage: This defines the purpose (e.g. encipherment, 
# key_usage_critical: Should the keyUsage extension be considered as 
# locality_name: localityName field of the certificate signing 
# mode: Mode the file or directory should be. For those 
# ocsp_must_staple: Indicates that the certificate should contain 
# ocsp_must_staple_critical: Should the OCSP Must Staple extension be 
# 3: section-4). 
# organization_name: organizationName field of the certificate 
# organizational_unit_name: organizationalUnitName field of the certificate 
# owner: Name of the user that should own the 
# path: (required) Name of the file into which the 
# privatekey_passphrase: The passphrase for the privatekey. 
# privatekey_path: (required) Path to the privatekey to use when 
# selevel: Level part of the SELinux file context. This is 
# serole: Role part of SELinux file context, `_default' 
# setype: Type part of SELinux file context, `_default' 
# seuser: User part of SELinux file context. Will default 
# state: Whether the certificate signing request should 
# state_or_province_name: stateOrProvinceName field of the certificate 
# subject: Key/value pairs that will be present in the 
# subject_alt_name: SAN extension to attach to the certificate 
# 5280: section-4.2. 
# subject_alt_name_critical: Should the subjectAltName extension be 
# unsafe_writes: By default this module uses atomic operations to 
# version: Version of the certificate signing request 
}- name: ${2:Name for openssl_csr module.}
  openssl_csr:
${3:   ${4:attributes}: ${5:"#"}}
${6:   ${7:basic_constraints}: ${8:"#"}}
${9:   ${10:basic_constraints_critical}: ${11:"#"}}
${12:   ${13:common_name}: ${14:"#"}}
${15:   ${16:country_name}: ${17:"#"}}
${18:   ${19:digest}: ${20:"#"}}
${21:   ${22:email_address}: ${23:"#"}}
${24:   ${25:extended_key_usage}: ${26:"#"}}
${27:   ${28:extended_key_usage_critical}: ${29:"#"}}
${30:   ${31:force}: ${32:"#"}}
${33:   ${34:group}: ${35:"#"}}
${36:   ${37:key_usage}: ${38:"#"}}
${39:   ${40:key_usage_critical}: ${41:"#"}}
${42:   ${43:locality_name}: ${44:"#"}}
${45:   ${46:mode}: ${47:"#"}}
${48:   ${49:ocsp_must_staple}: ${50:"#"}}
${51:   ${52:ocsp_must_staple_critical}: ${53:"#"}}
${54:   ${55:3}: ${56:"#"}}
${57:   ${58:organization_name}: ${59:"#"}}
${60:   ${61:organizational_unit_name}: ${62:"#"}}
${63:   ${64:owner}: ${65:"#"}}
${66:   ${67:path}: ${68:"#"}}
${69:   ${70:privatekey_passphrase}: ${71:"#"}}
${72:   ${73:privatekey_path}: ${74:"#"}}
${75:   ${76:selevel}: ${77:"#"}}
${78:   ${79:serole}: ${80:"#"}}
${81:   ${82:setype}: ${83:"#"}}
${84:   ${85:seuser}: ${86:"#"}}
${87:   ${88:state}: ${89:"#"}}
${90:   ${91:state_or_province_name}: ${92:"#"}}
${93:   ${94:subject}: ${95:"#"}}
${96:   ${97:subject_alt_name}: ${98:"#"}}
${99:   ${100:5280}: ${101:"#"}}
${102:   ${103:subject_alt_name_critical}: ${104:"#"}}
${105:   ${106:unsafe_writes}: ${107:"#"}}
${108:   ${109:version}: ${110:"#"}}
${111:${112:   become: ${113:true}} 
${114:   become_method: ${115:su}} 
${116:   become_user: ${117:nobody}} 
${118:   become_flags: ${119:"-s /bin/sh"}}} 
${120:   when: ${121:variable is defined}} 
${122:   with_items: ${123:array}} 
]]></content>
	<tabTrigger>openssl_csr</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
