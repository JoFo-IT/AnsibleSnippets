<snippet>
<content><![CDATA[
${1:#access_key_ids = A list of the keys that you want impacted by the access_key_state paramter.
#access_key_state = When type is user, it creates, removes, deactivates or activates a user's access key(s). Note that actions apply
#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#groups = A list of groups the user should belong to. When update, will gracefully remove groups not listed.
#iam_type = Type of IAM resource
#key_count = When access_key_state is create it will ensure this quantity of keys are present. Defaults to 1.
#name = Name of IAM resource to create or identify
#new_name = When state is update, will replace name with new_name on IAM resource
#new_path = When state is update, will replace the path with new_path on the IAM resource
#password = When type is user and state is present, define the users login password. Also works with update. Note that
#path = When creating or updating, specify the desired path of the resource. If state is present, it will replace the
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#state = Whether to create, delete or update the IAM resource. Note, roles cannot be updated.
#update_password = `always' will update passwords if they differ.  `on_create' will only set the password for newly created users.
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
}- name: ${2:Name for iam module.}
${3:  become: ${4:yes}}
  iam: ${5:access_key_ids=${6: } }${7:access_key_state=${8: } }${9:aws_access_key=${10: } }${11:aws_secret_key=${12: } }${13:ec2_url=${14: } }${15:groups=${16: } }${17:iam_type=${18: } }${19:key_count=${20: } }${21:name=${22: } }${23:new_name=${24: } }${25:new_path=${26: } }${27:password=${28: } }${29:path=${30: } }${31:profile=${32: } }${33:region=${34: } }${35:http=${36: } }${37:security_token=${38: } }${39:state=${40: } }${41:update_password=${42: } }${43:validate_certs=${44: } }
${45:  when: ${46: variable is defined}}
${47:  with_items: ${48: array}}
]]></content>
	<tabTrigger>iam</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
