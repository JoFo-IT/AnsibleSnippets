<snippet>
<content><![CDATA[
${1:# ca_cert: Specifies the name of a file containing SSL 
# cascade: Automatically drop objects that depend on the 
# columns: List of index columns that need to be covered by 
# concurrent: Enable or disable concurrent mode (CREATE / DROP 
# cond: Index conditions. Mutually exclusive with 
# db: Name of database to connect to and where the 
# idxname: (required) Name of the index to create or drop. 
# idxtype: Index type (like btree, gist, gin, etc.). 
# login_host: Host running the database. 
# login_password: The password used to authenticate with. 
# login_unix_socket: Path to a Unix domain socket for local 
# login_user: The username used to authenticate with. 
# port: Database port to connect to. 
# schema: Name of a database schema where the index will 
# session_role: Switch to session_role after connecting. The 
# ssl_mode: Determines whether or with what priority a 
# state: Index state. `state=present' implies the index 
# storage_params: Storage parameters like fillfactor, 
# table: (required) Table to create index on it. Mutually 
# tablespace: Set a tablespace for the index. Mutually 
}- name: ${2:Name for postgresql_idx module.}
  postgresql_idx:
${3:   ${4:ca_cert}: ${5:"#"}}
${6:   ${7:cascade}: ${8:"#"}}
${9:   ${10:columns}: ${11:"#"}}
${12:   ${13:concurrent}: ${14:"#"}}
${15:   ${16:cond}: ${17:"#"}}
${18:   ${19:db}: ${20:"#"}}
${21:   ${22:idxname}: ${23:"#"}}
${24:   ${25:idxtype}: ${26:"#"}}
${27:   ${28:login_host}: ${29:"#"}}
${30:   ${31:login_password}: ${32:"#"}}
${33:   ${34:login_unix_socket}: ${35:"#"}}
${36:   ${37:login_user}: ${38:"#"}}
${39:   ${40:port}: ${41:"#"}}
${42:   ${43:schema}: ${44:"#"}}
${45:   ${46:session_role}: ${47:"#"}}
${48:   ${49:ssl_mode}: ${50:"#"}}
${51:   ${52:state}: ${53:"#"}}
${54:   ${55:storage_params}: ${56:"#"}}
${57:   ${58:table}: ${59:"#"}}
${60:   ${61:tablespace}: ${62:"#"}}
${63:${64:   become: ${65:true}} 
${66:   become_method: ${67:su}} 
${68:   become_user: ${69:nobody}} 
${70:   become_flags: ${71:"-s /bin/sh"}}} 
${72:   when: ${73:variable is defined}} 
${74:   with_items: ${75:array}} 
]]></content>
	<tabTrigger>postgresql_idx</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
