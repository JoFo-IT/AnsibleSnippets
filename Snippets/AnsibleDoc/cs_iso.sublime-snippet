<snippet>
<content><![CDATA[
${1:#account = Account the ISO is related to.
#api_http_method = HTTP method used.
#api_key = API key of the CloudStack API.
#api_region = Name of the ini section in the `cloustack.ini' file.
#api_secret = Secret key of the CloudStack API.
#api_timeout = HTTP timeout.
#api_url = URL of the CloudStack API e.g. https://cloud.example.com/client/api.
#bootable = Register the ISO to be bootable. Only used if `state' is present.
#checksum = The MD5 checksum value of this ISO. If set, we search by checksum instead of name.
#domain = Domain the ISO is related to.
#is_dynamically_scalable = Register the ISO having XS/VMWare tools installed inorder to support dynamic scaling of VM cpu/memory. Only used
#is_featured = Register the ISO to be featured. Only used if `state' is present.
#is_public = Register the ISO to be publicly available to all users. Only used if `state' is present.
#is_ready = This flag is used for searching existing ISOs. If set to `true', it will only list ISO ready for deployment e.g.
#iso_filter = Name of the filter used to search for the ISO.
#name = Name of the ISO.
#os_type = Name of the OS that best represents the OS of this ISO. If the iso is bootable this parameter needs to be
#project = Name of the project the ISO to be registered in.
#state = State of the ISO.
#url = URL where the ISO can be downloaded from. Required if `state' is present.
#zone = Name of the zone you wish the ISO to be registered or deleted from. If not specified, first zone found will be
}- name: ${2:Name for cs_iso module.}
${3:  become: ${4:yes}}
  cs_iso: ${5:account=${6: } }${7:api_http_method=${8: } }${9:api_key=${10: } }${11:api_region=${12: } }${13:api_secret=${14: } }${15:api_timeout=${16: } }${17:api_url=${18: } }${19:bootable=${20: } }${21:checksum=${22: } }${23:domain=${24: } }${25:is_dynamically_scalable=${26: } }${27:is_featured=${28: } }${29:is_public=${30: } }${31:is_ready=${32: } }${33:iso_filter=${34: } }${35:name=${36: } }${37:os_type=${38: } }${39:project=${40: } }${41:state=${42: } }${43:url=${44: } }${45:zone=${46: } }
${47:  when: ${48: variable is defined}}
${49:  with_items: ${50: array}}
]]></content>
	<tabTrigger>cs_iso</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
