<snippet>
<content><![CDATA[
${1:#action = Perform the given action. The lock and unlock actions always return changed as the servers API does not provide
#api_timeout = How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be
#auth = Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password'
#auth_type = Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the
#availability_zone = Name of the availability zone.
#cacert = A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
#cert = A path to a client certificate to use as part of the SSL transaction
#cloud = Named cloud to operate against. Provides default values for `auth' and `auth_type'. This parameter is not needed
#endpoint_type = Endpoint URL type to fetch from the service catalog.
#key = A path to a client key to use as part of the SSL transaction
#region_name = Name of the region.
#server = Name or ID of the instance
#timeout = How long should ansible wait for the requested resource.
#validate_certs = Whether or not SSL API requests should be verified.
#wait = Should ansible wait until the requested resource is complete.
}- name: ${2:Name for os_server_actions module.}
${3:  become: ${4:yes}}
  os_server_actions: ${5:action=${6: } }${7:api_timeout=${8: } }${9:auth=${10: } }${11:auth_type=${12: } }${13:availability_zone=${14: } }${15:cacert=${16: } }${17:cert=${18: } }${19:cloud=${20: } }${21:endpoint_type=${22: } }${23:key=${24: } }${25:region_name=${26: } }${27:server=${28: } }${29:timeout=${30: } }${31:validate_certs=${32: } }${33:wait=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>os_server_actions</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
