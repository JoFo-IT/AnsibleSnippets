<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY
#cidr_block = The cidr block representing the VPC, e.g. 10.0.0.0/16
#dns_hostnames = toggles the "Enable DNS hostname support for instances" flag
#dns_support = toggles the "Enable DNS resolution" flag
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored
#instance_tenancy = The supported tenancy options for instances launched into the VPC.
#internet_gateway = Toggle whether there should be an Internet gateway attached to the VPC
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if
#http = ec2_region
#resource_tags = A dictionary array of resource tags of the form: { tag1: value1, tag2: value2 }.  Tags in this list are used in
#route_tables = A dictionary array of route tables to add of the form: { subnets: [172.22.2.0/24, 172.22.3.0/24,], routes: [{
#security_token = AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment
#state = Create or terminate the VPC
#subnets = A dictionary array of subnets to add of the form: { cidr: ..., az: ... , resource_tags: ... }. Where az is the
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#vpc_id = A VPC id to terminate when state=absent
#wait = wait for the VPC to be in state 'available' before returning
#wait_timeout = how long before wait gives up, in seconds
}- name: ${2:Name for ec2_vpc module.}
${3:  become: ${4:yes}}
  ec2_vpc: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:cidr_block=${10: } }${11:dns_hostnames=${12: } }${13:dns_support=${14: } }${15:ec2_url=${16: } }${17:instance_tenancy=${18: } }${19:internet_gateway=${20: } }${21:profile=${22: } }${23:region=${24: } }${25:http=${26: } }${27:resource_tags=${28: } }${29:route_tables=${30: } }${31:security_token=${32: } }${33:state=${34: } }${35:subnets=${36: } }${37:validate_certs=${38: } }${39:vpc_id=${40: } }${41:wait=${42: } }${43:wait_timeout=${44: } }
${45:  when: ${46: variable is defined}}
${47:  with_items: ${48: array}}
]]></content>
	<tabTrigger>ec2_vpc</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
