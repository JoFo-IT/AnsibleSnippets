<snippet>
<content><![CDATA[
${1:# api_version: The version of the Docker API running on the Docker Host. Defaults to the latest version of the API 
# archive_path: Use with state `present' to archive an image to a .tar file. 
# buildargs: Provide a dictionary of `key:value' build arguments that map to Dockerfile ARG directive. Docker expects 
# cacert_path: Use a CA certificate when performing server verification by providing the path to a CA certificate file. 
# cert_path: Path to the client's TLS certificate file. 
# container_limits: A dictionary of limits applied to each container created by the build process. 
# docker_host: The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the 
# dockerfile: Use with state `present' to provide an alternate name for the Dockerfile to use when building an image. 
# force: Use with state `absent' to un-tag and remove all images matching the specified name. Use with state 
# http_timeout: Timeout for HTTP requests during the image build operation. Provide a positive integer value for the 
# key_path: Path to the client's TLS key file. 
# load_path: Use with state `present' to load an image from a .tar file. 
# name: (required) Image name. Name format will be one of: name, repository/name, registry_server:port/name. 
# nocache: Do not use cache when building an image. 
# path: Use with state 'present' to build an image. Will be the path to a directory containing the context and 
# pull: When building an image downloads any updates to the FROM image in Dockerfile. 
# push: Push the image to the registry. Specify the registry as part of the `name' or `repository' parameter. 
# repository: Full path to a repository. Use with state `present' to tag the image into the repository. Expects format 
# rm: Remove intermediate containers after build. 
# ssl_version: Provide a valid SSL version number. Default value determined by docker-py, currently 1.0. 
# state: Make assertions about the state of an image. When `absent' an image will be removed. Use the force 
# tag: Used to select an image when pulling. Will be added to the image when pushing, tagging or building. 
# timeout: The maximum amount of time in seconds to wait on a response from the API. 
# tls: Secure the connection to the API by using TLS without verifying the authenticity of the Docker host 
# tls_hostname: When verifying the authenticity of the Docker Host server, provide the expected name of the server. 
# tls_verify: Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server. 
# use_tls: DEPRECATED. Whether to use tls to connect to the docker server. Set to `no' when TLS will not be used. 
}- name: ${2:Name for docker_image module.}
  docker_image:
${3:   ${4:api_version}: ${5:"#"}}
${6:   ${7:archive_path}: ${8:"#"}}
${9:   ${10:buildargs}: ${11:"#"}}
${12:   ${13:cacert_path}: ${14:"#"}}
${15:   ${16:cert_path}: ${17:"#"}}
${18:   ${19:container_limits}: ${20:"#"}}
${21:   ${22:docker_host}: ${23:"#"}}
${24:   ${25:dockerfile}: ${26:"#"}}
${27:   ${28:force}: ${29:"#"}}
${30:   ${31:http_timeout}: ${32:"#"}}
${33:   ${34:key_path}: ${35:"#"}}
${36:   ${37:load_path}: ${38:"#"}}
${39:   ${40:name}: ${41:"#"}}
${42:   ${43:nocache}: ${44:"#"}}
${45:   ${46:path}: ${47:"#"}}
${48:   ${49:pull}: ${50:"#"}}
${51:   ${52:push}: ${53:"#"}}
${54:   ${55:repository}: ${56:"#"}}
${57:   ${58:rm}: ${59:"#"}}
${60:   ${61:ssl_version}: ${62:"#"}}
${63:   ${64:state}: ${65:"#"}}
${66:   ${67:tag}: ${68:"#"}}
${69:   ${70:timeout}: ${71:"#"}}
${72:   ${73:tls}: ${74:"#"}}
${75:   ${76:tls_hostname}: ${77:"#"}}
${78:   ${79:tls_verify}: ${80:"#"}}
${81:   ${82:use_tls}: ${83:"#"}}
${84:${85:   become: ${86:true}} 
${87:   become_method: ${88:su}} 
${89:   become_user: ${90:nobody}} 
${91:   become_flags: ${92:"-s /bin/sh"}}} 
${93:   when: ${94:variable is defined}} 
${95:   with_items: ${96:array}} 
]]></content>
	<tabTrigger>docker_image</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
