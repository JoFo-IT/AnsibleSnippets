<snippet>
<content><![CDATA[
${1:# after: The ordered set of commands to append to the end 
# backup: This argument will cause the module to create a 
# before: The ordered set of commands to push on to the 
# config: The `config' argument allows the playbook 
# defaults: This argument specifies whether or not to 
# lines: The ordered set of commands that should be 
# match: Instructs the module on the way to perform the 
# multiline_delimiter: This argument is used when pushing a multiline 
# parents: The ordered set of parents that uniquely 
# replace: Instructs the module on the way to perform the 
# save: The `save' argument instructs the module to save 
# src: Specifies the source path to the file that 
}- name: ${2:Name for ordnance_config module.}
  ordnance_config:
${3:   ${4:after}: ${5:"#"}}
${6:   ${7:backup}: ${8:"#"}}
${9:   ${10:before}: ${11:"#"}}
${12:   ${13:config}: ${14:"#"}}
${15:   ${16:defaults}: ${17:"#"}}
${18:   ${19:lines}: ${20:"#"}}
${21:   ${22:match}: ${23:"#"}}
${24:   ${25:multiline_delimiter}: ${26:"#"}}
${27:   ${28:parents}: ${29:"#"}}
${30:   ${31:replace}: ${32:"#"}}
${33:   ${34:save}: ${35:"#"}}
${36:   ${37:src}: ${38:"#"}}
${39:${40:   become: ${41:true}} 
${42:   become_method: ${43:su}} 
${44:   become_user: ${45:nobody}} 
${46:   become_flags: ${47:"-s /bin/sh"}}} 
${48:   when: ${49:variable is defined}} 
${50:   with_items: ${51:array}} 
]]></content>
	<tabTrigger>ordnance_config</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
