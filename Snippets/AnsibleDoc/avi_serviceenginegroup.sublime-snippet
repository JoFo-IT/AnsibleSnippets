<snippet>
<content><![CDATA[
${1:# active_standby: Service engines in active/standby mode for ha failover. Default value when not specified in API or 
# advertise_backend_networks: Advertise reach-ability of backend server networks via adc through bgp for default gateway feature. 
# aggressive_failure_detection: Enable aggressive failover configuration for ha. Default value when not specified in API or module is 
# algo: In compact placement, virtual services are placed on existing ses until max_vs_per_se limit is reached. 
# api_version: Avi API version of to use for Avi API and objects. 
# archive_shm_limit: Amount of se memory in gb until which shared memory is collected in core archive. Field introduced in 
# async_ssl: Ssl handshakes will be handled by dedicated ssl threads. Default value when not specified in API or 
# async_ssl_threads: Number of async ssl threads per se_dp. Allowed values are 1-4. Default value when not specified in API 
# auto_rebalance: If set, virtual services will be automatically migrated when load on an se is less than minimum or more 
# auto_rebalance_interval: Frequency of rebalance, if 'auto rebalance' is enabled. Default value when not specified in API or 
# auto_redistribute_active_standby_load: Redistribution of virtual services from the takeover se to the replacement se can cause momentary 
# buffer_se: Excess service engine capacity provisioned for ha failover. Default value when not specified in API or 
# cloud_ref: It is a reference to an object of type cloud. 
# connection_memory_percentage: Percentage of memory for connection state. This will come at the expense of memory used for http in- 
# controller: IP address or hostname of the controller. The default value is the environment variable 
# cpu_reserve: Boolean flag to set cpu_reserve. Default value when not specified in API or module is interpreted by Avi 
# cpu_socket_affinity: Allocate all the cpu cores for the service engine virtual machines  on the same cpu socket. Applicable 
# custom_securitygroups_data: Custom security groups to be associated with data vnics for se instances in openstack and aws clouds. 
# custom_securitygroups_mgmt: Custom security groups to be associated with management vnic for se instances in openstack and aws 
# custom_tag: Custom tag will be used to create the tags for se instance in aws. Note this is not the same as the 
# dedicated_dispatcher_core: Dedicate the core that handles packet receive/transmit from the network to just the dispatching 
# description: User defined description for the object. 
# disk_per_se: Amount of disk space for each of the service engine virtual machines. Default value when not specified 
# distribute_load_active_standby: Use both the active and standby service engines for virtual service placement in the legacy active 
# enable_routing: Enable routing for this serviceenginegroup . Default value when not specified in API or module is 
# enable_vip_on_all_interfaces: Enable vip on all interfaces of se. Field introduced in 17.1.1. Default value when not specified in API 
# enable_vmac: Use virtual mac address for interfaces on which floating interface ips are placed. Default value when 
# extra_config_multiplier: Multiplier for extra config to support large vs/pool config. Default value when not specified in API or 
# extra_shared_config_memory: Extra config memory to support large geo db configuration. Field introduced in 17.1.1. Default value 
# floating_intf_ip: If serviceenginegroup is configured for legacy 1+1 active standby ha mode, floating ip's will be 
# floating_intf_ip_se_2: If serviceenginegroup is configured for legacy 1+1 active standby ha mode, floating ip's will be 
# ha_mode: High availability mode for all the virtual services using this service engine group. Enum options - 
# hardwaresecuritymodulegroup_ref: It is a reference to an object of type hardwaresecuritymodulegroup. 
# hm_on_standby: Enable active health monitoring from the standby se for all placed virtual services. Default value when 
# host_attribute_key: Key of a (key, value) pair identifying a label for a set of nodes usually in container clouds. Needs to 
# host_attribute_value: Value of a (key, value) pair identifying a label for a set of nodes usually in container clouds. Needs 
# hypervisor: Override default hypervisor. Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN. 
# instance_flavor: Instance/flavor type for se instance. 
# iptables: Iptable rules. 
# least_load_core_selection: Select core with least load for new flow. Default value when not specified in API or module is 
# log_disksz: Maximum disk capacity (in mb) to be allocated to an se. This is exclusively used for debug and log data. 
# max_cpu_usage: When cpu usage on an se exceeds this threshold, virtual services hosted on this se may be rebalanced to 
# max_scaleout_per_vs: Maximum number of active service engines for the virtual service. Allowed values are 1-64. Default value 
# max_se: Maximum number of services engines in this group. Allowed values are 0-1000. Default value when not 
# max_vs_per_se: Maximum number of virtual services that can be placed on a single service engine. East west virtual 
# mem_reserve: Boolean flag to set mem_reserve. Default value when not specified in API or module is interpreted by Avi 
# memory_per_se: Amount of memory for each of the service engine virtual machines. Default value when not specified in 
# mgmt_network_ref: Management network to use for avi service engines. It is a reference to an object of type network. 
# mgmt_subnet: Management subnet to use for avi service engines. 
# min_cpu_usage: When cpu usage on an se falls below the minimum threshold, virtual services hosted on the se may be 
# min_scaleout_per_vs: Minimum number of active service engines for the virtual service. Allowed values are 1-64. Default value 
# name: (required) Name of the object. 
# non_significant_log_throttle: This setting limits the number of non-significant logs generated per second per core on this se. Default 
# num_flow_cores_sum_changes_to_ignore: Number of changes in num flow cores sum to ignore. Default value when not specified in API or module is 
# openstack_availability_zone: Field deprecated in 17.1.1. 
# openstack_availability_zones: Field introduced in 17.1.1. 
# openstack_mgmt_network_name: Avi management network name. 
# openstack_mgmt_network_uuid: Management network uuid. 
# os_reserved_memory: Amount of extra memory to be reserved for use by the operating system on a service engine. Default value 
# password: Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'. 
# per_app: Per-app se mode is designed for deploying dedicated load balancers per app (vs). In this mode, each se 
# placement_mode: If placement mode is 'auto', virtual services are automatically placed on service engines. Enum options 
# realtime_se_metrics: Enable or disable real time se metrics. 
# se_deprovision_delay: Duration to preserve unused service engine virtual machines before deleting them. If traffic to a 
# se_dos_profile: Dosthresholdprofile settings for serviceenginegroup. 
# se_ipc_udp_port: Udp port for se_dp ipc in docker bridge mode. Field introduced in 17.1.2. Default value when not 
# se_name_prefix: Prefix to use for virtual machine name of service engines. Default value when not specified in API or 
# se_remote_punt_udp_port: Udp port for punted packets in docker bridge mode. Field introduced in 17.1.2. Default value when not 
# se_thread_multiplier: Multiplier for se threads based on vcpu. Allowed values are 1-10. Default value when not specified in 
# se_tunnel_mode: Determines if dsr from secondary se is active or not. 0  automatically determine based on hypervisor 
# se_tunnel_udp_port: Udp port for tunneled packets from secondary to primary se in docker bridge mode. Field introduced in 
# se_udp_encap_ipc: Determines if se-se ipc messages are encapsulated in an udp header. 0  automatically determine based on 
# se_vs_hb_max_pkts_in_batch: Maximum number of aggregated vs heartbeat packets to send in a batch. Allowed values are 1-256. Field 
# se_vs_hb_max_vs_in_pkt: Maximum number of virtualservices for which heartbeat messages are aggregated in one packet. Allowed 
# service_ip_subnets: Subnets assigned to the se group. Required for vs group placement. Field introduced in 17.1.1. 
# significant_log_throttle: This setting limits the number of significant logs generated per second per core on this se. Default is 
# state: The state that should be applied on the entity. 
# tenant: Name of tenant used for all Avi API calls and context of object. 
# tenant_ref: It is a reference to an object of type tenant. 
# tenant_uuid: UUID of tenant used for all Avi API calls and context of object. 
# udf_log_throttle: This setting limits the number of udf logs generated per second per core on this se. Udf logs are 
# url: Avi controller URL of the object. 
# username: Username used for accessing Avi controller. The default value is the environment variable 
# uuid: Unique object identifier of the object. 
# vcenter_clusters: Vcenterclusters settings for serviceenginegroup. 
# vcenter_datastore_mode: Enum options - vcenter_datastore_any, vcenter_datastore_local, vcenter_datastore_shared. Default value 
# vcenter_datastores: List of vcenterdatastore. 
# vcenter_datastores_include: Boolean flag to set vcenter_datastores_include. Default value when not specified in API or module is 
# vcenter_folder: Folder to place all the service engine virtual machines in vcenter. Default value when not specified in 
# vcenter_hosts: Vcenterhosts settings for serviceenginegroup. 
# vcpus_per_se: Number of vcpus for each of the service engine virtual machines. Default value when not specified in API 
# vs_host_redundancy: Ensure primary and secondary service engines are deployed on different physical hosts. Default value 
# vs_scalein_timeout: Time to wait for the scaled in se to drain existing flows before marking the scalein done. Default value 
# vs_scalein_timeout_for_upgrade: During se upgrade, time to wait for the scaled-in se to drain existing flows before marking the scalein 
# vs_scaleout_timeout: Time to wait for the scaled out se to become ready before marking the scaleout done. Default value when 
}- name: ${2:Name for avi_serviceenginegroup module.}
  avi_serviceenginegroup:
${3:   ${4:active_standby}: ${5:"#"}}
${6:   ${7:advertise_backend_networks}: ${8:"#"}}
${9:   ${10:aggressive_failure_detection}: ${11:"#"}}
${12:   ${13:algo}: ${14:"#"}}
${15:   ${16:api_version}: ${17:"#"}}
${18:   ${19:archive_shm_limit}: ${20:"#"}}
${21:   ${22:async_ssl}: ${23:"#"}}
${24:   ${25:async_ssl_threads}: ${26:"#"}}
${27:   ${28:auto_rebalance}: ${29:"#"}}
${30:   ${31:auto_rebalance_interval}: ${32:"#"}}
${33:   ${34:auto_redistribute_active_standby_load}: ${35:"#"}}
${36:   ${37:buffer_se}: ${38:"#"}}
${39:   ${40:cloud_ref}: ${41:"#"}}
${42:   ${43:connection_memory_percentage}: ${44:"#"}}
${45:   ${46:controller}: ${47:"#"}}
${48:   ${49:cpu_reserve}: ${50:"#"}}
${51:   ${52:cpu_socket_affinity}: ${53:"#"}}
${54:   ${55:custom_securitygroups_data}: ${56:"#"}}
${57:   ${58:custom_securitygroups_mgmt}: ${59:"#"}}
${60:   ${61:custom_tag}: ${62:"#"}}
${63:   ${64:dedicated_dispatcher_core}: ${65:"#"}}
${66:   ${67:description}: ${68:"#"}}
${69:   ${70:disk_per_se}: ${71:"#"}}
${72:   ${73:distribute_load_active_standby}: ${74:"#"}}
${75:   ${76:enable_routing}: ${77:"#"}}
${78:   ${79:enable_vip_on_all_interfaces}: ${80:"#"}}
${81:   ${82:enable_vmac}: ${83:"#"}}
${84:   ${85:extra_config_multiplier}: ${86:"#"}}
${87:   ${88:extra_shared_config_memory}: ${89:"#"}}
${90:   ${91:floating_intf_ip}: ${92:"#"}}
${93:   ${94:floating_intf_ip_se_2}: ${95:"#"}}
${96:   ${97:ha_mode}: ${98:"#"}}
${99:   ${100:hardwaresecuritymodulegroup_ref}: ${101:"#"}}
${102:   ${103:hm_on_standby}: ${104:"#"}}
${105:   ${106:host_attribute_key}: ${107:"#"}}
${108:   ${109:host_attribute_value}: ${110:"#"}}
${111:   ${112:hypervisor}: ${113:"#"}}
${114:   ${115:instance_flavor}: ${116:"#"}}
${117:   ${118:iptables}: ${119:"#"}}
${120:   ${121:least_load_core_selection}: ${122:"#"}}
${123:   ${124:log_disksz}: ${125:"#"}}
${126:   ${127:max_cpu_usage}: ${128:"#"}}
${129:   ${130:max_scaleout_per_vs}: ${131:"#"}}
${132:   ${133:max_se}: ${134:"#"}}
${135:   ${136:max_vs_per_se}: ${137:"#"}}
${138:   ${139:mem_reserve}: ${140:"#"}}
${141:   ${142:memory_per_se}: ${143:"#"}}
${144:   ${145:mgmt_network_ref}: ${146:"#"}}
${147:   ${148:mgmt_subnet}: ${149:"#"}}
${150:   ${151:min_cpu_usage}: ${152:"#"}}
${153:   ${154:min_scaleout_per_vs}: ${155:"#"}}
${156:   ${157:name}: ${158:"#"}}
${159:   ${160:non_significant_log_throttle}: ${161:"#"}}
${162:   ${163:num_flow_cores_sum_changes_to_ignore}: ${164:"#"}}
${165:   ${166:openstack_availability_zone}: ${167:"#"}}
${168:   ${169:openstack_availability_zones}: ${170:"#"}}
${171:   ${172:openstack_mgmt_network_name}: ${173:"#"}}
${174:   ${175:openstack_mgmt_network_uuid}: ${176:"#"}}
${177:   ${178:os_reserved_memory}: ${179:"#"}}
${180:   ${181:password}: ${182:"#"}}
${183:   ${184:per_app}: ${185:"#"}}
${186:   ${187:placement_mode}: ${188:"#"}}
${189:   ${190:realtime_se_metrics}: ${191:"#"}}
${192:   ${193:se_deprovision_delay}: ${194:"#"}}
${195:   ${196:se_dos_profile}: ${197:"#"}}
${198:   ${199:se_ipc_udp_port}: ${200:"#"}}
${201:   ${202:se_name_prefix}: ${203:"#"}}
${204:   ${205:se_remote_punt_udp_port}: ${206:"#"}}
${207:   ${208:se_thread_multiplier}: ${209:"#"}}
${210:   ${211:se_tunnel_mode}: ${212:"#"}}
${213:   ${214:se_tunnel_udp_port}: ${215:"#"}}
${216:   ${217:se_udp_encap_ipc}: ${218:"#"}}
${219:   ${220:se_vs_hb_max_pkts_in_batch}: ${221:"#"}}
${222:   ${223:se_vs_hb_max_vs_in_pkt}: ${224:"#"}}
${225:   ${226:service_ip_subnets}: ${227:"#"}}
${228:   ${229:significant_log_throttle}: ${230:"#"}}
${231:   ${232:state}: ${233:"#"}}
${234:   ${235:tenant}: ${236:"#"}}
${237:   ${238:tenant_ref}: ${239:"#"}}
${240:   ${241:tenant_uuid}: ${242:"#"}}
${243:   ${244:udf_log_throttle}: ${245:"#"}}
${246:   ${247:url}: ${248:"#"}}
${249:   ${250:username}: ${251:"#"}}
${252:   ${253:uuid}: ${254:"#"}}
${255:   ${256:vcenter_clusters}: ${257:"#"}}
${258:   ${259:vcenter_datastore_mode}: ${260:"#"}}
${261:   ${262:vcenter_datastores}: ${263:"#"}}
${264:   ${265:vcenter_datastores_include}: ${266:"#"}}
${267:   ${268:vcenter_folder}: ${269:"#"}}
${270:   ${271:vcenter_hosts}: ${272:"#"}}
${273:   ${274:vcpus_per_se}: ${275:"#"}}
${276:   ${277:vs_host_redundancy}: ${278:"#"}}
${279:   ${280:vs_scalein_timeout}: ${281:"#"}}
${282:   ${283:vs_scalein_timeout_for_upgrade}: ${284:"#"}}
${285:   ${286:vs_scaleout_timeout}: ${287:"#"}}
${288:${289:   become: ${290:true}} 
${291:   become_method: ${292:su}} 
${293:   become_user: ${294:nobody}} 
${295:   become_flags: ${296:"-s /bin/sh"}}} 
${297:   when: ${298:variable is defined}} 
${299:   with_items: ${300:array}} 
]]></content>
	<tabTrigger>avi_serviceenginegroup</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
